Suraj Shankar Sapkal
adgcuw@r.postjobfree.com Worcester, MA 774-***-**** GitHub LinkedIn Portfolio
EDUCATION
Worcester Polytechnic Institute • Master of Science in Robotics Engineering • GPA: 4.0 • Aug 18 - May 20 Vishwakarma Institute of Technology • Bachelor of Science in Production Engineering • GPA: 3.7 • Aug 11 - May 15 Udacity Nanodegree • Robotics Software Engineer • Sensor Fusion • Computer Vision* Coursera • Probability and Statistics • Machine Learning SKILLS
Modern C++ MATLAB Robot Operating System (ROS) Eigen Git NumPy PyTorch TensorFlow Python SQL Point Cloud Library (PCL) OpenCV Gazebo scikit-learn Keras CATIA EXPERIENCE
6 River Systems, Waltham, MA Software Engineering Intern (Perception) Sep 19 - Present
• Derived the confidence matrix and calculated the margin of error for the depth image data based on the experiments conducted for studying the effect of distance, resolution, glare, exposure, and motion blur for Intel RealSense D435.
• Tuned the environment-specific camera preset parameters using Z statistics also, designed and implemented the spatial and temporal filters to get most out from the depth image data without a significant trade-off in the accuracy.
• Developed the ROS C++ package for dynamically reconfiguring the camera parameters based on the environment.
• Working on visualization package which filters the point-cloud data using logistic regression and streams the filtered data. Southie Autonomy, Boston, MA Robotics Software Intern Jun 19 - Aug 19
• Developed the generic Grasp pose generator package in ROS C++ using PCL, Eigen, ODE physics engine, and Gazebo to generate the object’s point cloud, possible resting poses, and feasible grasp poses based on the object’s STL file.
• Filtered the feasible grasp poses based on occlusion, collision, and reachability constraints also, devised the pick and place pose ranking algorithm based on the transformation matrix, joint state, and joint geometry. Worcester Polytechnic Institute, Worcester, MA Graduate Teaching Assistant May 19 - Aug 19
• Helped the students with robot dynamics and control course by conducting lab tutorial sessions, office hours, and grading. Infosys, India Senior Systems Engineer (Robotic Process Automation) Jul 15 - Jun 18
• Worked with the team to automate the user creation and purchase order creation workflow using SAP Process automation.
• Optimized the system utilization by ordering the SAP processes in a temporal series, Won the INSTA award for this task. PROJECTS
Lidar Obstacle Detection (Project link) PCL, CMake, C++
• Implemented the RANSAC for plane fitting and K-D tree for clustering to develop Lidar based obstacle detection pipeline. Verified and visualized the result using PCL functionality like voxel grid, box filter, segmentation, clustering, and visualizer. Lidar and Radar Fusion using Unscented Kalman Filter (Radar link) (UKF link) Eigen, MATLAB, FFT, PCL, CMake, C++
• Detected the range, velocity, and approach angle of vehicles using FMCW radar. Implemented CFAR for noise suppression and derived CTRV (constant turn rate and velocity model) for modeling the motion of the vehicles. Implemented kalman filter, extended kalman filter, and unscented kalman filter for fusing the Radar and Lidar data for tracking the vehicles. Lidar and Camera Fusion for Object Tracking (Analysis link) (Tracking part link) YOLO, OpenCV, PCL, CMake, C++
• Analyzed the different kinds of feature detectors, descriptors, and matching algorithms. Fused the Lidar data on the image plane and detected the objects using YOLO, based on the feature tracking and Lidar data calculated the time to collision. Semantic Segmentation using Encoder-Decoder Based Network (Project link) PyTorch, Python, NumPy
• Designed the encoder-decoder based neural network using a pre-trained VGG16 model in PyTorch. Created four different variations of the model by changing the pooling and upsampling strategies. Evaluated performance on the Cityscapes dataset to conclude that passing the feature maps of an encoder layer to decoder improves the segmentation performance. Facial Keypoints Detection (Project link) OpenCV, PyTorch, Python
• Preprocessed the image data using the Gaussian filter and detected the faces in the image using Haar cascade. Integrated the Haar cascade with a custom CNN model and trained in PyTorch for Facial keypoint detection. Real-Time Object Detection (Project link) R-CNN, OpenCV, TensorFlow, Python
• Compared the classical computer vision techniques like SIFT, Hough transform, template matching, color thresholding with deep learning-based Faster-RCNN model trained using TensorFlow for object detection and pose estimation. Home Service Robot (Project link) ROS, Gazebo, C++, Rviz
• Designed the simulation environment and robot model using Gazebo and URDF, also created the ROS node for tracking the object in the environment. Integrated the AMCL, R-TAB map, and ROS navigation stack to enable the robot to move autonomously in the environment. (Consists of five sub-projects) Navigation of Turtlebot3 in a Known Environment (Project link) ROS, Gazebo, C++, rviz
• Implemented a Particle filter algorithm for the localization of TurtleBot3 in an occupancy grid map, generated using GMapping. Developed the navigation stack using A* and RRT in ROS C++ to navigate Turtlebot3 in a static environment. Analysis of Baxter Robot for Pick and Place Applications MATLAB, Gazebo, C++
• Used iterative closet point, direct linear transform and gradient descent to solve camera calibration and inverse kinematics ACTIVITIES: Winner OpenCV Spatial AI Challenge Phase-1 • Data Structure Guide • ROS project setup guide • Statistics guide*
Contact this candidate