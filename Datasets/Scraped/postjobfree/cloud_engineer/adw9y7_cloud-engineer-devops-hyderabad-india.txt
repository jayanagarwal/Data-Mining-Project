M. Shaker
Sr. AWS DevOps Engineer
Visa: Green Card
Current Location: Jersey City, NJ 07030
Email: - adw9y7@r.postjobfree.com
Contact No: - 984-***-****

Professional Summary:

Overall 8+ years of extensive experience in Automating, configuring and deploying instances on cloud environments and Data centers. Experience in the areas of DevOps Practices, CI /CD Pipeline, Docker, Kubernetes, Build and release management, AWS/Azure and Linux/Windows Administration.
Involved in building and operating DevOps CI/CD Pipeline.
Experience working with CICD pipeline for containerized (Docker) applications on Kubernetes using Git, Maven and Jenkins.
Experience working on various DevOps technologies/ tools like: GIT, SVN, Maven, Gradle, ANT, Jenkins, Puppet, Chef, Ansible, Docker, Kubernetes, AWS and Azure.
Experience in managing applications using AWS Cloud which includes services like: EC2, S3, EBS, VPC, ELB, AMI, SNS, SQS, RDS, IAM, Route53, Autoscaling, CloudFront, AWS Lambda, CloudWatch, Cloud Formation, OPS Work, Security Groups.
Created Docker images using a Docker file, worked on Docker container snapshots, removing images and managing Docker volumes’
Implemented Kubernetes for Orchestration with Docker.
Hands on experience in creating pods and managing on the cluster environment on Kubernetes.
Worked on OpenShift to leverage integrated components from Kubernetes to automate Application builds, Deployments, scaling and management.
Used Red hat OpenShift to improve application security by putting admin consoles on different Docker containers accessible only from unusual port numbers.
Extensively worked on Hudson, Jenkins and Team City for continuous integration and for End-to-End automation for all build and deployments.
Hands of experience on application server maintenance and J2EE application deployment in application servers like Apache, Tomcat and IBM Web Sphere.
Experience in using virtualization tools like Virtual Box, VMware and provisioning virtual machines using Vagrant.
Operational experience with multiple OpenStack distributions like Mirante’s OpenStack, Red Hat OpenStack, and OpenStack Ansible project.
Experience in working for a high scalability and high availability environment running Linux and Windows.
Experience in using Nexus Artifactory Repository Managers for ANT, Maven and Gradle Builds.
Experience in designing end to end automation of infrastructure and continuous delivery of the applications by integrating cloud formation scripts, Jenkins, AWS and Chef Cookbooks and recipes.
Configured Chef Infrastructure. Setup chef infrastructure for various environments. Used open-source chef, chef-solo and chef-zero. Also, written various cookbooks for infrastructure automation.
Expertise in creating Chef Cookbooks/Recipes, custom resources, libraries, etc. Implemented exception handling using chef handler.
Configuring and maintaining Puppet master server, creating modules and pushing them to puppet clients around hundreds of servers.
Experience working with Puppet, Chef and Ansible for configuration management and application deployments and creating puppet modules to provision Apache web servers, Tomcat servers, MySQL and Mongo DB database servers.
Used PowerShell for DevOps in Windows based system.
Experience in Creating Snapshots and Amazon Machine Images (AMIs) of the instances for backup and creating clone instances.
Hands on exp. On website code and website patch Deployment and deployment tools like U Deploy (IBM), U Release, GIT, Jenkins, and Antifactory.
Hands on experience with messaging systems like JMS using RabbitMQ.
Experienced in setting up Amazon EC2 instances, virtual private cloud (VPCs), and security groups.
Performed automation engineer tasks and implemented the ELK stack (Elastic search, Kibana) for AWS EC2 hosts.
Worked with team to implement ELK (elastic search, log stash and Kibana) Stack on AWS.

Education:

Bachelors in Mechanical Engineering from Jawaharlal Nehru Technological University of Hyderabad (India) 2014.
Masters in Information Technology in Computer Science from Wilmington University 2018.

Technical Skills:
Version Control Tools: Git, GitHub, GitLab’s Atlassian Bitbucket, SVN
Languages: C, C++, .Net, PHP, Python, Shell, YAML, Ruby, Go.
Build Tools: Apache ANT, Maven, Gradle, Microsoft Build.
Databases: Oracle 9i/10g/11g/12c, MySQL, DB2, Mongo DB, Cassandra.
Continuous Integration Tools: Jenkins, Team City,
Artefact Repository Management Tools: Nexus, J Frog.
Configuration Management Tools: Ansible, Puppet, Chef.
Containerization/Orchestration: Docker, Kubernetes, Apache Mesos, Marathon, Prometheus.
Cloud Providers: AWS, Azure, Google Cloud Platform (GCP), Open Stack, PCF.
Bug Tracking Tools: JIRA, REMEDY, IBM ClearQuest.
Monitoring Tools: NAGIOS, Splunk, and Cloud Watch.
Operating Systems/Virtualization Tools: Linux, Windows Servers, Ubuntu, Virtual Box, VMware.
Application Servers/ Middleware: Apache Tomcat, WebLogic, WebSphere, JBOSS.

Professional experience

Client: Zoro June 2021 to Till Date
Location: Buffalo Grove, Illinois
Role: Sr. AWS DevOps Engineer

Responsibilities:

Deploy and monitor scalable infrastructure on Amazon web services (AWS) & configuration management.
Worked on Terraform for configuration management and infrastructure automation.
Hosting of applications with the Amazon Web Services Cloud.
Experience in creating auto scaling groups in EC2 instances.
Wrote cloud formation scripts for various resources like EC2, ELB, Security groups.
Worked with OpenShift platform in managing Docker containers and Kubernetes Clusters.
Involved in Migrating Objects from Teradata to Snowflake.
Created monitors, alarms and notifications for EC2 hosts using Cloud Watch.
Wrote script to monitor crontab error messages and publish this to AWS CloudWatch using PERL.
Building/Maintaining Docker container clusters managed by Kubernetes Linux, Bash, GIT, Docker, on GCP (Google Cloud Platform). Utilized Kubernetes and Docker for the runtime environment of the CI/CD system to build, test deploy.
Administer Splunk as well as create, test and deploying operational search strings
Used Git to resolve and coding the work on Python and portlet.
Performed Automation using Shell and Python Scripts.
Created Nagios Monitoring infrastructure, various Nagios Plugins Scripts Perl & Python based for checking health of App servers and for Monitoring load.
Involved in development of test environment on Docker containers and configuring the Docker containers using Kubernetes.
Used date-format and moment packages in Node.JS to save the timestamp in database converting.
Implemented generating the verification hash code using crypto package on Node.JS.
Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code.
Managed different infrastructure resources, like physical machines, VMs and even Docker containers using Terraform - it supports different cloud service providers like AWS.
Used the AWS-CLI to suspend an AWS Lambda function processing an Amazon Kinesis stream, then to resume it again.
Applying new variables, secret files and application support files using ansible playbooks and ansible roles.
Automate and deploy development environments using Ansible to various cloud providers Amazon AWS and EC2, Rackspace, Azure, Travis and Jenkins testing.
Experience in using AWS command line EBS (Elastic bean stalk).
Experience in implementing project using Agile and Waterfall, Scrum Methodologies.
Developed Puppet modules to automate deployment, configuration, and lifecycle management of key clusters.
Used CLOUDWATCH to actively monitor stats from all services in AWS solutions.
Implemented rapid-provisioning and life-cycle management for Red Hat Linux using Kick start & Puppet
Worked with JIRA for Issue Tracking and monitoring.
Experience in writing the HTTP RESTful Web services and SOAP API's in Golang.
Used Docker to automate the deployment of Linux applications inside software containers. Docker provides an additional layer of abstraction and automation of operating-system-level virtualization on Linux.
Experience in containerizing maven applications using Docker and deployed to Kubernetes.
Experience working in an agile environment in the broader context of Scaled Agile Framework
Coordinated different teams across the globe to deploy different builds to different environments on parallel development for multiple projects. (DEV, QA, PERF, AUTH, UAT, PRODUCTION).
Involved in database design and developed SQL Queries on MySQL.
Installing and administering, Jenkins and Artifactory on AIX servers. Deployed the applications to Tomcat Application Server and static content to Apache web servers.

Environment: Amazon Web Services (AWS), Ansible, GIT, Splunk, CI/CD, Jenkins, Spark, Terraform, Hadoop, Artifactory, JIRA, Apache, Ant, Golang, Sonar, Putty, Python, SQL and MY SQL, Kubernetes.

Client: Syneos Health Aug 2019 to May 2021
Location: Morrisville- North Carolina
Role: DevOps Engineer

Responsibilities:

Worked on google cloud platform (GCP) services like compute engine, cloud load balancing, cloud storage, cloud SQL, stack driver monitoring and cloud deployment manager.
Automated Build and Deployment process-setup Continuous Integration and Continuous Deployment of applications onto different environments like Dev, QA and Production.
Experience Working on Google Cloud Platform, Internet of Things (IoT). Worked on OpenStack-manuals and Security Guide to the OpenStack Community.
Maintained and developed Docker images for a tech stack including Cassandra, Kafka, Apache, and several in house written Java services running in Google Cloud Platform (GCP) on Kubernetes.
Worked in an agile environment to develop and maintain new CI/CD pipeline which was used by multiple products and services.
Worked with CICD pipeline for containerized (Docker) applications on Kubernetes using Git, Maven and Jenkins.
Implemented Continuous Integration and Delivery framework using GitHub, Maven, Jenkins, Nexus and Ansible.
Administrating, installation, configuration of SonarQube Software and scan the code analysis.
Virtualized the servers using the Docker for the test environments and dev-environments needs. And, configuration automation using Docker containers.
Developed procedures to unify, streamline and automate application development and deployment procedures with container technology using Docker.
Used Kubernetes to manage containerized applications using its nodes, Config Maps, selector, Services and deployed application containers as Pods.
Developing and maintaining the source code control system, build environment, and managing build packages using TFS.
Setup Octopus Deploy tool to automate .Net deployments across different projects.
Responsible for performing both Staging and Production deployments using deployment preparation and setup deployment PowerShell scripts and via tools which includes like Octopus.
Design included high availability and elastic controllers managing application, MySQL and web server clusters on virtual machines running under OpenStack initialized via Chef Cookbook recipes.
Conceptualized a CI infrastructure using a combination of Python, Chef, Vagrant + Virtual Box, and Jenkins to perform automated installation and API level testing (i.e., Tempest, Rally) for an OpenStack platform product deployed on bare metal systems.
Deploy and monitor scalable infrastructure on Amazon web services (AWS) & configuration management using Ansible.
Installed Ansible Tower and wrote playbooks, created roles to rollout configurations to different environments.
Processed requests for deployments to environments in U Deploy.
Managing the multi-tier and multi-region architecture using AWS Cloud Formation and Automating the Cloud Formation using Terraform.
In-depth knowledge of AWS automation services - Cloud Formation templates, Terraform.
Developed Open Stack API to integrate with Amazon EC2 Cloud based architecture in AWS, including creating machine Images.
Created playbooks for AWS deployments and bug fixes with Ansible.
Experienced with installation of AWS CLI to control various AWS services through SHELL/BASH scripting.
Used AWS Beanstalk for deploying and scaling web applications and services developed with Java.
Support Experience with automation testing tools like Selenium for Java Application.
Expert in launching Amazon EC2 Cloud Instances using Amazon Web Services (Linux/Ubuntu) and configuring launched instances with respect to specific applications.
Configured tools like Elastic Search, Log stash and Kibana.
Monitored Application and server logs using the ELK stack.
Administration of the tools with this order GitHub, JIRA, Puppet, Octopus Deploy and ELK stack

Environment: AWS, Puppet, Chef, Ansible, OpenStack, GIT, Jenkins, Gradle, Octopus, U Deploy, JIRA, Docker, Kubernetes, Linux, Apache Tomcat, MongoDB, WebSphere, Python script, Ruby script, MySQL.

Client: CVS Health
Location: Woonsocket, Rhode Island Mar 2018 – July 2019
DevOps /Cloud AWS Engineer.

Responsibilities:
Experience to build CI/CD Pipeline to automate the code release process using Integration tool Jenkins. Used Shell script to perform testing on Jenkins.
Worked Extensively on building and maintaining clusters managed by Kubernetes, Linux, Bash, GIT, Docker, on GCP (Google Cloud Platform).
Deployed Docker containerized applications using Kubernetes in Google Cloud Platform.
Installing and configuring Jenkins, installing plug-in, configuring security, creating a master and slaves for implementation of multiple parallel builds.
Used Ant as build tool on Java projects for the development of build artifacts on the source code.
Expertise in deploying artifacts like WAR, JAR using Puppet on QA, PROD Environments.
Experience in installation, set-up, and management of build servers and management tools like Jenkins, GIT, Jira, Selenium, ANT, Maven, Python, Tomcat, etc.
Used Docker, Kubernetes and OpenShift to manage micro services for development of continuous integration and continuous delivery.
Performed automation engineer tasks and implemented the ELK stack (Elasticsearch, Kibana) for AWS EC2 hosts.
Deployed and configured Elastic search, Log stash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWS Lambda and Cloud Watch.
Worked on Virtual Machine, Data Stores, VM Clusters, and Virtual Switches.
Experience in working with Selenium IDE and Selenium Web Driver using TestNG. Worked with Development and QA teams to continuously integrate software development using GIT, Maven, and Jenkins.
Developed build and deployment scripts using Maven as build tool in Jenkins to move from one environment to other environments and involved in editing the existing Maven files in case of errors or changes in the project requirements.
Worked on Virtual Machine, Data Stores, VM Clusters, and Virtual Switches
Integrated Ant and Maven with TFS source control to automatically trigger Builds and publish results back to TFS.
Involved in release and deployment of large-scale C#, Website and Web applications using TFS repository.
Debug and resolve Pre-Post OpenStack deployment failures.
Created playbooks for OpenStack deployments and bug fixes with Ansible.
Used the Application Server Admin (JBOSS/ Tomcat) to manage the systems remotely using Ansible and using Linux.
Communicated with groups to create REST API services to expose team data in a secure way with token-based authentication.
Docker the java Spring Boot micro service application by writing the Docker file as required.
Used RHEL Atomic host as the Docker host and did a proof of concept with a use case of 3 tier web-app-db. Java application to host with in Docker containers.
Used Kubernetes to deploy scale, load balance, scale and manage Docker containers with multiple namespace versions.
In charge of creation and modification of Instances, AMI’s, and Security Groups within EC2. Monitor and built reports through Cloud Watch.
Wrote AWS Lambda functions in python for AWS's Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters.
Used the AWS-CLI to suspend an AWS Lambda function processing an Amazon Kinesis stream, then to resume it again.
Implemented DNS service through Route 53 on ELBs to achieve secured connection via HTTPS.
Deploy and monitor scalable infrastructure on Amazon web services (AWS) & configuration management using Ansible.
Installed Ansible Tower and wrote playbooks, created roles to rollout configurations to different environments.
Configured Chef Infrastructure. Setup chef infrastructure for various environments. Used open-source chef, chef-solo and chef-zero. Also, written various cookbooks for infrastructure automation.
Expertise in creating Chef Cookbooks/Recipes, custom resources, libraries, etc. Implemented exception handling using chef handler.
Creating Cloud Formation scripts for hosting software on AWS cloud and automating the installation of software through PowerShell scripts.
Worked with Nexus repository manager to proxy, collect, and manage the dependencies on the collection of JARs.
Developed Open Stack API to integrate with Amazon EC2 Cloud based architecture in AWS, including creating machine Images.
Employed automation, utilizing PowerShell and batch scripting best practices and Cloud Formation templates, to ensure repeatable deployments and for automating the AMI image deployment.
Designed and developed UNIX shell scripts to schedule jobs. Also wrote pre-session and post-session shell scripts, Wrote PL/SQL scripts for dropping, debugging and rebuilding indexes.
Developed Dev/Test/Prod environments of different applications on AWS by provisioning Kubernetes clusters on EC2 instances using Docker, Bash, Chef, and Terraform.

Environment: AWS, Maven, GIT, MySQL, TFS, LINUX, Jenkins, MongoDB, Microservices, Docker, Kubernetes, JIRA, Ansible, Apache Tomcat, Bash script, PowerShell and Shell Script.

Client: Parchment June 2016 – Feb 2018
Scottsdale, Arizona
Role: DevOps Cloud Engineer

Responsibilities:
Worked with Development and QA teams to continuously integrate software development using GIT, Maven, and Jenkins.
Developed build and deployment scripts using Maven as build tool in Jenkins to move from one environment to other environments and involved in editing the existing Maven files in case of errors or changes in the project requirements.
Worked on Virtual Machine, Data Stores, VM Clusters, and Virtual Switches
Integrated Ant and Maven with TFS source control to automatically trigger Builds and publish results back to TFS.
Involved in release and deployment of large-scale C#, Website and Web applications using TFS repository.
Debug and resolve Pre-P
ost OpenStack deployment failures.
Created playbooks for OpenStack deployments and bug fixes with Ansible.
Used the Application Server Admin (JBOSS/ Tomcat) to manage the systems remotely using Ansible and using Linux.
Developed the solution from the ground up which utilizes: Spring Tool Suite, Spring Boot, Maven, Java 8, Eclipse, a RESTful microservices architectures using JPA (Java Persistence API), JDBC, Hibernate, MySQL, and Ubuntu 16.
Communicated with groups to create REST API services to expose team data in a secure way with token-based authentication.
Docker the java Spring Boot micro service application by writing the Docker file as required.
Used RHEL Atomic host as the Docker host and did a proof of concept with a use case of 3 tier web-app-db. Java application to host with in Docker containers.
Used Kubernetes to deploy scale, load balance, scale and manage Docker containers with multiple namespace versions.
In charge of creation and modification of Instances, AMI’s, and Security Groups within EC2. Monitor and built reports through Cloud Watch.
Wrote AWS Lambda functions in python for AWS's Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters.
Used the AWS-CLI to suspend an AWS Lambda function processing an Amazon Kinesis stream, then to resume it again.
Implemented DNS service through Route 53 on ELBs to achieve secured connection via HTTPS.
Deploy and monitor scalable infrastructure on Amazon web services (AWS) & configuration management using Ansible.
Installed Ansible Tower and wrote playbooks, created roles to rollout configurations to different environments.
Configured Chef Infrastructure. Setup chef infrastructure for various environments. Used open-source chef, chef-solo and chef-zero. Also, written various cookbooks for infrastructure automation.
Expertise in creating Chef Cookbooks/Recipes, custom resources, libraries, etc. Implemented exception handling using chef handler.
Creating Cloud Formation scripts for hosting software on AWS cloud and automating the installation of software through PowerShell scripts.
Worked with Nexus repository manager to proxy, collect, and manage the dependencies on the collection of JARs.
Developed Open Stack API to integrate with Amazon EC2 Cloud based architecture in AWS, including creating machine Images.
Employed automation, utilizing PowerShell and batch scripting best practices and Cloud Formation templates, to ensure repeatable deployments and for automating the AMI image deployment.
Designed and developed UNIX shell scripts to schedule jobs. Also wrote pre-session and post-session shell scripts, Wrote PL/SQL scripts for dropping, debugging and rebuilding indexes.
Developed Dev/Test/Prod environments of different applications on AWS by provisioning Kubernetes clusters on EC2 instances using Docker, Bash, Chef, and Terraform.

Environment: AWS Cloud, AIX and Windows, Bamboo, BMC Remedy, Shell, Python, Web Logic Server, JDK1.7, XML, SVN, Jenkins, Maven, GIT, Jira, SQL, J2EE, Puppet, Perl, Cruise Control, White source, UNIX, Windows.

Client: Centene Corporation Nov 2014 – April 2016
St. Louis, Missouri
Linux Administrator

Responsibilities:

Shell scripts created in Bash to automate the deployments for the Java based applications. Managed the deployment activities for multiple server instances by enabling password less SSH communication between the servers and utilizing the resync utility in the shell scripts.
Worked on LVM Creating, Extending and Resizing volumes online.
Responsible for 200+ Servers in heterogeneous environment providing direct user support for 350 users on site.
Installing, Configuring and maintaining of samba, Apache Tomcat, Web Sphere and JBoss servers in AIX and Linux environment.
Routinely performing system and application updates with yum and rpm.
Resolving TCP/IP connectivity issues using tools ping, traceroute and Net Stat.
Resolving system related issues responding to development environment needs.
Also responsible for inventory and decommission hardware, working in data center racking, stacking and cabling systems.
Responsible for user management (creating, modifying, closing accounts)
Installing, configuring and updating (RHEL) Red Hat Enterprise Linux 4, 5 using media and Jumpstart and Kickstart.
Installed, configured, and maintained application servers Oracle WebLogic Tomcat, and Web Servers Oracle HTTP Server (OHS), WebSphere, IIS.
Diagnosing, troubleshooting, and resolving performance issues along with other application, network and system problems.
Building up virtual machines with VMware and participated in disaster recovery planning, implementation and testing.
Maintained various activities like User & Security administration, multiple backups & recovery technologies (Snapshots, Disaster Recovery plan).
Configure NFS and Samba file sharing on Windows and Linux servers
Maintaining the CPU & Memory utilization of SUN Servers reports on the WEB.
User and Group Management and permissions for our internal file server.
Setup and maintained NFS, DNS, NIS, HTTP, FTP and TCP/IP network and knowledge in LDAP Server, worked on process scheduling, disk and file system I/O, kernel internals, TCP/IP networking.
Implemented solutions that reduced single points of failure and improved system uptime to 99.9% availability.
LVM configuration to manage volume group, logical and physical partitions
Administered RPM Package for installation, upgrading, and checking dependencies. Reconfiguring RPM database using RPM Build and creating YUM repository in red hat Linux.
Working on AD for users and group management, updating group policy and adding machines to domains.
Scraping Data from multiple websites analyzing and uploading to a Central Database.
Application optimization tuning, replication and configuration steps.
Strong work ethic and teamwork skills (referrals upon request).

Environment: IBM Storage Management Client, Bash, Red Hat Linux SUSE 10, HP, Oracle 11g, Oracle Web Logic, Red Hat J-Boss, VM Ware ESXI, Logical Volume Manager (Red Hat Linux), VMware Infrastructure client, NFS.
Contact this candidate