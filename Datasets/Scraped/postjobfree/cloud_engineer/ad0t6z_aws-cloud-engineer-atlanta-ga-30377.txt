RAKESH ANNAMAREDDY
Sr. DevOps/Cloud Engineer +1-402-***-**** Mail: ad0t6z@r.postjobfree.com
Professional Summary
●Successful DevOps AWS/Cloud Engineer with more than 8 years of professional experience dedicated to automation and optimization. Understands and manages the space between operations and development to quickly deliver code to customers. Has experience with the Cloud, as well as DevOps automation development for Linux systems. Seeking a position in DevOps AWS/Cloud to contribute my technical knowledge.
●Experienced in Linux Administration, Configuration Management, Continuous Integration (CI), Continuous Deployment, Release Management, and Cloud Implementations.
●Hands-on Experience in using configuration management tools like Puppet and Ansible
●Proficient in AWS Cloud platform and its features which includes EC2, VPC, EBS, AMI, SNS, RDS, EBS, Cloud Watch, Cloud Trail, Cloud Formation AWS Configuration, Autoscaling, CloudFront, IAM, S3, R53.
●Implemented Amazon EC2 setting up instances, virtual private cloud (VPCs), and security groups. Set up Internet Gateway (IGW) and Subnets and configured the route tables base on VPC. Good knowledge on IPv4(32-Bit), IPv6(128-Bit) addresses with VPC Peering.
●Set up databases in AWS using RDS, storage using S3 bucket, and configuring instance backups to S3 bucket.
●Worked on multi-availability zones with EFS and ELB with nesting of the security group.Design EC2 instance architecture to meet high availability application architecture and security parameters using auto-scaling.
●Worked with IAM service creating new IAM users & groups, defining roles and policies, and Identity providers.
●Knowledge of Azure infrastructure management (Azure Web Roles, Worker Roles, SQL Azure, Azure Storage, Azure AD Licenses), resource groups, and VPN.
●Managed the Windows Azure infrastructure for our customers depending on their requirements.
●Hands-on experience in Azure Development worked on Azure web application, App services, Azure storage, Azure SQL Database, Virtual machines, AZURE AD, Azure search, and notification hub.
●Extensively worked on Jenkins by installing, configuring, and maintaining for the purpose of continuous integration (CI) and for End to End automation for all build and deployments.
●Configured various jobs in Jenkins for the deployment of Java-based applications and running test suites.
●Well-versed with Ansible Playbooks, modules, and roles, using Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks, quickly deploys critical applications, and proactively manages change.
●Created a GoLang code base for Kubernetes deployment by using the source control of the deployment and HPS YAML files.
●Experience writing data APIs and multi-server applications to meet product needs using Golang.
●Logging Server Remotely using NGINX proxy server. To achieve the Continuous Delivery goal in the highly scalable environment, used Docker coupled with the load-balancing tool Nginx.
●Created cloud formation stack to automate Jenkins roll-outs with Nginx used as a reverse proxy to allow 443 encrypted access.
●Extensive experience using Puppet modules for application and infrastructure deployments and Chef Configuration management.
●Experience with Kubernetes to manage containerized applications, creating deployments, secrets, in grace services, and deploying application containers as pods using CLI and YAML files.
●Container management using Docker by writing Docker files and setup up the automated build on Docker Hub, and installing and configuring Kubernetes.
●Created and maintained Branches, labels, and workspaces on GIT, participated n the merging of source code.
●Skilled at setting-up Baselines, Branching, Merging, and Automation Processes using Shell and Batch Scripts and also supporting the developers in writing
●configuration specs. Installed, configured, modified, test & deployed applications on the Apache Web server and Tomcat App Servers.
●Good at scripting languages like Python and Bash and configuration management tools Terraform/Ansible/Puppet Engine and Web Service like AWS.
●Build and implement redundant and scalable load balancers with HAProxy.
●Created a private cloud using Kubernetes that supports DEV, TEST, and PROD environments. Experienced in using Tomcat, JBoss, WebLogic, and WebSphere Application servers for deployments.
●Experienced with the understanding of the principles and best practices of Software
Configuration Management (SCM) processes, which include Compiling, Packaging, Deploying, and Application configurations.

TECHNICAL SKILLS
●Cloud Platforms Amazon Web Services (EC2, S3, EBS, ELB, RDS, Route53, Auto Scaling, Security Groups, VPC, SQS, SNS, IAM, Lambda, Glacier), Azure
●Automation Tools Jenkins, Chef, Puppet, Ansible, Salt, Docker, Kubernetes, Terraform
●Web Services REST, DOM, Microservices
●Database Systems MySQL, AWS RDS, Dynamo DB, Redis
●Scripting Languages Perl, Python, Ruby, Bash/Shell Scripting, Groovy
●Servers Web Logic Application server, Apache Tomcat, JBoss, Nginx
●Version Control Tools Bit bucket, Subversion, GitHub, GitLab
●Monitoring Tools Log Stash, Splunk, Nagios, ELK, New Relic, Grafana
●Operating Systems Windows, Linux, Unix, MacOS, ubuntu
●Container Management Kubernetes, Docker Swarm, Rancher

Change Healthcare, Nashville, TN. Nov 2021 to Present
Sr .DevOps/Cloud Engineer
Responsibilities:
●Expertise in Amazon AWS Cloud Administration which includes services like S3, Glacier, EBS, VPC, ELB, AMI, SNS, RDS, IAM, Route 53, Auto scaling, Cloud Front, Cloud Watch, CloudTrail, Cloud Formation, OPS Work, Security Groups.
●Launching and configuring EC2 instances based on required storage, Inbound, and Outbound rules.
●Configuring Security Groups based on controlling the inbound traffic with specific ports required for instances.
●Implemented continuous integration (CI/CD) using Jenkins and GIT through Webhooks.
●Worked on Ansible and Ansible Tower as configuration management tools to automate repetitive tasks and used ad-hoc commands and YAML files to configure and run playbooks, Inventories, and Modules.
●Worked with Ansible playbooks for virtual and physical instance provisioning, configuration management, patching, and software deployment on AWS environments through automated tools and Ansible/custom pipeline.
●Developed Terraform templates to create load balancers (ELB), EC2 instances with auto-scaling, and monitoring on the fly for different environments such as QA, SIT, and stage, which will run on different VPCs.
●Aggregated and analyzed security and app logs with ELK (Elastic Search, Logstash, Kibana).
●Created Python bash scripts to Automate AWS services, including web servers, cloud front Distributions, EC2, and database security groups.
●Creating CloudWatch alerts using auto-scaling launch configurations for monitoring instances.
●Using Ansible deployed and configured Elastic search, Log stash, and Kibana (ELK) for log analytics, full-text search, and application monitoring in integration with AWS Lambda andCloudWatch.
●Worked on various Docker components like Docker Hub, Docker Engine, Docker Machine, and Docker Registry.
●Implemented Docker files, bind mounts, Docker-compose, Docker-swarm, and Docker networks using YAML files, Docker images, and containers.
●Troubleshooting of Docker-based applications. AWS Cloud management and Puppet automation.
●Configured the Kubernetes provider with Terraform, which is used to interact with resources supported by Kubernetes to create several services such as Config Map, Namespace, Volume, Auto scaler, etc.
●Creating the automated build and deployment process for application, re-engineering setup for better user experience, and leading up to building a Continuous Integration system.
●Automated deployments, scaling, and operations of application containers across clusters of hosts provided container-centric infrastructure by Kubernetes.
●Implemented and maintained the monitoring and alerting of production and corporate servers/storage using AWS CloudWatch logs, Nagios.
●Deploy, manage, and operate scalable, High Available, and fault-tolerant systems on AWS.
●Capability to provide AWS operations and deployment and best practices throughout the lifecycle of a project.
●Designed, configured, and deployed Microsoft Azure for a multitude of applications utilizing the Azure stack (Including Compute, Web & Mobile, Blobs, Resource Groups, Azure SQL, Cloud Services, and ARM), focusing on high - availability, fault tolerance, and auto-scaling.
●Experience in Microsoft Azure Cloud Services (PaaS & IaaS), Application Insights, Document DB, Internet of Things (IoT), Azure Monitoring, Key Vault, Visual Studio Online (VSO), and SQL Azure.
●Involvement in Designing Azure Resource Manager Template and in designing custom build steps using PowerShell.
●Exposed Virtual machines and cloud services in the VNets to the Internet using Azure External Load Balancer.
●Creating Storage Pool and Stripping of Disk for Azure Virtual Machines. Backup Configure and Restore Azure Virtual Machine using Azure Backup.
●Involved in CI/CD process using GIT, Nexus, Jenkins job creation, Maven build and Create Docker image and use the Docker image to deploy clusters.
●Installed and configured GIT and communicated with the repositories in GitHub. Coordinate all build and release activities, ensure release processes is well documented, and source control repositories, including branching and tagging.
●Involved in writing Ansible Playbooks from scratch using YAML functions and utilizing setup and automating the CI/CD pipeline, and deploying Microservices. Provisioned load balancer, auto-scaling group, and launch configuration for Microservices using Ansible.
●Build, manage, and continuously improve the build infrastructure for global software development engineering teams by implementing Continuous Integration using Jenkins.
●Created DEV and QA environments for many applications using docker-compose and containerization concepts.
●Knowledge and practical exposure in Docker, ECS, EKS, and Kubernetes.
●Worked on setting up Rancher orchestrator to manage Kubernetes everywhere it runs, worked with Rancher CLI.
●Worked with Docker components like Docker Engine, Hub, Compose, and registry for storing Docker images and files running multiple containers in staging and production environments.
●Build deployment, build scripts, and automated solutions using scripting languages like Shell, Bash, Perl, and Python scripting.
Environment: AWS, Terraform, Jenkins, Ansible, Kubernetes, GIT, Linux, Ubuntu, Puppet, YAML files, Docker files, Web Logic, Python, Shell scripts, Azure, Key vault, Azure virtual, Machines, Git, GitHub, Maven, Nexus, Docker, ECS, EKS, Docker, PowerShell, Python Scripts, Perl Scripts, Shell scripts.
Barclays, Atlanta, GA Aug 2019 to Oct 2021
DevOps/ Cloud Engineer
Responsibilities:
●Designed and developed AWS cloud infrastructure utilizing Ansible with AWS CloudFormation and Jenkins for continuous integration with high availability and secure multi-zones and automated end-to-end transit hub connectivity resource deployment in AWS using Terraform.
●Migrated services from a managed hosting environment to AWS, including service design, network layout, data migration, automation, monitoring, deployments and cutover, documentation, overall plan, cost analysis, and timeline.
●Designed AWS Cloud Formation templates to create custom-sized VPC, subnets, and NAT to ensure successful deployment of Web applications and database templates.
●Converted existing AWS infrastructure to server-less architecture (AWS Lambda) and deployed it via Terraform.
●Created IAM policies for administration in AWS to assist type applications and teams across local and remote areas.
●Transferred data from Datacenters to the cloud using AWS Import/Export Snowball service. Involved in various AWS networking and content delivery systems like Route 53, DirectConnect, VPC peering, and management tools like CloudWatch, CloudFormation, and CloudTrail.
●Automated the infrastructure for Kafka clusters different instances as per components in the cluster for creating multiple EC2 instances & attaching EBS volumes as per instance type in different availability zones & multiple regions in AWS.
●Wrote Python scripts using the Boto3 library to automatically spin up the instances in AWS EC2 and OpsWorks stacks and integrated with Auto scaling with configured AMIs.
●Experience in monitoring the availability & performance of AWS Linux servers through tools like vmstat, net stat, svmon, vmstat and iostat.
●Implemented Chef Recipes for Deployment on internal Data Centre Servers, re-used and modified same Chef Recipes to create a Deployment directly into Amazon EC2 instances.
●Managing security groups on AWS, focusing on high availability, fault tolerance, and auto-scaling using Terraform templates, along with Continuous Integration and Continuous Deployment with AWS Lambda and AWS Code Pipeline.
●Implemented continuous integration using Jenkins and configured security to Jenkins by adding multiple slaves for continuous deployments, and integrated Git with Jenkins to automate the code checkout process.
●Maintained and coordinated environment configuration, controls, code integrity, and code conflict resolution and used GIT for branching, tagging, and merging.
●Deployed new Splunk systems and monitored Splunk internal logs from the monitoring Console (MC) to identify and troubleshoot existing issues and was involved in customizing Splunk dashboards, visualizations, configurations, reports, and search capabilities using customized Splunk queries.
●Automated Datadog Dashboards with the stack through Terraform Scripts and configured CloudWatch and Datadog individual dashboards for each resource agent to monitor real-time granular metrics of all the AWS Services.
●Designed an ELK (Elastic Logstash Kibana) system to monitor and search enterprise alerts and configured ELK stack in conjunction with AWS and to use Logstash to output data to AWS S3 and terminated SSL on to Nginx to remove overhead on API servers.
Environment: AWS (EC2, EBS, S3, VPC, Code Deploy, Code Commit, Direct Connect, Snowball, Elastic Search, Lambda, API Gateway, Route 53 (DNS), CloudFormation, RDS, Dynamo DB, SNS, SQS, IAM, RedShift, Ops Works), Terraform, Maven, Chef, Jenkins, GIT, Python, Datadog, ELK, Jira, Linux, Ruby, JIRA, Vagrant, Bash, PowerShell.

Sony, San Diego, CA Sep 2017 – July 2019
DevOps Engineer
Responsibilities:
●Designed and implemented scalable, secure cloud architecture based on AWS and worked on Physical Cloud Migration in AWS. Set up and built AWS infrastructure for various resources, VPC EC2, S3, IAM, EBS, Security Group, Auto Scaling, and RDS in CloudFormation JSON templates.
●Worked on Terraform templates to build, change, and version Infrastructure as Code (IaaC) using AWS as a provider and launch multi-layered resource groups to be provisioned and configured with Terraform template.
●Setup and Implement Continuous Integration and Continuous Delivery (CI & CD) Process stack using AWS, GITHUB/GIT, Jenkins, and Chef.
●Integration of Automated Build with Deployment Pipeline. Currently installed Chef Server and clients to pick up the Build from Jenkins repository and deploy in target environments (Integration, QA, and Production).
●Building/Maintaining Docker container clusters managed by Kubernetes, Linux, Bash, GIT, and Docker, on AWS. Utilized Kubernetes and Docker for the runtime environment of the CI/CD system to build and test deployment.
●Provided a consistent environment using Kubernetes for deployment scaling and load balancing to the application from development through production, easing the code development and deployment pipeline by implementing Docker containerization.
●Worked with Chef Enterprise Hosted as well as On-Premises, Installed Workstation, Bootstrapped Nodes, Wrote Recipes and Cookbooks, and uploaded them to CHEF-server. Automated scripts using Chef as well as AWS for EC2/S3/Route53 & ELB with CHEF Cookbooks.
●Written Python and Shell scripts to monitor installed enterprise applications and to get Managed the configurations of multiple servers using Chef. Created multiple recipes and customized facts for efficient management of the Chef clients.
●Worked on Ansible to manage Web Applications, Config Files, Data Base, Commands, Users Mount Points, and Packages. Ansible to assist in building automation policies.
●Experience in customizing Splunk for Monitoring, Application Management, and Security as per customer requirements and industry best practices.
●Created Python & Shell scripts to fully automate AWS services which include ELB, GCP, CloudFront Distribution, EC2, Security Groups, and S3. This script creates stacks, single servers and joins web servers to stacks. Expert knowledge in Bash/Shell scripting and automation of cron jobs.
●Used ANT and MAVEN as a build tools on Java projects for the development of build artifacts on the source code.
●Developed Python and shell scripts for automation of the build and release process and developed Custom Scripts to monitor repositories, Server storage.
●Provided 24/7 on-call support on Linux Production Servers. Responsible for maintaining security on Linux.
Environment: AWS, ANT, MAVEN, Apache Tomcat, Shell, Python scripting, VMWare, GIT, GITHUB, Subversion, Jenkins, LINUX, UNIX, Chef, Ansible, JAVA, JBoss, WebLogic, VMWare, Nagios, MSSQL.
Techno soft crop, Chennai, INDIA Mar 2015 to Aug 2017
DevOps Engineer
Responsibilities:
●Worked as a core DevOps engineer who can bring an end-to-end workflow of Continuous
●Integration, Continuous Delivery, and Continuous Deployment Process
●Implemented Puppet Master, Puppet Console, and Puppet Agents and Created Puppet modules and Classes.
●Responsible for creating Puppet modules and Manifest files from scratch.
●Experienced in editing existing Puppet manifests and automating manual installation processes.
●Deployed Puppet dashboard for configuration management to existing infrastructure.
●Created Custom Puppet modules for bootstrapping new servers with required applications.
●Experienced in managing virtual instances and disks using Puppet.
●Configured and maintained Jenkins for Continuous Integration and end-to-end automation of all build and deployments.
●Designed and implemented continuous integration systems using Jenkins by creating Python and Perl scripts.
●Automated the build and deploy processes using Jenkins to move from one environment to environment.
●End-to-end design, setup, integration, and maintenance of CI/CD pipeline from source control to production.
●Set up constant security checks as part of the CI-CD pipeline and also monitor to prevent or respond faster to any events that might occur.
●Generated scripts in Maven, Perl &amp, Bash Shell for build activities in QA, Staging, and Production environments.
●Responsible for Plugin Management, User Management, regular incremental backups, and regular maintenance for recovery.
●Used ANT and MAVEN as build tools on Java projects for the development of build artifacts on the source code.
●Wrote Maven Scripts to automate the build process and managed the Maven Repository using
●Nexus tool and used the same to share the snapshots and releases of internal projects. Analyzed and resolved conflicts related to the merging of source code for GIT.
●Used Nagios as a monitoring tool to identify and resolve infrastructure problems before they affect critical processes.
●Deployed the generated build to the WEB and APP server using the continuous integration process to all Environments.
●Coordinated teams across the globe to deploy different builds to different environments on parallel development for multiple projects.
●Experience in system analysis, design, development, and implementation of large to medium scales.
Environment: GIT, Nagios, Puppet, Jenkins, Docker, Maven, Perl, Shell, Python, Ant, Nexus,
Contact this candidate