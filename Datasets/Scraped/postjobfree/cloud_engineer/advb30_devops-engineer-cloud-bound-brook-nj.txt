HEMANTH REDDY GUDIGOPURAM
Sr. DevOps & Cloud Engineer
732-***-****
advb30@r.postjobfree.com
www.linkedin.com/in/hemanth-g-a7615541

Professional Summary
Successful Cloud/DevOps Engineer with almost 7 years of professional Experience dedicated to automation and optimization. Understands and manages the space between operations and development to quickly deliver code to customers. Has experience with the CloudFront, as well as DevOps automation development for Linux systems. Seeking for a position in Cloud/ DevOps, to contribute my technical knowledge.

Hands-on experience in Azure Cloud Services (PaaS & IaaS), Storage, Web Apps, Active Directory, Application Insights, Logic Apps, Data Factory, Service Bus, Traffic Manager, Azure Monitoring, OMS, Key Vault, Visual Studio Online (VSO), Cognitive Services (LUIS) and SQL Azure.
Experience in Azure Development worked in azure net applications, Azure storages, Azure SQL Database, Virtual machines, Fabric Controller, Azure AD, Azure search and notification hub.
Expertise in Azure Development, worked on Azure Web Application, App services, Azure storage, Azure SQL Database, Virtual Machines, Fabric controller, Azure AD, Azure search, and Notification hub.
Proficient in Designing, planning and implementation for existing on premise applications to Azure Cloud (ARM), Configuring and deploying Azure Automation Scripts utilizing Azure stack (Compute, Web and Mobile, Blobs, ADF, Resource Groups, Azure Data Lake, HDInsight Clusters, Azure Data Factory, Azure SQL, Cloud Services and ARM), Services and Utilities focusing on Automation.
Experienced in ARM templates while building Servers (Windows, SQL, VM Scale Sets) backend and frontend needed for application migration on Azure Cloud.
Worked on AWS, EC2, cloud services for installing, configuring and troubleshooting on various components like Amazon Linux AMI, AIX, Rahat 5.x, Ubuntu 13.x, and 14.x.
Involved in AWS EC2/VPC/S3/SQS/SNS based automation through Terraform, Ansible, and Python. Adopted new features as they were released by Amazon, including ELB & EBS.
Experience in AWS cloud administration provisioning and managed services like: EC2, S3, Glacier, ELB (Load Balancers), VPC, AMI, SNS, SWF, RDS, IAM, ROUTE 5z, Auto Scaling, Cloud Front, Cloud Watch, Cloud Trail, Cloud Formation, OpsWork and Security Groups.
Expertise in implementing the Configuration Management Tools like CHEF, PUPPET and Ansible
Administered and Implemented Continuous Integration and Continuous deployment using various CI Tools like Jenkins, Hudson, Bamboo, and sonatype Nexus.
Extensively worked on Jenkins, Docker for continuous integration and for End to End automation for all build and deployments.
Implemented a CD pipeline involving Jenkins Chef to complete the Automation from commit to Deployment.
Performed integration of Code Quality Analysis techniques - Check style, Find bugs with CI tools like Bamboo.
Build scripts using ANT and MAVEN build tools in Jenkins to move from one environment to other environments.
Worked on deployment automation of all the Microservices to pull image from the private docker registry and deploy to docker swarm cluster using Chef.
Implemented continuous integration using Jenkins and configured various plugins GIT, Maven, SonarQube, and Nexus.
Worked on Docker compose to schedule multiple containers and written compose .yml files to configure and scale multiple application services.
Worked to setup Jenkins as a service inside the Docker swarm cluster to reduce the failover downtime to minutes and to automate the Docker containers deployment without using configuration management tool.
Profusely worked on different version control tools like GIT, SVN, TFS and Bit bucket for branching, merging the changes.
Experience in branching, tagging and maintaining version across the environment using SCM tools.

Technical Skills:
Operating Systems: Windows 98/XP/NT/2000/2003/2008, UNIX, LINUX,
Source control tools: Subversion, Clear case, GIT
Build Tools: ANT, MAVEN.
CI Tools: Hudson, Jenkins and Build Forge, Cruise control
Deployment Tools: CHEF, PUPPET, DOCKER
Repositories: NEXUS, Artifactory.
Languages: C, C++, Perl scripting, Shell scripting, SQL, Java/j2EE.
Tracking tools: Jira, Remedy, Clear Quest.
Web servers: Web logic, Web Sphere, Apache Tomcat, JBOSS.
Databases: Oracle, SQL SERVER, MY SQL, DB2
Cloud Platform: Microsoft Azure (IAAS & PAAS), AWS, GCP
Logging and Monitoring: Kafka

Cloud DevOps Engineer- Verizon – Basking Ridge, New Jersey Oct 2020 to Current Responsibilities:
Designed highly available, cost effective and fault tolerant systems using multiple AWS EC2 instances, Auto Scaling, AWS Elastic Load Balance and AWS Amazon machine image (AMIs), DNS mapping with subdomain using Route 53.
Migrated Businesses from a physical data center environment to AWS. Worked at optimizing volumes and EC2 instances and created multiple VPC instances. And Deploy and monitor scalable infrastructure on Amazon web services (AWS).
Designed roles and groups for users and resources using AWS Identity Access Management (IAM) and implement Multi-Factor Authentication (MFA) on externally available servers and on AWS Console, Monitoring and alerting leveraging Cloud Watch and Cloud Trail.
Supported AWS cloud environment with 200+ AWS instances and configured Elastic IP & Elastic Storage and experience in working on implemented Security groups and Network ACLs.
Implemented Data warehouse solutions in AWS Redshift, worked on various projects to migrate data from one database to AWS Redshift, RDS, ELB, EMR, Dynamo DB and S3.
Converted DevOps methodologies in to DevSecOps model by introducing security/vulnerability scans different phases of DevOps like clear text password scan during the build and packaging phase of application and on the other hand responsible for implementing pre provisioning scans and post provisioning scans for IaaC by adopting tools like terraform enterprise (sentinel) and Inspect framework for AWS cloud resource validations.
Designed and implemented automated provisioning of full stack application services (VPC, Security Groups, Instances, ELB) in AWS using Terraform.
Worked with Terraform Template key features such as Infrastructure as a code, Execution plans, Resource Graphs, Change Automation and extensively used Auto Scaling launch configuration templates for launching Amazon EC2 instances while deploying microservices
Worked with Terraform templates for automating VPCs, ELBs, security groups, SQS queues, S3 buckets, and continuing to replace the rest of our infrastructure YAML, Hashicorp configuration language & Also Converted the existing AWS infrastructure to serverless architecture with AWS Lambda and Kinesis deployed using terraform templates.
Integrated Maven with Jenkins for the builds as the Continuous Integration process. Involved in Upgrade of Bamboo & Jfrog Artifactory Server.
Build and deploy Java code through Jenkins and Code coverage analysis using SonarQube. Run quality checks using SonarQube & upload it to Nexus repository.
Helped teams move Cronjobs/Scheduler to Jenkins & configure jobs and maintained over 300 jobs in Jenkins for different Application teams.
Created and automated the Jenkins pipeline using pipeline groovy script for the applications.
Owning the Activity of Upgrading, administering, plug-in management, and User Management and Job creation in Jenkins.
Built a new pipeline and used Docker for virtualization of servers for test environments and dev-environment needs and configuration of automation using Docker container. Handled consolidations of huge number of instances to one single cluster.
Installed, Configured and Managed Docker Containers, Docker Images for Web Servers and Applications servers such as Apache, Tomcat using Docker and integrated with Amazon MySQL RDS database.
Configured Kubernetes (k8s) Clusters for running microservices and pushed microservices into production with Kubernetes backed Infrastructure. Development of automation of Kubernetes clusters via playbooks in Ansible.
Deployed Kubernetes Cluster on cloud/on-premises environments with master/minion architecture and wrote many YAML files to create many services like pods, deployments, auto scaling, load balancers, labels, health checks, Namespaces, Config Map.
Integrated Kubernetes with network, storage, and security to provide comprehensive infrastructure and orchestrated container across multiple hosts.
Performed SVN to GIT/Bit Bucket migration and managed branching strategies using GIT workflow and Managed User access control, Triggers, workflows, hooks, security and repository control in Bit Bucket/GIT.
Written Ansible Playbooks in YAML as the Wrapper to Manage Configurations using Python SDK and Automated various infrastructure.
Knowledgeable on Ansible Tower to create projects, inventory file, jinja2 templates and scheduling jobs along with being skillful Playbook’s writer using Python SSH as the Wrapper to Manage Configurations of AWS Nodes and being able to test them on AWS instances.
Worked with System health and performance Monitoring Tools like Cloud Watch and ELK to monitor OS metrics, server health checks, file system usage etc.
Used Python scripts to update content in the database and manipulate files. Automated Email process, downloading and uploading the files through Perl Scripting.

Azure DevOps Engineer- Paccar - Seattle, Washington Nov 2019 to Oct 2020
Responsibilities:
Setup continuous integration and continuous delivery pipelines in Azure DevOps
Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets.
Deployed the initial Azure components like Azure Virtual Networks, Azure Application Gateway, Azure Storage and Affinity groups.
Configured Azure Multi-Factor Authentication as a part of Azure AD Premium to securely authenticate users.
Worked on Azure cloud services, Azure storage, Azure active directory, Azure service Bus. Create and manage Azure AD tenants and configure application integration with Azure AD. Integrate on-premises Windows AD tenants and Configure application integration with Azure AD.
Configured Internal load balancer, load balanced sets and Azure Traffic manager.
Using GIT repository for storing Terraform files and maintaining versioning. Converted existing Terraform modules that had version conflicts to utilize cloud formation during Terraform deployments to enable more control or missing capabilities.
Converted existing Terraform modules that had version conflicts to utilize cloud formation during Terraform deployments to enable more control or missing capabilities.
Building and maintaining Docker container clusters managed by Kubernetes, Linux, Bash, GIT, Docker, on Azure. Utilized Kubernetes and Docker for the runtime environment of the CI/CD system to build, test, deploy.
Worked on Docker registry, Machine, Hub and creating, attaching, networking of Docker containers, container orchestration using Kubernetes for clustering, load balancing, scaling and service discovery using selectors, nodes and pods.
Worked with upgrades of all the CICD applications including SonarQube, Nexus-pro(Includes NEXUS IQ & NEXUS RM), Cloudbees Jenkins, Cloud bees, SCM Manager, Gitlab.
Building Docker images including setting the entry point and volumes. Also ran Docker containers.
Containerization of Web application using Docker and Kubernetes and Database maintenance.
Setting up multiple provider projects using Enterprise OpenShift container platform
Worked as a two members team to migrate all the jobs in opensource Jenkins to Cloudbees Jenkins Platform.
Implemented groovy shared libraries in Jenkins for making the Jenkins process easily and also implemented the webhooks.
Written the Ansible playbooks which are the entry point for Ansible provisioning. Where the automation is defined through tasks using YAML format to setup continuous Delivery pipeline and ran Ansible Scripts to provision Dev servers.
Written Ansible playbooks for automating tasks and managed Ansible to configure Web Apps and deploy them and used Ansible for deploying the necessary changes on remote hosts and monitored the process using Ansible Tower.
Configured Pipelines to build and deploy by setting up SonarQube for coverage reports, Maven, Jira integration, Nexus to build CI/CD pipeline which includes to trigger auto builds, code analysis, and deploy it nexus for various projects.
Involved in setting up Jira as defect tracking system and configured various workflows, customizations and plug-ins for the Jira bug/issue tracker.
Coordinate and plan with Database teams on Mongodb capacity planning for new applications.
Automation of daily tasks using Shell, Python and Ruby scripts.
Worked on google cloud platform (GCP) services like compute engine, cloud load balancing, cloud storage, cloud SQL, stack driver monitoring and cloud deployment manager.
Supporting and working alongside Agile development teams to ensure they have all the facilities to get the job done.

Environments: Azure, Terraform, OpenShift, Ansible, Kubernetes, Docker, Git, Shell, Ruby, Python, Maven, Jira, Splunk, MongoDb, Sonarqube, Nexus IQ, Nexus RM, Cloudbees Jenkins.

Sr. AWS DevOps Engineer- One Technologies - Dallas, TX Jun 2019 to Sep 2019
Responsibilities:
Worked on Amazon web services (AWS) services like EC2, S3, IAM, Glacier, DynamoDB, Cloud Trail, CloudFormation, Eks Route 53, VPCs, SNS, and Lambda.
Created new VPCs and private subnets to deploy Fargate cluster on the production, QA and Dev environments.
Wrote a Lambda function that scrapes all VPC in an account to enumerate and record all subnet CIDRs.
Worked on creating a new Kubernetes cluster using kops method.
Worked with the development team to create a new Jenkins pipeline to deploy Fargate cluster to Development, QA and production environments on AWS
Used Helm charts to deploy Vault and Consul on the Kubernetes clusters.
Generated new vault root token to authenticate into vault to enable the audit logs to gather information regarding the calls which are being made to vault.
Enabled to auto-unseal feature for vault.
Experienced in Creating and managing a Docker deployment pipeline for custom application images in the cloud using Jenkins, working on Docker hub, creating Docker images and handling multiple images primarily.
Worked on setting up monitoring for AWS Kubernetes clusters using Prometheus and Grafana.
Helped the development and QA teams with troubleshooting the Kubernetes clusters when there are issues with unhealthy nodes and pods which are not responding.
Worked on re-scaling the existing Kubernetes environment size and increased the cluster size in order to reduce the load on the worker nodes.
Created Cloud formation template which will spin up EC2 instance and install Jenkins on the EC2 instance.

Sr. AWS DevOps Engineer - CPS Energy - San Antonio, TX Jan 2018 to May 2019
Responsibilities:
Worked on Amazon web services (AWS) services like EC2, S3, ELB, IAM, Glacier, DynamoDB, Cloud Trail, Route 53, RDS, SNS, SQS, EBS and Lambda.
Continuously managed and improved the build infrastructure for global software development engineering teams including implementation of build scripts, continuous integration infrastructure and deployment tools.
Worked and created multiple AWS EC2 instances, setup the security groups, Elastic Load Balancer (ELB) and AMIs, auto-scaling to design cost effective, fault tolerant and highly available systems.
Used AWS Route 53 to route the traffic between different availability zones. Deployed and supported AWS Elastic-Cache and then configured Elastic Load Balancing (ELB) for routing traffic between zones.
Designed AWS Cloud formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of web applications and database templates.
Created Lambda functions to test the data consistency in S3 and involved in data transfer from Datacenters to cloud using AWS Import/Export Snowball service.
Multi Node Kafka messaging queue is set up to reduce the load on log stash and avoid packet loss.
Configured a Google cloud Virtual Private Cloud (VPC) and Database Subnet Group for isolation of resources and created several Cyber Security compliance processes for the organization.
Log spout, file beat and heartbeats are deployed on all the swarm nodes to capture the container logs, application logs and to do automated health checks of all the services running in the swarm.
Clickstream events of web application are captured from Kafka topics in ELK for business analytics
Designed, configured and deployed Azure Automation scripts for a multitude of applications utilizing the Azure stack (including compute, Web Mobile, Blobs, ADF, Resource groups, HDinsight clusters, Azure SQL, Cloud services) services and utilities focussing on automation.
Installation, configuration and up gradation of Azure services by using automation to reduce manual effort and created scripts using Azure PowerShell during automation and built-in process.
Worked on Docker Hub, creating Docker images and handling multiple images primarily for middleware installations and domain configuration.
Worked with Docker and Kubernetes on multiple cloud providers, by helping developers build and containerize their application (CI/CD) to deploying either on public or private cloud.
Responsible for CI/CD automation in all categories of application development like versioning, building, testing and deployment.
Worked Kubernetes for creating new projects, services for load balancing and adding then to routes to be accessible from outside, Creation of Pods through new application and control the scaling of Pods, troubleshooting it through SSH and logs.
Created Terraform modules to create instances in AWS & automated process of creation of resources in AWS using Terraform.
Used Ansible Core and Ansible tower as configuration management tool, to automate repetitive tasks, quickly deployed critical applications and proactively managed the changes.
Wrote Ansible playbooks with Python SSH as the wrapper to manage configurations of AWS nodes and text test playbooks on AWS instances using Python. Run Ansible scripts to provision Dev servers and responsible for writing/modifying scripts using BASH & Shell.
Maintained Ansible playbooks using Ansible roles, utilized file module in Ansible playbook to copy and remove files on remote systems.
Written Chef Cookbook, recipes to automate installation of middleware infrastructure like Apache tomcat, jdk and configuration tasks for new environments etc and also reused and modified same Chef Recipes to create a deployment directly into Amazon EC2 instances.
Created Chef Workstation, Bootstrapped instances using Chef and integrating with auto scaling, collaborated in the automation of AWS infrastructure via Terraform and Jenkins, software and services configuration via Chef Cookbooks.
Involved in installation, configuration and maintenance of Jenkins for compilation and packaging of new code releases.
Configuring Jenkins as a common CI engine to build and promote applications to Dev, QA and Staging to Linux environments.
Used Jenkins 2.0 and pipelines which helped us drive all microservice builds out to the docker registry and then deployed it to Kubernetes.
Developed build and deployment scripts using ANT and Maven as build tools in Jenkins to move from one environment to another environment.
Worked on branching, tagging and maintaining version across the environment using SCM tools like GitHub, primarily used script to write applications and worked to manage source code.
Configured dependencies and plugins in Maven pom.xml for various activities and integrated Maven with GitHub to manage and deploy project related tags.
Installed, configured and Automated Splunk, Dynatrace as application performance manager and created different dashboards to monitor all the tools which are used in the application.
Performed automation testing for the new enhancement using SELENIUM tool and Python scripting.
Automated SQL scripts Deployment to staging and production Databases with Bitbucket/GIT.
Using Ansible deployed and configured ELK (Elastic search, Log stash, Kibana) stack for log analytics, full text search, application monitoring and integration with AWS Lambda and Cloud Watch.
Ensure deployments happen in Blue/Green concept and ensure that there is business continuity, site reliability and manage applications by providing necessary monitoring.
Worked on ticketing tools like JIRA, Service Now to track defects and changes.
Involved in setting up application servers like Tomcat, WebLogic across Linux platforms as well as written shell scripts, Perl, Python, Ruby scripting on Linux.

Environments: AWS (EC2, S3, ELB, IAM, Glacier, DynamoDB, Cloud Trail, Route 53, VPC, RDS, SNS, SQS, EBS and Lambda), Azure, Ansible, Chef, Docker, Kubernetes, Terraform, Jenkins, Bitbucket, Maven, Dynatrace, Splunk, ELK, Tomcat, Mongo DB, Selenium, JIRA, ANT, Python, WebLogic.

Sr. Cloud DevOps Engineer - Fidelity Investment-Merrimack, NH May 2016 to Jan2018
Responsibilities:
Configured Azure web apps, Azure App Services, Azure Application insights, Azure Application gateway, Azure DNS, Azure Traffic manager, App services, Analyzing Azure Networks with Azure Network Watcher, Azure stack, Azure Backup and Azure Automation.
Worked on initial Azure component deployment such as Azure Virtual Networks, Azure Application Gateway, Azure Storage and Affinity groups.
Created and maintained docker environments for containerized microservice oriented environments and hosted images configured in a private container registry on Microsoft Azure by generating docker files.
Hands-on experience in designing, planning and implementation for existing On-Prem applications to Azure Cloud (ARM), configured and deployed Azure Automation Scripts utilizing Azure stack (Compute, Web and Mobile, Blobs, ADF, Resource Groups, Azure Data Lake, HDInsight Clusters, Azure Data Factory, Azure SQL, Cloud Services and ARM.
Designing and implementation of Azure Virtual Networks with associated subnets and network security groups (NSG).
Managed Azure Security groups using Azure Portal and PowerShell scripts and attached them to VM's and subnets.
Administered complete Microsoft Office 365 for local and remote users including Exchange, Lync, office and local on premises active directory syncing with Azure AD.
Created CI/CD Pipelines in AZURE DevOps environments by providing their dependencies and tasks. Also created Azure key-vault to store all the credentials for SQL databases and API keys.
Used Ansible to provision Azure services and manage those nodes.
Wrote puppet modules for the Tomcat/Apache/Splunk forwarder services in our distributed infrastructure.
Implemented Ansible to manage existing servers and automate the build/configuration of new servers. All Server types were fully defined in Ansible so that a newly built server could be up and ready for production within 30 minutes.
Experienced in installing and configuring NFS shares in system software, Auto Mounter, DHCP and LDAP.
Created Docker environments and maintained them for containerized micro services-oriented environments and for hosting images configurated private container registry on Microsoft Azure by creating docker files.
Data from On-Premise SQL Database servers to Azure SQL Database servers was sent by designing the Azure Data Factory Pipelines using the Azure Data Factory Copy tool and Self-Hosted Runtimes.
Implemented Azure Databricks to other Azure services (such as Azure Storage) in a more secure manner using service endpoints.
Worked with various Azure services like Web Roles, Worker Roles, Azure Websites, Caching, SQL Azure, Net worker servicers, API Management, Active Directory (AD)
Developed Terraform templates to build, change and version Infrastructure as Code (IaC) using Azure as provider and launched multi-layered resource groups to be provisioned and configured with Terraform template.
Deployed Kubernetes container application using Azure Kubernetes Service (AKS), ACS, Azure CLI, Azure Active Directory, Azure Virtual Network, Azure Storage, and Azure Database for MySQL.
Used JIRA as a ticketing tool to create issues going on in any environments.
Created Docker Slave Nodes for Jenkins using custom Docker Images to pull them to ECR.
Worked on multiple things like setting up Kubernetes dashboards with AAF and using kubeconfig.
Used Docker in a Linux environment and handled fabric services to deploy in containers and images.
Extensively used Bitbucket and integrated it to Jenkins for automating the builds. Implemented headless protocol for committing, pushing, and pulling changes to JFrog repository from Jenkins.
Automated Continuous Integration and deployment using Maven, Ant, and comparable tools.

Environments: Python, Ruby/Bash Scripting, Jira, Bamboo, GIT, Nagios, Puppet, Ubuntu, Aws, Gcp, Weblogic, SVN, Maven, TFS 2013/2015, ANT, IIS, LINUX, XML, PowerShell, Jenkins, GIT, VMWare, Splunk, UNIX, Restful Web Services, Vagrant, Pivotal Cloud Foundry (PCF), Springboot, Spring Security, Windows, Networking, Terraform, Bit Bucket, Confluence, Gradle
Contact this candidate