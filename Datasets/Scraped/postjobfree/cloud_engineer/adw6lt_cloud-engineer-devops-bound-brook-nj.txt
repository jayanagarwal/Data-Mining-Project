Surya Narayana
Sr DevOps/Cloud Engineer
+1-201-***-****
adw6lt@r.postjobfree.com

Professional Summary:

Around 8 years of IT expertise as Sr Cloud/DevOps Engineer, mainly focused on Infrastructure Automation, configuration management, Build/Release, System Administration and Observability of different applications in both cloud and on-prem environments. I have hands-on expertise managing, automating, and optimizing mission critical deployments in Microsoft Azure, GCP, and AWS utilizing CI/CD, and DevOps processes.
Working in a multi-functional atmosphere, across several SDLC stages with a focus on Systems Administration, Software Configuration Management (SCM), and Cloud Platforms in a DevOps Culture through Continuous Integration and Continuous Deployment.
Expertise in AWS cloud platform and its services, including EC2, S3, EKS, ECR, RDS, VPC, VPN, Security-Groups, Lambda, DynamoDB, EBS, ELB, AMI, Elastic Beanstalk, Cloud formation, CloudFront, CloudWatch, Ops Work SNS, Glacier, Auto-Scaling, IAM, and Route53.
Create and set up a virtual data center on the AWS cloud to allow hosting of Enterprise Data Warehouses, including Elastic Load Balancer, Public and Private Subnets, inbound and outbound Security Groups, and Virtual Private Cloud (VPC).
Practical expertise with the Azure Cloud Platform, such as working with Azure web applications, App services, Azure storage, Azure SQL Database, VMs, AKS, ACR, Fabric controller, Azure AD, Azure search, App Insides and Notification Hub.
Worked on services offered by the GCP, including compute engine, cloud load balancing, cloud storage, cloud SQL, stack driver monitoring, and cloud deployment manager.
Expertise in using Kubernetes Linux, Bash, GIT, and Docker to develop and maintain Docker container clusters on Google Cloud Platform (GCP).
Experience of how to utilize Terraform to configure the Kubernetes provider, which interacts with Kubernetes resources to deliver a range of services such Config Map, Namespace, Volume Auto scaler.
Working experience of scaling Amazon RDS, MySQL, MongoDB, DynamoDB, Cassandra DB, PostgreSQL, instances vertically and horizontally for high availability as well as developing and distributing data across all nodes and clusters in AWS Redshift across several availability zones.
Experience with tools such as Rapid7 Nexpose and Insight VM vulnerability scanner.
Performed vulnerability assessments and preventions on the development side by leveraging the tools like Nmap, Nessus IBM app scan.
Performed vulnerabilities scan and monitor continuously using NIST 800-137 as a guide with the aid of Nessus.
Expertise in developing and implementing policies and procedures to manage access and security of extranet networks.
Familiar with cloud based extranet solutions such as Microsoft Azure and Aws and their integration with on-premises infrastructure.
Experience in configuration management programs like Chef, Puppet, Terraform, and Ansible.
Created Ansible Playbooks using YAML scripting and Puppet Manifests with DSL to provision Tomcat, Apache Spark, Nginx, and Apache Web servers.
Terraform expertise for creating, modifying, versioning infrastructure and working with Jenkins and terraform to cooperate on automating AWS Infrastructure.
Known experience in creating Chef Cookbooks, recipes, roles, and data bags to automate deployment services.
Working experience in utilizing a Docker file to create Docker images. I worked on managing Docker volumes, removing images, and taking snapshots of Docker containers.
Hands on experience in Jenkins pipelines for pushing all microservices builds to the Docker registry and then deploying to Kubernetes, as well as generating Pods and maintaining them with Kubernetes.
Experience in creating Jenkins Pipeline Groovy Scripts for Build Workflows and Continuous Integration, also using Jenkins to upload Artifacts into Nexus Repository and automate other routine administrative operations using Bash, Ruby, JSON, Perl, PowerShell, Python Scripts.
Experience in build tools such as MAVEN/npm and ANT to create deployable artifacts like as war and ear from source code. Managed the Maven Repository using Nexus and used the same to share the snapshots and releases of internal projects
Experience of a variety of monitoring tools, including Nagios, Splunk, CloudTrail, Stack driver, Sumo Logic, Prometheus, Grafana, ELK, Cloud Watch, App Insights and New Relic.
Experience with ticketing tools like JIRA, integrating JIRA into Splunk Enterprise, and bug reporting for products via JIRA. Experience with monitoring tools such as Nagios, Splunk, Kafka.
Worked on real time integration using Kafka spark streaming and HBase.
Expertise in using JIRA for bug tracking, building issue dashboards, and resolving system issues and inconsistencies in collaboration with the quality assurance and engineering teams.
Technical skills:
Cloud Environments:
AWS, MS Azure, GCP, PCF
Operating Systems:
Linux (RedHat, Ubuntu, Debian, CentOS), Windows, Unix
Configuration Management Tools:
Ansible, Puppet, Chef, Salt Stack
CI/CD Tools:
Jenkins, Gitlab, Bamboo, Azure DevOps, Octopus Deploy
Java Technologies
Java SE, Event Handling, Multi-threading
Container Orchestration Platform:
Kubernetes, OpenShift, Docker Swarm, AKS, EKS, ECS.
Version Control Tools:
Sub Version (SVN), Git, GitHub, TFVC, Bitbucket
Build/Automation Tools:
Gradle, Maven, npm, Ant, Dotnet, Node, MS Build
Monitoring Tools:
Nagios, Splunk, CloudWatch, ELK Stack, Datadog, AppDynamics, New Relic, Grafana, Prometheus, App Insights.
Scripting:
Bash/Shell, Python, Ruby, JSON, PHP, Groovy, YAML.
Databases:
Oracle, MySQL, MS SQL, Dynamo DB, Mongo DB, Raven DB
Application Servers:
Tomcat, Apache HTTPD, JBoss, Web Logic, WebSphere
Networking:
DNS, SMTP, DHCP, SNMP, HTTP
Repository Management tools:
Artifactory, Nexus, Docker Hub, Azure Artifacts, ACR, ECR
Web Technologies:
HTML, CSS, HTTP, Bootstrap, Xml and PHP
Bug/Ticket Tracking Tools:
JIRA, Remedy, Bugzilla, You Track, Tech Deck, Azure Boards
Testing Tools:
Selenium, Cucumber, Junit
Other Tools:
TFS, Confluence, RabbitMQ

Client: Credit One, Las Vegas, Nevada Aug 2022 â€“ Present.
Role: Sr Cloud DevOps Engineer

Responsibilities:

Built and managed an AWS environment using IAM, ELB, EBS, SNS, cloud watch, S3, AMIs and snapshots, RDS, creating security groups, Subnets, and Storage Gateway.
Developed AWS Security Groups, which functioned as virtual firewalls and managed the traffic that was permitted to access one or more AWS EC2 instances. Additionally, they made AWS CloudTrail available to monitor user activity and facilitate the governance and auditing of AWS accounts.
Worked with AWS EC2 cloud services to install, configure, and troubleshoot various Amazon images such as Amazon Linux AMI, RedHat, Ubuntu.
Developed Python scripts to fully automate the configuration of AWS services, including web servers, ELB, Cloud Front distribution, databases, EC2 and database security groups, S3 buckets, and application configuration. This script creates stacks, single servers, or connects web servers to stacks.
Designed using Azure Power-shell scripting to create and manage Azure Virtual Machines, Cloud Services, and Storages.
Developed numerous Jenkins and Azure DevOps CI/CD pipelines for infrastructure code validation and verification (e.g., Puppet, Terraform).
Set up Azure web applications, Azure App services, Azure Application Insights, Azure Application Gateway, Azure DNS, and used Azure Network Watcher to analyze Azure Networks.
Worked with Azure Storage development and design using Blobs, Pages, Queues, Tables, VMs, and building classes for Azure programmatic control and monitoring an Azure VM cluster.
Developed Windows services to store SQL server data in cloud-based data warehouses using Microsoft Azure, as well as established security in web applications using Azure and deployed them to Azure.
To automate infrastructure code verification, Terratest was upgraded to Azure Terraform modules, and new performance-oriented Terraform modules were produced. Terraform was used to deploy Azure services, Golang, Docker, and Travis CI were used to implement testing.
Tested and distributed 4500 virtual machines using the Azure Cloud Server OS Versions 2008 R2 and Server 2012 R2 Server 2016 systems' monthly Microsoft Security Patches.
We configured and managed access control mechanisms, firewalls and encryption protocols to ensure the security of extranet networks.
Installed the Qualys Cloud Agent to help find and report security flaws.
Creating and designing Terraform templates to establish custom sized VPCs and NAT subnets for deployment of Web application and database templates.
Connected Terraform and Jenkins to completely automate the process of deploying EC2 instances from AWS SMS-produced AMIs into the client's infrastructure.
Wrote Ansible Playbooks in YAML to manage Configurations, Orchestrations, and remote machine deployments.
Worked on designing and implementing BGP routing solutions for extranet networks in cloud environments such as AWS and Azure.
Responsible for creating Ansible Inventory files, hosts, handlers, tasks, templates, roles, and group vars to build and automate AWS environments/infrastructure.
Developed Devops Scripts in Groovy to automate and collection analysis of Cassandra.
Written some Groovy scripts for setting up LDAP configuration for Jenkins using security matrix.
Worked with Ansible Tower to manage many nodes and inventory in a variety of environments.
Improving Continuous Integration workflow with Virtual Environments such as Docker and automating the build process with Docker and related tools.
Created Docker-based container deployments, including dealing with Docker images, Docker Hub, Docker-registries, and Kubernetes.
I built Shell Scripts (Bash) to automate daily maintenance tasks and CloudWatch Alarms to track the server's performance, CPU utilization, log files, disk usage, and other metrics.
Implemented groovy based solutions for configuration management, Infrastructure as code and application deployment, increase in efficiency and reducing manual errors.
Worked with Docker container snapshots, attaching to a running container, managing containers, directory structures, and uninstalling Docker images.
Used Kubernetes to provide a platform for automating deployment, scaling, and operations of application containers across clusters of hosts.
Wrote microservices using Golang. Even developed Golang code to Feedback system.
Developing CI/CD systems using Jenkins in a Kubernetes container environment, building, testing, and deploying pods using Kubernetes and Docker as the runtime environment, troubleshooting pods using SSH and logs, and writing/modifying Buildconfigs, templates, Image streams, etc.
Managed containerized applications using Kubernetes, utilizing its nodes, ConfigMaps, selector, Services, and application container deployment as Pods. MiniKube was used to run Kubernetes locally, and it was used to create deployable application containers and local clusters.
Used Jenkins for Continuous Integration and deployment into Tomcat Application Server.
To deploy the Spring Boot Microservices to AWS Cloud and Pivotal Cloud Foundry (PCF) utilizing build packs, we used Jenkins as a Continuous Integration tool.
Setup Jenkins to pull code from GIT, built it with Maven/npm, analyze it with SonarQube/Sonar Scanner, run Selenium tests with TestNG, and save the successfully created artifacts in Artifactory and Nexus.
Used GIT to keep track of all changes in the terraform templates and used Jenkins to build infra on multi-cloud and on-prem.
Used Maven scripts to build the source code. Supported and helped to create Dynamic Views and Snapshot views for end users.
Involved in daily Stand-up activities, Backlog grooming and Pl planning activities.
Installed and configured Splunk for log monitoring and forwarded system stats to Splunk indexer, created dashboards and alerts using this data.
Built, configured, and managed heterogeneous environments using Splunk while maintaining log analysis produced by diverse systems, including security tools.
Splunk was put into use with a 1TB daily indexing volume. Utilizing Splunk Deployment Server to create Splunk applications and deploy. Utilize Splunk to examine application logs.
Created developing scripts in Ruby, Bash, PowerShell, and Python to automate tasks.
By using RDS and EC2 provisioning and the Schema Conversion Tool, we were able to minimize the cost of database migration while transferring database schemas to safe servers.
Set up, install, upgrade, and troubleshoot database servers such as MS SQL Cluster, My SQL, Oracle 9i/10g/11g and Mongo DB 2.x and 3.0.
Used Jira Agile projects like creating scrum boards, configured columns, filters and reports for sprints.

Client: Stone X, New York Jan 2022 â€“ July 2022
Role: Azure Engineer

Responsibilities:s
Using test-driven development and continuous integration, deployment, and delivery techniques to implement infrastructure as code using both terraform and cloud formation.
Developed, set up, and maintained a variety of AWS resources, which would include EC2 instances, S3 storage buckets, EFS, ELB, High Availability Zones, Route53, IAM roles, AWS Lambda, and AWS Elastic Beanstalk, to quickly deploy and manage applications.
Query Surge, Informatica, AWS (Big Data platform), Airflow scheduler, Teradata SQL, and Python scripting were all used in the thorough testing of the data conversion from SAP BW to Snowflake in the AWS cloud.
To enable the successful deployment of Web applications and database templates, AWS CloudFormation templates were developed to configure VPCs, subnets, and NAT with specific sizes.
Developed Golang software to handle concurrent data collection and processing with goroutines and channels for a WIFI device.
Used Packer-Docker and Terraform to deliver configuration management and provisioning to AWS, automated EBS deployments to the AWS cloud's ec2 instance server, and automated the complete AWS deployment environment.
Implemented Azure DevOps services for project management tasks, source code repository, continuous integration and deployment.
Experience setting up Azure migrate and ASR servers using OVF templates in on-premise vCentre host. Even worked on creating Azure Blob for storing unstructured data in the cloud as Blobs.
Ran functional test scripts for OpenStack and examined its storage, networking, and neutron core services. OpenStack Juno and Kilo were set up in a multimode setting. working knowledge of OpenStack on Red Hat and Ubuntu systems. understanding of fixing issues following installation.
Skilled in creating Chef cookbooks, terraform templates, Puppet manifests, and recipes, which were subsequently deployed to Chef Server for configuring EC2 instances.
Automating infrastructure provisioning on AWS, Azure, and Google Cloud using Terraform code. Creating Terraform modules and keeping state files for Terraform in compliance with the current Architecture.
Create, manage, and maintain cloud resources and services in major providers, including Microsoft Azure and AWS. Install and Configure Azure Cloud Sentinel Data and Monbiot severances
Developed a proactive change management strategy using Ansible and Ansible Tower to automate time-consuming tasks, quickly deploy critical apps, and manage changes. LAMP was set up, and the stopping and starting of services was controlled by Ansible-playbooks.
Making bespoke Python Ansible modules and executing production deployments Create and maintain a PostgreSQL database using Ansible. I maintain a corporate Linux infrastructure of Linux nodes in the build and release cycle.
Deploying microservices as containers with the use of containerization tools like Docker and Docker Compose. Microsoft Azure is used for continuous deployments across many environments, together with Docker Swarm and Kubernetes for orchestration.
Worked on Kubernetes, Docker Hub, Docker registries, and Docker images as they relate to Docker-based container deployments. aided in the development of Kubernetes YAML files and Helm charts for the deployment of microservices into Kubernetes clusters.
Worked on the development of Docker containers and Docker consoles for application life cycle management.
Deployed application containers as Pods and used Kubernetes to administer containerized apps utilizing its nodes. MiniKube was used to run Kubernetes locally, and it was used to create deployable application containers and local clusters.
Managed SVN repositories for branching, merging and tagging and developing Shell/Groovy Scripts for automation purpose. Creating scripts in DSL Groovy which integrate with Jenkins for Automation to create seed jobs
Worked in DevOps practices using AWS Elastic Bean stalk and Docker with Kubernetes.
Participated in OpenShift's development as a Kubernetes platform for managing and orchestrating containers. Additionally, OpenShift was used for multi-tenancy, dynamic provision storage, health monitoring, and container build automation.
Jenkins was used to carry out continuous integration. In addition, keep an eye on the version control and build processes.
Setup Chef Server and clients to download the Build from Jenkins and distribute it in the intended environments (Integration, QA, and Production).
I put continuous integration into practice using Jenkins. For continuous deployments, many slaves were created and Jenkins' security was adjusted.
Worked with GIT webhooks in Jenkins to trigger code and automate the CI/CD build process.
Tested the Gradle upgrade to LSR by creating test branches from the master branch of each GIT repository, and then helped DEV teams do the same successfully.
Created automated builds using Maven/npm for the creation of build artifacts like war or ear files, as well as build and deployment scripts in Jenkins using Apache Maven as the build tool to move across environments.
Worked extensively with MAVEN build tools to create pom.xml files.
Proficiency establishing monitoring and alerting systems for VPN connections, including AWS Cloud Watch, Nagios, Splunk Enterprise, and New Relic.
Configured the dashboards and alerts for Cassandra (NoSQL Database) on New Relic and forwarded the Cassandra system logs and gc logs there.
Involved in the compilation and deployment process by developing Python, Perl, PowerShell, Ruby, Bash, and shell scripts.
Maintained and developed Docker images for a technology stack running on GCP that comprised Cassandra, Kafka, Apache, and a number of custom Java services (GCP).
Closely worked with Kafka Admin team to setup Kafka cluster setup on QA and production environments.
Participated in automating the installation and configuration of Java/Nodejs/Reactjs applications in test and pre-production environments.
Developed deployment and automation templates for relational and NoSQL databases on AWS, including MSSQL, MySQL, Cassandra, and MongoDB.
Worked on a multitenant relational database designed specifically for the cloud utilizing their metadata-driven architecture.
Created Jenkins file pipeline as code for CICD deployment using groovy scripting. Integrated Jenkins with Gitlab for code commits, trigger builds and poll SCM.
Managed the Linux operating system by installing packages using rpm and Zypper, creating soft and hard links, and configuring SUSE using YAST.
Logged, tested, tracked issues and defects to closure and resolution by using JIRA in partnership with Development Team.

Client: Rally software, Raleigh, NC June 2020 â€“ Dec 2021
Role: Cloud Engineer

Responsibilities:
Created, Configured and deployed Azure Automation Scripts using Azure stack Services and Utilities with an emphasis on Automation. Designing, and implementing existing on-premise systems to AZURE Cloud (ARM).
Azure files and storage blobs configured and put into use - established storage accounts, setting up a custom domain and the Content Delivery Network (CDN), Managing access and key storage
Worked with storages like Blob (Page and Block), SQL Azure, and PaaS (Platform as a Service) on Windows Azure. well-versed in deployment, configuration, and virtualization administration.
Created and maintained software release management and processes. Additionally skilled with Subversion, proposed and put into practice branching method
Maintained and developed Docker images for a Google Cloud tech stack that includes Cassandra, Kafka, Apache, and a number of custom Java services (GCP).
Responsible for ingesting large volumes of IOT data to Kafka.
Familiarity with the services offered by the Google Cloud Platform, including compute engine, cloud load balancing, cloud storage, cloud SQL, stack driver monitoring, and cloud deployment manager.
Designed and developed a fully automated server build using Chef and Jenkins.
Developed Golang based web services on AWS and Google App Engine.
Deployed builds on Data Center servers using Chef recipes. For direct deployment onto EC2 machines, Chef recipes were changed and reused.
Worked with client to design and implement Terraform- based Infrastructure as code solutions, ensuring the highest level of automation and scalability.
A written cookbook for Chef that includes instructions for automating the configuration of new environments and the installation of middleware infrastructure, including Apache Tomcat and JDK.
Proficient in deploying projects to support CI/CD pipelines, integrating Docker images for CI, and automating Bamboo builds.
Participated in the migration of the servers for Git, Bamboo, and Artifactory. Writing Perl Hooks and Triggers is their responsibility. An ANT-based Java application was created.
To implement the continuous delivery framework in a Linux environment, integrated Ant, Bamboo, Puppet, and Nexus.
Designing of version control tools like GIT and Subversion as well as branching, tagging, and release activities for.Net applications (SVN).
Java source code branching and merging features were implemented.
Created scripts for Maven, ANT, and Gradle to automate the build procedure. The Maven Repository was managed by Nexus, and internal project snapshots and releases were exchanged.
Multi-tier application provisioning was implemented on the open stack cloud, and the application was moved using Maven as the build tool.
Created deployment and build scripts Jenkins uses MAVEN as a build tool to transition between different environments.
Using NAGIOS 4.0 monitoring tools to keep an eye on the CPU, memory, physical disk, hardware and software RAID, multipath, file systems, and network.
Created utilities in Perl, including Nagios templates and settings as well as core system configurations, to improve monitoring using Nagios and custom plugins.
Use tools like Nagios and AWS services like Cloud Watch and Cloud Trail to maintain and diagnose system and network performance.
Designed the build process automation using Shell, Python, and Perl programming languages.
To automate AWS services such web servers, ELB, Cloud front Distribution, databases, EC2 and database security groups, S3 buckets, and applications, Python scripts have been created.
Significant expertise creating unique PowerShell build stages as well as generating AZURE Resource Manager (ARM) templates.
Automated PCF deployments across multiple spaces/foundations using GitLab pipelines and PCF CLI with a bash script.
Created automation and deployment tools in Python, Rundeck, Bash, Power Shell, and Ruby.
Writing queries to validate data against Mongo Collections and MySQL while setting up the MongoDB Client. installed, set up, and managed MongoDB servers, as well as optimized the performance of Mongo databases.
To complete the migration, the physical databases were relocated to NFS using Ansible, Shell, and C-shell, and the cloned databases were then extracted and uploaded to EC2.
Set up and maintained Linux-based SSH, SSL, NFS, FTP, and SMTP servers.
Used Amazon EC2, Chef, and customized Ruby/Bash scripts to implement rapid provisioning and life-cycle management for Cassandra, Linux, and other platforms.
Client: ADDTEQ, Pune, INDIA Sept2018 â€“ May 2020
Role: DevOps Engineer

Responsibilities:
Creating and updating Puppet code to automate configuration management processes on Linux and Windows servers.
Developing of Puppet Open Source and Puppet Enterprise. Puppet Master, Agents, and Databases were installed, configured, upgraded, and managed.
Installed configuration management tools Puppet, Puppet Dashboard, and Puppet DB on the infrastructure already in place.
Designing of Jenkins in a variety of areas, including managing plugins, securing and scaling Jenkins, integrating code analysis, performance issues, analytics, and test phases to complete Jenkins' CI/CD pipelines.
Master-Slave architectural setup was successfully built to enhance Jenkins performance.
Vast expertise working with Jenkins, including installation, configuration, and upkeep for CI and complete automation of all builds and deployments.
Integrated Jenkins and Ansible Tower to deploy code to various servers in order to create auto-scaled systems.
Set up and manage source code using GIT, work with application developers to solve code merging issues, and provide a consistent environment. Continuous Integration was put into practice using Jenkins and GIT.
Created repositories and managed them among users using GITLAB as an SCM tool. complete project was kept in the repository.
To automate the build and release processes, ANT scripts and Shell scripts were used.
Helped the development team switch Ant scripts over to Maven.
Practical knowledge of using Nagios to track server and application health as well as resource usage for each application.
Used SonarQube in the build system to check the quality of the code on an ongoing basis, Nagios for monitoring, and the ELK stack for log analysis while producing monitoring charts.
Proficient command-line and Python scripting skills for automating processes.
Worked on the creation of unique shell, perl, and python scripts to automate tasks (bash, ksh).
Developed Shell/Bash/Perl scripts for automation.
Scripting in several languages on Linux and Windows - Bash, Shell, Ruby, and so on.
Jenkins was used to implement continuous integration. built Java and.NET code on various Jenkins servers in accordance with the schedule.
Participated in automating the installation and configuration of Java applications in test and pre-production environments.
Developed Unix Shell, Perl, and SQL control files to load data using SQL Loader and the Oracle data pump, and used Perl DBI to interact with the database.
Using Amazon RDS and DynamoDB, on-premises MySQL, PostgreSQL, MariaDB, and Cassandra databases were migrated to AWS.
Proficient at automating tasks using Linux's Bash, C-shell, and Cron tab.

Client: Servizon IT services, Hyderabad, INDIA Jan 2017 â€“ Aug 2018
Role: Build and Release Engineer

Responsibilities:
Worked in developing shell scripts in Linux's Bash, C-shell, and Cron tab to automate tasks.
The Nagios monitoring tool was set up and configured, and Nagios core/XI was put into use to monitor infrastructure resources.
Installed, set up, and maintained monitoring software like Splunk, Nagios, and iCinga for network, resource, and log trace monitoring.
Scripting expertise in management and administrative tasks using Bourne, Ruby, Perl, Bash, shell, and Python for automated administration tasks.
Tasks for Red Hat Linux systems using PERL and SHELL scripting include user administration, startup and shutdown scripts, crontabs, file system upkeep, backup scripting, and automation (BASH, KSH).
The setup, management, and upkeep of Linux and Windows operating systems in the computer lab.
For all tasks, Linux was used as the operating system. used a variety of Linux commands because this conversion process entailed using all applications.
Tuning & Performance Management of the Linux Kernel.
Developed and put into effect a plan for continuous integration in Linux-based environments.
Tasks for Red Hat Linux systems using PERL and SHELL scripting include user administration, startup and shutdown scripts, crontabs, file system upkeep, backup scripting, and automation (BASH, KSH).
Proficient in setting up and maintaining common Linux services, including firewalls, Tomcat, Apache, MySQL, NFS, FTP, Postfix, DHCP, DNS BIND, HTTP, HTTPS, and LDAP.
Linux and Windows operating system setup, upkeep, management.

Client: I BASE IT, HYDERABAD, INDIA May 2015 â€“ Dec 2016
Role: System/Linux Engineer

Responsibilities:
Worked with the architects on the SDLC process as the owner of post-development environments and used JIRA for issue tracking and monitoring.
creating Maven Build projects by converting ANT Build projects. knowledge in writing build scripts with Ant and Maven.
A puppet module for automation was created using a mix of Puppet Master, R10K Wrapper, Git Enterprise, Open stack (Horizon), Vagrant, and SimpleUI (Jenkins).
Establish tailored Nagios, &PNP4Nagios Graphs monitoring for the legacy and new environments.
A puppet module for automation was created using a mix of Puppet Master, R10K Wrapper, Git Enterprise, Open stack (Horizon), Vagrant, and Simple UI (Jenkins).
Added configuration management tools Puppet, Puppet Dashboard, and Puppet DB to the infrastructure already in place.
Implemented Jenkins for Continuous Integration and Tomcat Application Server deployment.
Contact this candidate