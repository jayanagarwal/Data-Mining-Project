Navya Sree
Sr. DevOps Cloud Engineer Automation Engineer
Email: ad4xqi@r.postjobfree.com
Phone: +1-614-***-****
LinkedIn
Professional Summary:
Having around 7 years of hands-on experience as a highly skilled DevOps and Cloud Engineer with expertise in designing, implementing, and managing cloud infrastructure and DevOps practices.
Experienced in working with public cloud platforms to architect, deploy, and optimize robust cloud solutions across AWS, Azure, and GCP platforms.
Demonstrated expertise in Azure services such as Azure DevOps, Azure Kubernetes Service (AKS), Functions, Monitor, Active Directory (AAD), Key Vault, App Service, Azure Pipelines, Blob Storage and Azure Resource Manager (ARM) for building highly available and performant cloud solutions.
Deep understanding and experience with wide range of AWS services including RDS, EC2, VPC, IAM, S3, ELB, CloudFormation, Lambda, DynamoDB, and Route 53 to architect scalable and reliable cloud infrastructures.
Utilized Google Cloud Platform (GCP) services such as GCP Compute Engine, GCP Cloud Storage, GCP Big Query, GCP Kubernetes Engine, IAM and GCP Cloud Functions to architect and deploy reliable cloud infrastructure event-driven cloud solutions.
Orchestrated hybrid and multi-cloud environments, integrating on-premises infrastructure with public cloud platforms and implementing workload portability and data synchronization strategies.
Skilled in managing diverse operating systems including Linux (Red Hat, CentOS, SUSE), Ubuntu, Unix, Windows, and Mac OS, ensuring seamless integration and operation within cloud environments.
Proficient in using automation frameworks like Cloud Formation, Azure Resource Manager (ARM), Cloud Deployment Manager, and Terraform to construct automated infrastructure on cloud platforms.
Created and maintained highly scalable and fault tolerant multi-tier AWS and Azure environments spanning across multiple availability zones using Terraform and CloudFormation.
Developed new Python scripts to create new Terraform functionality and automate infrastructure provisioning tasks. Integrated Python scripts with Terraform modules to improve infrastructure automation and deployment workflows.
Integrated Terraform with secrets management tools like HashiCorp Vault, Azure Key Vault to securely manage and inject sensitive information into infrastructure configurations.
Experienced in containerization technologies like Docker and Kubernetes, with expertise in managing container orchestration platforms.
Created new Docker images using Docker files and managed images using Docker registries such as Docker Hub, Amazon ECR, or Azure Container Registry.
Leveraged Docker Swarm, Kubernetes for container orchestration and designed high availability Docker deployments. Adopted a microservices architecture approach with Docker containers.
Implemented multi-stage docker builds reducing final image size. Also implemented blue-green deployment strategies with Docker containers, enabling seamless and zero-downtime deployments by routing traffic between different versions of containerized applications.
Used Kubernetes to manage containerized applications using its nodes, Config Maps, selector, Services & deployed application containers as Pods. Good understanding in writing different Kubernetes YAML files for Workloads, Services, Secrets, PVC, HPA, VPA and Ingress Load balancer.
Managed Kubernetes resources including pods, services, deployments, and namespaces. Secured Kubernetes clusters by configuring RBAC (Role-Based Access Control), Utilized Kubernetes-native debugging and troubleshooting tools, such as kubectl.
Implemented horizontal pod autoscaling in Kubernetes clusters, Managed Kubernetes configurations and manifests for development, staging, production environments utilizing Helm charts.
Configured Kubernetes Ingress controllers to expose services externally, manage HTTP/HTTPS routing, and implement SSL termination and load balancing.
Extensive knowledge in managing diverse databases including SQL, NoSQL (MongoDB, DynamoDB), Cassandra, Redis, Cosmos DB, and PostgreSQL, ensuring efficient data storage and retrieval in cloud environments.
Strong background in configuration management tools such as Chef, Puppet, Ansible, and Salt Stack for automating infrastructure provisioning and deployment processes.
Utilized Ansible Tower for centralized management and role-based access control (RBAC) of Ansible playbooks, ensuring secure and auditable infrastructure automation.
Developed end-to-end CI/CD pipelines using Jenkins, Terraform, Docker, Kubernetes to automate the entire software development lifecycle, including code retrieval, compilation, testing, and artifact deployment.
Hands-on expertise in CI/CD pipelines setup and management using Jenkins, Bamboo, GitLab CI/CD, and Travis CI, enabling continuous integration and delivery of software applications.
Used Groovy scripts and Ansible playbooks to implement Jenkins pipelines.
Configured Jenkins masters and slaves on multiple machines and administer all the instances. Integrated Version control systems with Jenkins to start automated builds on Jenkins using various triggers such as pull request, tags and commits.
Strong scripting and programming skills such as Bash/Shell, Perl, Python, Ruby, PowerShell, and Groovy for automation of repetitive tasks and scripting tasks in cloud environments.
Proficient in web technologies including HTML, CSS, JavaScript, XML, JSON, and YAML, with experience in developing and deploying web-based applications and services.
Experienced in utilizing version control tools like Git, SVN, Bit Bucket, GitLab, and GitHub to manage code repositories, branching, and merging, ensuring code quality and facilitate collaborative development workflows.
Skilled in using various build tools including Maven, Ant, Gradle, and MS Build to automate the build process and ensure code consistency across environments.
Experienced in implementing infrastructure monitoring and alerting solutions using tools like New Relic, Nagios, Dynatrace, Datadog, Prometheus, and ELK stack for real-time performance monitoring and troubleshooting.
Configured Prometheus exporters to collect metrics from services and applications deployed on Kubernetes clusters and AWS EC2 instances.
Automated Prometheus deployment and configuration using infrastructure as code (IaC) tools like Terraform and Ansible, ensuring consistent and scalable monitoring setup across environments.
Skilled in configuring and managing web servers like Apache HTTP, Nginx, Apache Tomcat, and Node.js for hosting web applications and services.
Skilled in implementing logging and data analytics solutions using tools like Splunk, ELK stack, AWS Cloud watch and Grafana for effective log management and performance analysis.
Experienced in using ticketing and tracking tools like Jira, Remedy, Bugzilla, Confluence, and ServiceNow for project management and issue tracking.
Proficient in testing tools including SonarQube and JUnit for ensuring the quality and reliability of software applications.
Experienced in Agile, Scrum, and Waterfall methodologies, with a strong understanding of software development lifecycle processes.
Experienced in utilizing Artifactory tools like Nexus and JFrog for artifact management and dependency resolution in software development projects.
Technical Skills:

Cloud
AWS, Azure, GCP
AWS Services
RDS, EC2, VPC, IAM, Cloud Formation, EBS, S3, ELB, Auto Scaling, Cloud Trial, lambda, SQS, SNS, SWF, Cloud Watch, amazon DynamoDB, Route 53
Azure Expertise
Active Directory, DevOps, app service, functions, monitor, Key vault, AKS, Blob Storage, Azure Resource Manager (ARM)
Operating Systems
Linux (Red Hat, CentOS, SUSE), Ubuntu, Unix, Windows, Mac OS, Solaris
Version Control Tools
Git, SVN, Bit Bucket, GitLab, GitHub
Configuration Management Tools
Chef, Puppet, Ansible, Salt stack
CI/CD Tools
Jenkins, Bamboo, Gitlab CI/CD, Travis CI
Build Tools
Ant, Maven, Gradle, MS Build
Container & Orchestration
Docker, Kubernetes, Amazon EKS, Terraform
Monitoring Tools
New Relic, Nagios, Dynatrace, Datadog, Prometheus.
Databases
SQL, MS Access, NoSQL (MongoDB, DynamoDB), Cassandra, Redis, Cosmos DB, PostgreSQL
Web Servers
Apache HTTP, Nginx, Apache TOMCAT, NodeJS
Artifactory
Nexus, JFrog
Logging and Data Analytics
Splunk, Elastic stack (ELK), Grafana
Ticketing/tracking tools
Jira, Remedy, Bugzilla, Confluence, ServiceNow
Testing tools
SonarQube, Junit
Methodologies
Agile, Scrum, Waterfall
Languages
Bash/Shell, Perl, Python, Ruby, power shell, Groovy, SQL
Web Technologies
HTML, CSS, Java Script, XML, JSON, YAML

Professional Experience:
Client: PIMCO Investments Columbus, OH(Remote)
Role: Sr. DevOps Cloud Engineer /Automation Engineer July 2023 - Present
Responsibilities:
Architected and implemented CI/CD pipelines on Azure DevOps for deploying applications leveraging Azure services including Active Directory, DevOps, App service, Functions, Monitor, Key Vault, AKS, Blob Storage, Azure Resource Manager (ARM).
Designed and implemented scalable Azure infrastructure using IaaS and PaaS services for multiple applications, ensuring high availability and performance of workloads.
Implemented access control policies and RBAC (Role-Based Access Control) for Azure resources, ensuring compliance with security and regulatory requirements.
Implemented Azure Active Directory for secure authentication and authorization of external users accessing applications deployed on Azure.
Integrated Azure Functions for serverless compute, enabling event-driven architectures and efficient resource utilization.
Designed and implemented Azure governance frameworks, including role-based access control (RBAC), resource tagging policies, and cost management strategies.
Integrated Azure services such as Key Vault, Storage, and App Service into CI/CD pipelines for secure application deployment and management
Developed and maintained infrastructure as code (IaC) templates using Terraform and Azure Resource Manager (ARM) templates to automate provisioning and configuration tasks.
Utilized Terraform modules to encapsulate reusable infrastructure components, promoting consistency and scalability in provisioning Azure resources.
Employed Terraform workspaces to manage multiple environments such as development, staging, and production with distinct configurations and resource deployments.
Implemented Terraform remote state management with Azure Storage backend, ensuring secure and centralized storage of state files for collaborative infrastructure management.
Containerized a monolithic application into multiple microservices using Docker.
Designed and implemented multi-stage Docker builds, reducing the final image size by over 80% compared to traditional single stage builds, and improving deployment times.
Implemented caching mechanisms in multi-stage builds, significantly improving build performance by reusing cached layers.
Orchestrated containerized applications with Kubernetes on Azure Kubernetes Service (AKS), optimizing resource utilization and enabling seamless scaling.
Managed Kubernetes charts using Helm, Created reproducible builds of the Kubernetes applications, managed Kubernetes manifest files and Managed releases of Helm packages.
Designed and implemented CI/CD pipelines using Azure DevOps, enabling automated build, test, and deployment workflows for cloud-native applications on Azure Kubernetes Service (AKS) and Docker containers.
Created Clusters using Kubernetes and worked on creating many pods, replica sets, services, deployments and health checks using YAML files.
Led the development of end-to-end solutions using Node.js, delivering high-quality, scalable applications.
Implemented modern web frameworks with Node.js for seamless frontend-backend integration and enhanced user experience.
Integrated Jira with Azure DevOps for streamlined issue tracking, project management, and agile software development workflows.
Integrated Cosmos DB and PostgreSQL with Azure services such as Azure Storage and Azure App Service for seamless application development and deployment. Utilized MongoDB and PostgreSQL for real-time data processing and analysis.
Developed custom plugins and extensions for Terraform using Python, built a Python-based tool for dynamic inventory management enabling end-to-end automation of CI/CD pipelines and infrastructure management.
Proficient in Bash, Python, PowerShell, and YAML for automating tasks in CI/CD pipelines, defining configurations in Azure DevOps and managing databases like PostgreSQL and MongoDB with SQL for efficient cloud operations.
Worked on GIT which includes Git branching strategy like developing branches, staging branches, master, push, pull requests and code reviews are performed.
Developed pom.xml files, performing releases with the Maven release plugin, Cosmos, and managing Maven repositories.
Implemented monitoring and logging solutions using New Relic and Splunk to gain insights into application performance, infrastructure health, and security.
Worked in Agile development environments, utilizing Sprint-based activity management (planning, retrospectives, etc.).
Implemented Nexus repository manager for efficient storage and versioning of Docker images, NodeJS packages, and artifacts in the CI/CD process.
Deploy and manage web servers and applications on Azure virtual machines using Apache HTTP Server and Nginx.
Environment: Azure DevOps, Azure Active Directory, Azure DevOps, App service, Functions, Monitor, Key Vault, AKS, Blob Storage, Azure Resource Manager (ARM), Terraform, Docker, Docker Hub, Docker Swarm, Docker Compose, Kubernetes, AKS, Node.js, Jira, Maven, Nexus, Cosmos DB, PostgreSQL, Nginx, Apache HTTP Server, New Relic, Splunk, Bash, Python, PowerShell, SQL, YAML.

Client: Johnson & Johnson Findlay, OH(Remote)
Role: DevOps Cloud Engineer / SRE May 2022 – June 2023
Responsibilities:
Configured and managed hybrid cloud environments, integrating on-premises infrastructure with GCP and AWS services to extend capabilities and scale resources as needed.
Architected, designed, and implemented multi-cloud solutions leveraging GCP and AWS services to meet business requirements and strategic objectives.
Used Google Cloud Platform (GCP) Services Like Compute Engine, Cloud Functions, Cloud DNS, Cloud Storage and Cloud Deployment Manager and SaaS, PaaS and IaaS concepts of Cloud computing architecture and Implementation using GCP.
Integrated Cloud Build with AWS Code Pipeline, enabling cross-cloud CI/CD workflows for software development projects spanning GCP and AWS platforms.
Designed and implemented Data Migration strategies, including database replication, data synchronization, and schema conversion, to move data between GCP and AWS environments.
Developed cloud-native application using Google Cloud Functions and AWS Lambda, leveraging serverless architectures to achieve scalability and cost efficiency across both platforms.
Implemented hybrid cloud networking solutions, including GCP Virtual Private Cloud(VPC) and AWS Virtual Private Cloud (VPC), to establish secure communication between on-premises data centers and cloud environments.
Configured and managed cross-cloud load balancing solutions using Google Cloud Load Balancing (GCLB) and AWS Elastic Load Balancing (ELB), distributing incoming traffic across GCP and AWS resources to optimize performance and availability.
Implemented cross-cloud data encryption solutions using Google Cloud Key Management Service (Cloud KMS) and AWS Key Management Service (KMS), encrypting data at rest and in transit to protect sensitive information stored in hybrid cloud environments.
Designed and deployed cross-cloud disaster recovery architectures using Google Cloud Storage (GCS) and AWS S3 Glacier, enabling organizations to archive and recover data from GCP and AWS clouds ensuring data protection for critical applications and workloads.
Worked with Terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation to build staging and production environments.
Created Terraform templates for provisioning virtual networks, VM Scale sets, Load balancers and used Terraform graphs to visualize execution plans using the graph command. Used Terraform to deploy the infrastructure necessary to create different environments.
Created and designed the Terraform templates to create custom sized VPC, NAT subnets, for deployment of Web applications and databases.
Used Terraform for migrating legacy and monolithic systems to Amazon Web Services. Used Terraform scripts to configure AWS resources.
Implemented AWS Code Pipeline and created Terraform CloudFormation JSON templates for infrastructure as code.
Provisioned the highly available EC2 Instances using Terraform and cloud formation and wrote new python scripts to support new functionality in Terraform.
Leveraged Python Boto3 to automate the provisioning and management of AWS resources such as EC2 instances, S3 buckets, and VPCs, enhancing infrastructure deployment in DevOps pipelines.
Used Terraform with Packer to create custom machine images and automation tools to install software after infrastructure provisioning.
Collaborated with development teams to containerize applications using Docker and deploy them on Kubernetes clusters running on Google Kubernetes Engine (GKE)and Amazon Elastic Kubernetes Service (EKS).
Leveraged Docker's multi-stage builds to optimize image sizes and reduce build times by efficiently organizing build dependencies and runtime artifacts within separate build stages.
Utilized Kubernetes-native debugging and troubleshooting tools, such as kubectl and kubectx/kubens, for efficient cluster management and issue resolution.
Configured Kubernetes autoscaling mechanisms, such as Horizontal Pod Autoscaler (HPA) and Cluster Autoscaler, for dynamic resource allocation.
Implemented Auto scaling and self-healing strategies for the application on Kubernetes and also implemented the security best practices in the Kubernetes environment when experienced with application workloads.
Used Jenkins AWS Code Deploy plugin to deploy and Chef for unattended bootstrapping in AWS.
Worked on using Chef Cookbook recipes, Attributes, Templates, and Chef Files for managing the configurations across various nodes using RUBY.
Developed Packer templates in JSON and HCL to define machine image configurations for AWS and GCP adhering to infrastructure-as-code (IaC) principles.
Utilized Maven for building deployable artifacts and configured and administered Nexus Repository Manager and Artifactory.
Conducted performance testing and optimization using Junit, analyzing application and infrastructure performance metrics.
Implemented Redis as a caching layer to improve application performance and reduce database load, resulting in faster response times and improved scalability for high-traffic web applications.
Developed custom Nagios plugins and checks using Perl.
Customized Grafana dashboards to visualize and analyze time-series data from Nagios.
Integrated Prometheus with Grafana for visualizing and analyzing metrics trends, creating dashboards to monitor system health and performance in real-time.
Utilized ServiceNow platform to log and track IT service requests, ensuring timely resolution and maintaining high levels of customer satisfaction.
Used Agile practices (iterative development & sprints) for various user stories during the project execution.
Environment: AWS, GCP, AWS CodePipeline, GCP Cloud Build, GCP VPC, GCLB, GCP KMS, Google Cloud Storage, Google Kubernetes engine, Terraform, Chef, Ruby, Git, GitHub, Nexus, packer, JSON, HCL, Docker, Kubernetes, Kubectl, kubectx, HPA, EKS, Maven, Junit, ELB, S3, Lambda, AWS VPC, Redis, Nagios, Perl, Prometheus, Grafana, ServiceNow, Agile.

Client: Zoho Corporation Pleasanton, CA (Offshore – Chennai)
Role: Cloud DevOps Engineer July 2020 – Nov 2021
Responsibilities:
Led the migration project from Google Cloud Platform (GCP) to Microsoft Azure, overseeing all aspects of planning, execution, and post-migration validation.
Designed and executed a lift and shift migration of GCP workloads to Azure, Leveraged Azure Site Recovery (ASR) and Azure Migrate services to orchestrate the migration process, replicating virtual machines, disks, and data from GCP to Azure.
Implemented network connectivity between GCP and Azure environments using Azure ExpressRoute, VPN Gateway.
Ensured data integrity and consistency during migration by implementing robust backup and recovery strategies, leveraging Azure Backup and Azure Site Recovery services.
Implemented network security policies and access controls using Azure networking services, including VNet and NSGs to protect migrated workloads from unauthorized access.
Configured and managed Windows-based virtual machines (VMs) in Azure, ensuring compatibility and seamless integration with existing systems.
Implemented automation scripts and tools using Terraform and PowerShell to orchestrate the provisioning and configuration of Azure resources.
Leveraged Terraform for infrastructure as code (IAC) to automate the provisioning and configuration of cloud resources, reducing deployment times and enhancing consistency.
Developed YAML-based infrastructure templates for Azure using Terraform, to build staging and production environments.
Orchestrated containerized workloads with Docker and Kubernetes, optimizing resource utilization and scalability in the Azure cloud environment.
Leveraged Docker containerization for blue-green deployment strategies, enabling seamless and zero-downtime updates by routing traffic between different versions of containerized applications.
Configured and managed Kubernetes resources, such as Pods, Deployments, Services, ConfigMaps, and Secrets, for deploying and scaling containerized applications.
Implemented Kubernetes networking solutions, including Ingress controllers and load balancers, for exposing applications to external traffic.
Migrated relational and NoSQL databases, including MongoDB and DynamoDB, ensuring data integrity, consistency and compatibility with Azure data services and storage solutions throughout the transition.
Wrote Ansible playbooks and roles to provision several pre-prod environments consisting of WebLogic domain creations, and several proprietary middleware installations.
Wrote Python Code using Ansible Python API to Automate Cloud Deployment Process. Developed Python Modules for Ansible Customizations.
Developed custom Groovy scripts for configuring, provisioning, and managing infrastructure as code (IaC) with tools like Jenkins, Ansible, and Terraform.
Implemented continuous integration and continuous deployment (CI/CD) pipelines with Jenkins, Git, and JFrog Artifactory to automate software builds, testing, and deployment processes.
Developing automated processes for code builds and deployments using Jenkins, maven, and implementing the CI/CD pipeline.
Implemented Jenkins as a full cycle continuous delivery tool involving package creation, distribution, and deployment on tomcat application servers via shell scripts embedded into Jenkins jobs.
Created additional Docker Slave Nodes for Jenkins using custom Docker Images and pulled them to Cloud. Worked on all major components of Docker like Docker Daemon, Hub, Images, Registry, Swarm.
Implemented version control and release management processes using Git and Bitbucket, enabling collaboration and traceability across distributed teams.
Implemented advanced MS Build scripts to manage project dependencies and versioning, developed custom Build tasks and targets, configured MS Build to support parallel builds and incremental compilation.
Implemented automated testing processes with JUnit, ensuring the quality and reliability of migrated applications and services.
Worked on google stack driver agent installation by using the python scripting.
Designed and implemented monitoring and alerting solutions using Prometheus and Grafana, providing real-time visibility into system performance and health metrics of Azure resources and applications during the migration process.
Utilized ELK stack (Elasticsearch, Logstash, Kibana) for log aggregation, analysis, and visualization, facilitating troubleshooting and debugging during the migration process.
Collaborated with development teams to integrate bug tracking and issue management workflows using Bugzilla.
Worked in the Agile development team to deliver end-to-end continuous integration/continuous delivery.
Conducted post-migration performance tuning and optimization activities to maximize cost savings and operational efficiency in Azure.
Environment: GCP, Azure, Azure site recovery, Azure migrate services, Azure ExpressRoute, VPN Gateway, Ansible, YAML, Windows VMs, Terraform, PowerShell, Git, Bitbucket, Jenkins, Jfrog, Docker, Kubernetes, MS Build, Junit, Prometheus, Grafana, ELK Stack, MongoDB, DynamoDB, VNet, NSGs, Bugzilla, Agile.

Client: Lumen Technologies Hyderabad, India (On-Site)
Role: DevOps Engineer Dec 2018 – June 2020
Responsibilities:
Designed, deployed, and managed AWS infrastructure using services like EC2, S3, RDS, VPC and SQS optimizing configurations for performance, cost, and security.
Designed and enforced IAM policies and roles to control access permissions and maintain compliance with security standards.
Utilized AWS Lambda functions and Step Functions to automate recurring tasks and orchestrate workflows across different AWS services.
Configured and managed AWS networking components using tools like VPC, Route 53, and AWS Direct Connect.
Implemented disaster recovery and backup strategies using AWS services like EBS (Elastic Block Store) snapshots and AWS Backup, ensuring data protection and business continuity to minimize downtime and data loss.
Implemented infrastructure as code (IaC) practices using Terraform and CloudFormation to automate resource provisioning and management reducing deployment time.
Engaged in using Terraform templates to deploy AWS resources like EMR clusters, S3, ECS, etc.
Worked closely with development teams to containerize applications and migrate them to Kubernetes, providing guidance on Docker best practices, image optimization, and container orchestration strategies.
Integrated Docker and Kubernetes with AWS services such as IAM, VPC, and CloudWatch for authentication, network isolation, and monitoring of containerized workloads.
Designed, implemented, and optimized MySQL and DynamoDB databases for efficient data storage and retrieval.
Developed custom scripts and automation workflows using AWS CLI, SDKs, and scripting languages like Ruby, shell scripting, python for streamlining operational tasks and improving efficiency.
Created Custom as well as downloaded pre-written Modules and Manifests, Worked, and utilized Puppet hierarchy files, facts, and global variables. Developed Puppet Modules for installation & Auto healing of various tools like Jenkins, MSSQL, Nexus etc.
Implemented version control best practices using Git and GitLab for collaborative development and code management.
Implemented and managed CI/CD pipelines using AWS Code Pipeline and Jenkins for automated build, test, and deployment processes.
Utilized Git and Gitlab for source code management and integration with Jenkins jobs, ensuring code changes automatically trigger build and test processes.
Written groovy scripts to use multi branch pipeline projects in Jenkins to configure it as per client’s requirements.
Responsible for installing Jenkins master and slave nodes and configuring Jenkins builds for continuous integration and delivery.
Created Maven POMs to automate the build process for the new projects and integrated them with third party tools like Sonar, Nexus.
Integrated SonarQube into CI/CD pipelines for code quality analysis and automated code reviews.
Monitored application and infrastructure performance using CloudWatch, Datadog implementing proactive alerts and monitoring of system health and performance.
Conducted regular security audits and vulnerability assessments, addressing security gaps to identify and mitigate potential vulnerabilities.
Monitored and analyzed application logs using tools like ELK and Kibana to troubleshoot issues and optimize performance.
Installed and Configured the Nexus repository manager for sharing the artifacts within the company.
Environment: AWS, Git, Gitlab, Ruby, Shell Scripting, Python, Puppet, Terraform, EC2, S3, RDS, VPC, SQS, IAM, Lambda, Route 53, EBS Snapshots, AWS Backup, Jenkins, Maven, SonarQube, Docker, Kubernetes, AWS Cloud Watch, Datadog, ELK, Kibana, MySQL, DynamoDB, Nexus.

Client: Locuz Hyderabad, India (On-Site)
Role: Jr. Build Engineer / SRE Aug 2016 – Nov 2018
Responsibilities:
Developed and maintained frontend components of web applications using HTML, CSS, and JavaScript, ensuring optimal user experience and interface responsiveness.
Operated in a Linux environment, utilizing command-line tool and utilities for development and deployment tasks.
Demonstrated expertise in installing, configuring, and maintaining Linux-based servers, including CentOS, Ubuntu, ensuring optimal performance and security.
Managed system administration tasks on Linux servers, including user management, permissions, and system configuration, ensuring smooth operation of development and testing environments.
Deployed and managed virtual machines (VMs) using technologies like KVM, VMware ensuring efficient resource utilization and workload isolation.
Installed, configured, and administered server software, including Apache, Nginx, MySQL, and PostgreSQL, to support web hosting and database services.
Implemented security measures on Linux servers
Contact this candidate