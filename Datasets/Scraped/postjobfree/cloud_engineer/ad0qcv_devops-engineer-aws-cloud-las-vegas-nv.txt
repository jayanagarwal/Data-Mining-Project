YASMEEN MALIGELI
Sr. DevOps Engineer

Email: ad0qcv@r.postjobfree.com
Phone: +1-469-***-****

PROFESSIONAL SUMMARY
Around 10+ years of experience in the cloud, comprising of Amazon Web Services (AWS), Azure, Build/Release GCP, SCM, DevOps Methodologies, infra support, Application Support, and maintenance, Networking, with a wide range of technologies.
Hands-on experience with infrastructure development and operation involving designing and deploying using AWS Amazon Cloud Administration services like (EC2, S3, EBS, Elastic Beanstalk, Route 53, ECS, ECR, Cloud Formation, Cloud Watch, CloudTrail, Code Pipeline, VPC, Load Balancer, Auto Scaling, Lambda, API Gateway, AWS Import/export).
Extensively worked with IAM policies for organizations in AWS Cloud to define groups, create users, assign roles, and define rules for role-based access to AWS resources.
Responsible for operational support activities to ensure the availability of customer websites hosted on AWS cloud infrastructure using Virtual Private Cloud and public cloud.
Experience in building a Continuous Integration/Continuous Deployment workflow through the implementation of DevOps tools like AWS Code-Pipeline, AWS Code-Build, and AWS Code-Deploy to build and deploy a microservices architecture using ECS (Cluster, Task Definition, and Service).
Demonstrated ability to integrate ACM with AWS services like Elastic Load Balancer (ELB), CloudFront, and API Gateway to ensure secure communication.
Experience in automating the provisioning, renewal, and deployment of SSL/TLS certificates using ACM.
Responsible for implementing containerized-based applications on Azure Kubernetes by using Azure Kubernetes
(AKS), and Kubernetes cluster, which is responsible for cluster management.
Worked on implementing backup methodologies by PowerShell Scripts for Azure Services like Azure SQL Database, Key Vault, Storage blobs, and App services.
Experience in Kubernetes to deploy scale, load balance, and manage Docker containers with multiple namespace versions.
Built largely open-source technology such as Docker, Kubernetes, and Terraform and leveraged multiple cloud platforms both public and private to deliver a consistent global platform continuously deploying applications.
Proficient in writing Kubernetes YAML files and Helm charts for deploying microservices into Kubernetes Clusters, and used Kubernetes to orchestrate the deployment, scaling, and management of Docker Containers.
Experienced in Bluegreen Deployment, and Canary Deployment in the production, and Managed Kubernetes cluster in the rollback and rollouts methods in the deployment strategies.
Responsible for using Kubernetes Istio Service Mesh to address needs for traffic management, service security, and application monitoring, also to monitor all the services across clusters and data centers.
Hands-on experience with Azure Cloud Services (SaaS & IaaS) Web Apps, Application Insights, Document DB, Internet of Things (IoT), Logic Apps, Data Factory, Traffic Manager, and Azure Monitoring.
Managing Azure Cloud Infrastructure which includes Azure Web Roles, SQL AZURE, Azure Storage, Azure Web Roles, Worker Roles, and AD licenses with Service Fabric, Containers, Resource Manager, ARM automation, Key Vault, Encryption, and Security.
An excellent DevOps Engineer with hands-on implementation experience on Hashicorp Vault with Consul, AWS Systems Manager, AWS Secrets Management, and Azure Key Vault.
Expertise in setting up Docker Daemon, Docker Client, Docker Hub, Docker Registries, Docker Images from
Docker file and managing multiple images by storing them in containers to deploy.
Hands-on experience in writing code for building, changing, and managing existing AWS cloud Infrastructure.
and custom in-house solutions.
Skilled in content authoring and management using Adobe Experience Manager (AEM) to create and edit dynamic and personalized content.
Worked with Terraform key features such as infrastructure as a code, execution plans, resource groups, change automation and used auto scaling launch configuration templates for launching AWS EC2 instances.
Expert in Ansible as a configuration management tool, to automate repetitive tasks, quickly deploy critical applications, and enthusiastically manage changes on multiple platforms.
Proficient in working with Ansible handlers with multiple tasks to trigger multiple handlers and to decouple handlers from their names, making it easier to share handlers among Playbooks and Roles.
Implemented a CI/CD pipeline using Azure DevOps (VSTS, TFS) in both cloud and on-premises with GIT, MS Build, Docker, and Maven along with Jenkins plugins.
Highlight any experience you have with cloud migration projects, especially those involving the migration of on-premises infrastructure to Azure and AWS.
Highlight any experience you have with cloud migration projects, especially those involving the migration of on-premises infrastructure to Azure and AWS.
Used GIT as an SCM tool with Azure DevOps, created a local repo, cloned the repo, added, committed, pushed the changes in the local repo, recovered files, created tags, and viewed logs.
Extensively worked on Jenkins CI/CD pipeline jobs for end-to-end automation to build, test and deliver artifacts and troubleshoot the build issue during the Jenkins build process.
Experience in installing Tomcat application, deployment of WAR, JAR, integrating with Jenkins, and verifying with Jenkins Plugins, deploying the applications across all the environments using Ansible Playbooks.
Expertise in the maintenance of Source control management systems such as GIT and Subversion, strong experience with Continuous integration with Continuous development methodologies with GIT, Maven, Docker, Jenkins, SonarQube, Nagios, Jira, and Nexus Repository.
Built and managed a highly available monitoring infrastructure to monitor different application servers and their components through Nagios, Splunk, and Centre on Monitoring tools.
Able to use Chef and other configuration management tools Ansible, and Puppet to deploy consistent infrastructure code across multiple environments.
Hands-on experience in using ELK (Elastic Search, Kibana, Log stash), Splunk, Dynatrace, Prometheus, Grafana, Nagios to monitor the resources utilization for each application, Application Monitoring, Performance, and health.
Expert in using ELK (Elasticsearch, Logstash, Kibana) stack solutions integrated with Kubernetes for collecting, storing, and analyzing Kubernetes data.
Experience in monitoring servers with NRPE plugin in Nagios tool and worked with logging/monitoring such as
Nagios. AWS CloudWatch, Remedy, Jira, ServiceNow, and Clear Quest.

TECHNICAL SKILLS
Cloud Technologies
AWS, Azure, Google Cloud, Open Stack, Nutanix.
Azure
Azure VMs, Azure App service, Azure Functions, AKS, Azure Storage (Blob
storage, File storage) Azure SQL Database, Azure Data Factory, Azure Virtual
Network.
AWS
AWS EC2, ELB, S3, EBS, VPC, Route 53, RDS, Auto-Scaling, IAM, SNS, SES,

SQS, Cloud Front, Cloud Formation, Cloud Watch, Elastic Beanstalk
Containerization
Docker, Docker Swarm, Kubernetes (AKS, EKS, GKE), Helm, Istio.
CI/CD Tools
Jenkins, Cloudbees, AWS Code Pipeline, Azure Pipelines.
Configuration Management Tools
Ansible, Rundeck, Vagrant, Chef, Puppet.
Version Control Tools
GIT, GitLab, Bitbucket, SVN, TFS.
Provisioning Tools
Terraform, Cloud Formation, ARM.
Scripting Languages
Shell, Groovy, Python, Ruby, JSON, YAML, Bash, Power Shell, C, C++, java.
Monitoring Tools
Nagios, Centreon, AWS Cloud Watch, Dynatrace, Splunk, Prometheus, Kibana, ELK.
Virtualization Technologies
Virtual Box, VMware, Hyper-V, Vagrant.
Operating Systems
Ubuntu, CentOS, Fedora, RedHat, Kali Linux, Windows, Windows Server.
Databases
MySQL, Oracle, PostgreSQL, MS Access, NoSQL (MongoDB, Dynamo DB).
Web Servers
Apache HTTP 3. x, Apache Tomcat, Nginx.
Build Tools
Maven, Ant, Gradle, Selenium, Junit.
Bug Tracking Tools
JIRA, Service Now, BMX Remedy.
Repository Management
Nexus, JFrog, Artifactory.
Networking Tools
Active Directory, Cisco Routers/Switches, IP, DHCP, DNS, LDAP, ADDS, FTP,
Wireshark.

CERTIFICATIONS
Certified Kubernetes Administrator
AWS Associate Developer
Microsoft Certified Azure Administrator Associate

EDUCATION
Bachelors in 2013 (Computer Science).

PROFESSIONAL EXPERIENCES

Role: Azure DevOps Engineer
Client: State of Ohio, Columbus, Ohio Date: Jun 2022 â€“ Till Date
Managed Azure Compute Services, Auto Scaling, Elastic Load Balancing, Horizontal and vertical scaling, VM Scale Set, Application Gateway, Network Security Group, Web role, Worker role, and Scaling/Management.
Deployed Azure ARM Templates for different teams to deploy the .Net-based applications on Web roles, triggered.
ARM templates from the VSTS to build the .net-based applications with Dotnet NuGet build version.
Created and managed Azure AD tenants and configured applications with Azure AD and integrated on-premises.
Windows AD into Azure Active Directory.
Migrated SQL Server databases to SQL Azure Database using SQL Azure Migration Wizard and used Python API to upload agent logs into Azure blob storage.
Used Azure ACI to run serverless docker containers in Azure with simplicity, and speed, and used Azure ACR to build, store, and manage container images and artifacts in a private registry.
Monitored Azure Log Analytics workspace for log data from Azure monitor and other azure services like Microsoft sentinel and Defender for the Cloud.
Created CI/CD pipelines for .NET, python apps in Azure DevOps by integrating source codes GitHub, VSTS, and artifacts. Created deployment areas such as testing, pre-production and production environment in Kubernetes cluster and configured App Insights, Prometheus and Grafana monitoring dashboard for regular analysis.
Migrated on-premises instances to Azure Cloud using ARM subscription with Azure Site Recovery and indulged with building and installing servers through ARM Templates.
Experience in setting up CI/CD pipeline integrating various tools with Cloudbees Jenkins to build and run Terraform jobs to create infrastructure in Azure.
Implemented CI/CD pipelines on Azure including logging and monitoring of the system using DevOps tools such as Azure DevOps, Nexus OSS, SonarQube, Ansible, and containerized open-source ELK stack for digital applications.
Knowledge of Azure Site Recovery and Azure Backup Installed and Configured the Azure Backup
agent and virtual machine backup, Enabled Azure Virtual machine backup from the Vault and
configured the Azure Site Recovery (ASR).
Built CI/CD pipeline with Azure DevOps for Kubernetes container environment, utilizing Kubernetes and Docker as the runtime environment for the CI/CD system to build, test, and deploy on dev and production environments.
Used Azure DevOps to automate scaling and self-healing of Kubernetes-deployed applications. I have also used Azure DevOps to configure Autoscaling for many Kubernetes clusters and used Kubernetes' built-in self-healing features to automatically replace failed pods.
Deployed Azure Kubernetes Service Cluster (AKS) using the ARM Template, integrated with Azure Active Directory and within a VNET with Azure DevOps.
Used Azure Kubernetes Service (AKS) to deploy a managed Kubernetes cluster in Azure and created an AKS cluster in the Azure portal using template-driven deployment options such as Azure Resource Manager templates and terraform.
Configured Windows Kubernetes (K8s) cluster with Azure Container Service (ACS) from Azure CLI and Utilized
Kubernetes and Docker for the runtime environment of the CI/CD system to Build, Test and Deploy.
Working as Kubernetes Administrator, involved in configuration for web apps, Azure App Services, Azure Application Insights, Azure application gateway, Azure DNS, Azure Traffic Manager, and App Services.
Deployed and managed App Service apps within the ASE using Azure CLI and Azure DevOps Pipelines.
Deployed the AKS (Azure Kubernetes services) cluster by installing the Kubernetes through CLI using ACR Authentication and then configured and connected it to the cluster.
Used Terraform templates to automate the Azure IaaS virtual machines using terraform modules and deployed virtual machine scale sets in the production environment.
Implemented Blue/Green Deployment strategy by creating new applications which are identical to the existing production environment by using automation frameworks such as ARM and Terraform templates.
Wrote Ansible playbooks for virtual and physical instance provisioning, Configuration management, patching, and software deployment on Open stack environments through an automated tool.
Involved in Ansible setup, managing hosts file, using YAML linter authoring various playbooks and custom modules with Ansible and Ansible playbooks to automate the Azure Services.
Experience in writing Jenkins Pipeline jobs using Groovy Scripts for Continuous Integration and built workflows, also used Jenkins for uploading Artifacts into Nexus Repository and automated various day-to-day administration tasks by developing Bash, Ruby, PowerShell, and Python Scripts.

Environment Variables: .net, NuGet, GITHUB, Jenkins, Ansible, Maven, VSTS, Shell (bash), ARM Templates, Azure ACR, Kubernetes, SonarQube, Azure Service Environment, App services, AKS, Terraform, GCP, Azure CLI, PowerShell, AWS ELK Stack, Azure SQL, Groovy, Nexus, Python, Azure traffic Manager, Azure DNS.

Role: Aws DevOps Engineer
Client: IBM, Dallas, TX Date: Nov 2020 â€“ May 2022
Configured AWS application deployment infrastructure using sources such as VPC, EC2, S3, MySQL, Aurora DB, IAM, EBS, Route53, SNS, ES, SQS, CloudWatch, Security Group, Auto Scaling, and RDS using CloudFormation templates.
Created S3 storage buckets in the Storage class to Store the Objects and used the S3 Transfer acceleration feature to enable fast, and secure transfer of files between the end user and S3 Bucket.
Used Amazon RDS for SQL Database servers with a multi-AZ deployment and read replicas and restore snapshots from RDS for the test database.
Deployed Kubernetes cluster in AWS cloud using Minikube, performed the deployments of the Docker images on the cluster by updating the Labels and selectors in the pod definition.
Implemented Server-less architecture using AWS Lambda with Amazon S3, and Amazon Dynamo DB, and managed mission-critical systems for optimal performance and High level of availability.
I wrote python scripts to parse XML documents and load them in the database and developed data transition from Dynamo DB to AWS Redshift using AWS Lambda by creating functions in python for certain events-based use cases.
Emphasize your expertise in using infrastructure automation tools such as Azure Automation, AWS CloudFormation, or Terraform.
Used Kubernetes to deploy, scale, load balance, and manage docker containerized EKS applications with multiple namespace versions.
Integrated Istio, helm packages with Kubernetes clusters for the service mesh, and monitor the Kubernetes nodes, disk usage, memory, and different alerts using the Prometheus monitoring tool.
Seamlessly integrated Docker and AWS services within the project.
Integrated AWS services such as Amazon RDS, Amazon S3, AWS Lambda, Amazon DynamoDB, or AWS Elastic
Load Balancer (ELB) with Kubernetes applications.
Created advanced workflows, conditions, and scripted fields, and extended Jira's functionalities by Groovy scripting through plugins like Script Runner.
Developed DevOps scripts in Groovy to automate and collection analysis and written some groovy scripts for setting up LDAP configuration for Jenkins using security matrix.
Deployment of microservices in Kubernetes through the (Tencent Kubernetes Engine) platform with Horizontal Pod Auto-scalers / resources allocation leveraging HELM chart. This also includes Special handling of K8S secrets, including Kubernetes ingress.
Worked with Helm Package manager in creating custom charts as per application requirement and deployed them in Kubernetes Cluster.
Developed and maintained Docker images for a tech stack including Cassandra, KAFKA, and several in-house written Java services running on Kubernetes.
Used Ansible to Setup/teardown of ELK stack (Elasticsearch, Log stash, Kibana) and troubleshoot.
They build issues with ELK and work towards the solution and used Ansible playbooks for provisioning instances on Open stack.
Deploying applications on cloud-based PaaS offerings such as Azure App Service, AWS Elastic Beanstalk, or Google App Engine.
Written Ansible inventory files and plays to automate infrastructure administration and deployment automation and created playbooks to install and configure required packages to set up the environments.
Utilized Ansible Playbooks for pulling the artifacts from the centralized location and deploying them onto the Application/Web Server.
Used Run deck Orchestration tool to deploy the artifact files .jar. ear automatically in all the environments, and Scheduling and monitoring jobs through CRON and RUNDECK on the day of release and patching.
Created Terraform templates for provisioning Virtual Networks, VM scale sets, Load Balances, and NAT rules, and used Terraform to deploy the infrastructure to create development, test, and production environments for software development projects.
Configured RDS instances using Cloud Formation and Terraform and used Terraform to map more complex dependencies and identified network issues.
Worked with a teammate to migrate all the jobs from Jenkins to Cloud Bees Platform.
Worked with upgrades of all the CICD applications including SonarQube, Check Marx, Nexus-pro (Includes NEXUS IQ & NEXUS RM), Cloud bees Jenkins, Cloud bees, SCM Manager, Gitlab.
Configured CI/CD pipeline in Jenkins to implement Continuous Integration and Continuous Delivery process, accommodating software teams with compilation and artifact deployment requests in an AWS cloud environment.
Utilized MS PowerShell for automation to support continuous Integration and Deployment in both IaaS
and PaaS models.
Implemented continuous integration using Jenkins. Configured security to Jenkins and added multiple slaves for continuous deployments, Used Git with Jenkins to integrate to automate the code checkout process.
Worked with Nagios Monitoring Tool for easy monitoring of applications, services, network protocols, and email monitoring with powerful script APIs.
Integrated Dynatrace with AWS Cloud Watch to allow to leverage cloud watch metrics and events within the Dynatrace platform, also providing unified monitoring and analysis of AWS resources.
Responsible for deploying Splunk universal forwarder on different Kubernetes clusters for forwarding the
Log reports and data to the Splunk instance for Monitoring.

Environment Variables: AWS, Jenkins, Ansible, Docker, EKS, Kubernetes, Terraform, Maven, SonarQube, Checkmarx, Packer, Python, Shell, WebLogic, DynamoDB, Windows, ELK, Git, Linux, Nexus, Ansible, Splunk, Nagios.

Role: DevOps Engineer
Client: Vanguard, Malvern, PA. Date: Aug 2019 â€“ Oct 2020
Implemented high availability and fault tolerance: Utilized features such as EC2 Auto Scaling and Elastic Load Balancing to ensure high availability and fault tolerance of applications running on EC2 instances, minimizing downtime, and enhancing scalability.
Managed EC2 instance security: Implemented security best practices, including configuring security groups, managing SSH key pairs, and leveraging AWS Identity and Access Management (IAM) to control access to EC2 instances.
Planning to move from VCLOUD to GCP.
Managed and maintained AWS infrastructure, including EC2 instances, S3 buckets, and VPC networking components.
Designed and implemented scalable and secure storage solutions using Amazon S3, Amazon EBS, and Amazon Glacier.
Implemented backup and disaster recovery strategies using AWS Backup, AWS Disaster Recovery (DR) tools, and data replication techniques.
Configured and optimized AWS networking components such as VPCs, subnets, security groups, and VPN connections.
Implemented security measures such as IAM roles and policies, encryption at rest and in transit, and AWS WAF rules.
Monitored AWS resources and applications using Amazon CloudWatch and set up alarms and notifications for timely issue detection and resolution.
Automated the front-ends platform into highly scalable, consistent, repeatable infrastructure using high degree of automation using Ansible, Jenkins, and cloud Formation.
Container management uses Docker by writing Docker files and setting up the automated build on Docker HUB and installing and configuring Kubernetes.
Automated the front-ends platform into highly scalable, consistent, repeatable infrastructure using high degree of automation using Ansible, Jenkins, and cloud Formation.
Installed and configured Jenkins for Automating deployments and providing a complete automation solution and used Jenkins to manage build results and deployment.
Involved in Creating pipelines in Jenkins server to automate the builds of applications in sequential order and configured the master - slave node. Installed and configured Nexus Repository Manager to share the artifacts between the teams within the company.
Working on Docker Engine, Docker HUB, Docker Images, Docker Compose for handling images for installations and domain configurations.
Migrated applications to the PKS, GCP cloud.
Created Git repos and Jenkins jobs for the build and deployment of Micro services in Docker Container.
Worked on the micro services for Unit testing, Integration test cases, Status check foundation framework, Status check Tdd contracts, Compile, Package, Verify, Quality Scan, Publish Artifact, deploy to Development and Start Functional Testing.
Coordinating and interacting with Success Factors Functional consultants, customer functional team to understand the integration business Requirements.

Environment Variables: AWS (EC2, S3, Route 53, EKS, Kubernetes, EBS, Security Group, Auto Scaling, and RDS), GIT, Ansible, Docker, SonarQube, Maven, Python, Nagios, GCP, Jenkins, Ansible.

Role: Build & Release Engineer.
Client: Capital One, VA, USA. Date: July 2018 â€“ Jul 2019
Responsible for the management and continuous improvement of the release process for internal and external web applications.
Developed and implemented Software Release Management strategies for various applications according to the Agile process.
Collaborated with Architects, Systems, Network, Software and QA Engineers, and to continuously improve the efficiency and reliability of Build and Deployment processes to support all phases of development including production releases.
Troubleshooting, event inspection and reporting of various Puppet issues and starting/restarting of Puppet enterprise services.
Managed Puppet classes, resources, packages, nodes, and other common tasks using Puppet console dashboard and live management.
Wrote Puppet manifests for deploying, configuring, installing shield, and managing collected for metric collection and monitoring.
Constructed the Puppet modules for continuous deployment and worked on Bamboo for continuous integration, Wrote Puppet models for installing and managing java versions.
Installed Ansible Registry for local upload and download of Docker images and even from Docker hub.
Implement, maintain, and support reliable, timely and reproducible builds for project teams.
Maintained build related scripts developed in shell for Maven builds.
Created and modified build configuration files including POM.xml.
Worked in all areas of Jenkins setting up CI for new branches, build automation, plug-in management and securing Jenkins and setting up master.
Automated the bundling process and reduced all the manual intervention needed and merged that to the Jenkins job.
Deployed applications using Jenkins server and Troubleshoot build & release job failures, resolve, work with developers on the resolution.
Automation/Simplification of Digital Guarding Process through SPLUNK.
Integrated with leading CI servers and kept builds reproducible with exhaustive build information to track and protect all artifacts used by your CI build using Binary Repository Manager/ Nexus Build System.
Extensively used ANT tool to do the builds and integrated with Bamboo for the builds as the continuous integration process.
Repository management in ANT to share snapshots and releases of internal projects using Nexus tool.
Used LAMP (Linux, Apache, MySQL, PHP) stack in building some of the applications in Linux especially RedHat.

Environment Variables: SVN, Jenkins, Nexus, GIT, ANT, MAVEN, Perl, Puppet, Ansible, Python Scripts, Shell Scripts, Sonar, Red Hat, Splunk.

Role: Tableau Developer
Client: iGATE Global Solutions. India. Date: Jan 2013â€”May 2017
Gathered Business Requirements, interacted with the Users, Project Manager and SMEs to get a better understanding of the Business Processes.
Worked with DBAs to design and implement Conceptual data model, Physical Data Model, SSIS mappings and workflows to meet business requirements.
Responsible for creating ETL mapping documents to define data flow from source system to target database.
Worked with Source system Subject Matter Expert SME to ensure that the extracts are properly mapped.
Worked on the backend SSAS cube development which was the source data for the tableau.
Designing and Developing the ETL Architecture and restructuring the reporting layer.
Prepared dashboards using calculated fields, parameters, calculations, groups, sets and hierarchies in Tableau.
Attended daily stand-up meetings to update scrum master with what is achieved, what is being done and is there any impediment.
Conducted user acceptance testing and mentored business users how to slice and dice data using filters and parameters.
Involved in Onsite Offshore coordination to ensure the completeness of Deliverables.
Design, develop, Architect and Implement Azure DevOps Includes Deploying, Managing and Monitoring Azure Cloud Applications.

Environment Variables: DBAs, Data Model, physical Data Model, SSIS mapping, target, SSAS cube development, SME, dashboards, Slice, Dice data, Azure DevOps, Monitoring Azure Cloud.
Contact this candidate