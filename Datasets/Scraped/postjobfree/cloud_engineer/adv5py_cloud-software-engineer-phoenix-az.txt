Chaim Halbert
Phoenix, AZ *****, local to area or remote
github.com/chaimleib — linkedin.com/in/chaim-halbert — adv5py@r.postjobfree.com Goals
Backend, full-stack, cloud, or embedded systems engineering Protect privacy, empower the customer
Skills
Coding: More than 20 years of experience, first website at age 11. Recent work experience in Go, C#, JavaScript/Node.js, TypeScript, Java, Python, MySQL, bash, zsh, ash and dash, less recent work in Perl, PHP, Ruby, Visual Basic .Net, ladder logic, PLC structured text, LISP. Education and personal project experience in most of these and also C, C++, Objective-C, Swift, awk, Scheme, Matlab/Octave, Verilog. Can write parallel and concurrent code. Creates parsers, compilers and interpreters for new mini-languages. >50 languages.
Web technologies: Full stack web and cloud development using GCP and AWS, MySQL, NoSQL, ElasticSearch, Redis, CouchDB, React, Angular, jQuery, Webpack, npm/yarn, Docker, Kubernetes, SRE. Team process and systems engineering: Designs build systems and cloud apps, and procedures for the problem and the team, some of which have been battle-tested for six years and are still going strong. Security and privacy: Catches potential attack vectors at code review. Protects coworkers’ and customers’ privacy as a matter of deep personal conviction to “do no harm,” while allowing the power and flexibility to get the job done, and done well.
Algorithms and Data Structures: MaxMSP music synthesis and analysis, robot control, machine learning, OCR, pathfinding, 3D graphics and raytracing, operating systems Continuous Integration Testing: Jenkins, TravisCI, CircleCI, GitHub Actions Other: Uses Arch Linux as daily driver. This resume was written in vim using Markdown and rendered with a Makefile. 3D printing, using self-designed models in Blender and FreeCAD. Work experience
Cloud Software Engineer, Evernote (June 2016 - February 2023, Redwood City, CA four years, then remote in Phoenix, AZ)
Led the re-architecting and migration of evernote.com from PHP with AWS to Go with Google App Engine: My system design has been in production for six years so far. Recursive component template system, 26-language localization system, CMS integration for non-programmer edits to site, tooling for deploy, preview, unit test, and code quality, query tools to answer high-level questions about the web service. Google Cloud Platform, AWS, Ubuntu, Debian and Alpine Linux, Docker, Kubernetes, git, Go/Golang, C#, Perl, PHP, Java, bash, dash, zsh, Python, MySQL, NoSQL, Redis, JavaScript/Node.js, Jenkins CI, webpack, React, yarn/npm, SASS, awk, grep, sed, jq, SRE
Content Delivery Network (CDN): For images in Iterable emails. Google Cloud Storage Browser-based note editor and checkout flow: Typescript, React, Java Google Cloud Platform: load balancing, scaling, hosting, URL routing and event routing. App Engine, Cloud Functions, Cloud Storage, Pub/Sub, StackDriver, BigQuery, KMS secrets management, HAProxy Communication: Slack (+ API), Atlassian JIRA and Confluence, BitBucket, DataDog, PagerDuty Software Engineer, Coupa Software (May 2015 – January 2016, San Mateo, CA) Optimized RSpec test harness to work 30% faster, in-browser integration tests and unit tests, cooperated via Agile with hundreds of developers using GitHub and Atlassian JIRA. Ruby on Rails, RSpec, MySQL and migrations, Turnip unit tests, BDD, Cucumber, JavaScript, Jenkins, bash, Jira בס ד
Software Engineer Intern, Rustici Software (June 2014 - August 2014, Nashville, TN) Released open-source Python client library for TinCan API (xAPI 2.0) and created a JSON object verifier and recognizer using JSON Schema and Node.js/JavaScript. Industrial Controls Engineer, Bridgestone (May 2012 - December 2012, Nashville, TN) Designed fail-safes, safety and control systems for factory machinery. Embedded systems, RTOS, electrical schematics, AutoCAD Electrical (incl. plugin development in C# .Net, Visual Basic .Net, and AutoLISP), CoDeSys, RSLogix, PLC, structured text a.k.a. IEC 61131-3, ladder logic Computer Programmer Intern, Oak Ridge National Laboratory Physics Division (June 2010 - August 2010, Oak Ridge, TN)
Modernized a browser-based experiment log system. PHP, JavaScript, MySQL, TinyMCE, ssh, vim, Red Hat Linux
Notable personal and school projects
github.com/chaimleib/intervaltree, 2014 onward. Modify and query intervals in logarithmic time in pure Python 2/3. This is the industry reference implementation of interval trees in Python, cited in numerous academic research papers for genome research, computer vision applications, etc. Python, data structures, open source, CI, GitHub, TravisCI, GitHub Actions, Docker github.com/chaimleib/dotfiles, 2014 onward. Portable, multi-OS environment setup scripts and automatic installers. bash, dash, zsh, busybox, Linux (Ubuntu, Debian, Mint, Arch, Alpine, Red Hat), POSIX, Solaris, CentOS, macOS, MinGW, vim/neovim script, Language Server Protocol github.com/chaimleib/rpn, 2023 onward. Calculator project to teach compiler tools. C, flex, bison, parsers, compilers, interpreters, CircleCI, SonarCloud
Pyenv v2.3.14, github.com/pyenv/pyenv February 2023. Added patches for Python’s source code, versions 3.6 and 3.5, fixing for the world compilation for modern OSes on x86_64 and Apple M1 processors. C, patchfiles, GitHub, pyenv, Python, open-source
Completed Linux From Scratch twice, in 2006 and 2021 (linuxfromscratch.org/lfs). Compiled and configured a complete OS from C/C++ source code. Linux, OS, boot sequence, bash, Makefile, X11 chaimleib.com personal website and jQuery audio player (zichronos), 2014 onward. TLS/HTTPS, Ruby, JavaScript, jQuery, React, Jekyll, GitHub Pages, GitHub Actions, bash, SCSS USB Nintendo 64 Cartridge reader, 2014. Allows backups of N64 games to the computer using Atmega32u4
(Teensy 1.0). Embedded systems, C, Atmel microcontrollers, USB protocol, Linux device development 2-axis gimballed spotlight with IR camera target tracker, UC Berkeley EECS 149 Intro to Embedded Systems, 2014. Embedded systems, C, Python, FSM program architecture, Raspberry Pi, Bluetooth, Nintendo Wii controller, RS485 serial servos
Handwritten digit recognizer, Coursera.com Machine Learning, August 2012 with Prof. Andrew Ng. Octave
(open-source clone of Matlab), computer vision, directed machine learning, matrix algebra Lua-like interpreter, parser generator and bytecode compiler, UC Berkeley CS 164 Compilers, 2010. Python 2, compilers, parsers, interpreters, vimscript, vim syntax highlighting Education
University of California, Berkeley – B.S. program in Electrical Engineering and Computer Science (August 2008 - March 2014)
Projects were completed in Python, C, C++, Java, JavaScript, GNU Makefile, Matlab, Scheme, Verilog, and Latex. Courses covered physics, calculus, matrix algebra, recursive data structures and algorithms, AI, computer graphics, compilers, embedded systems, DSP, FPGAs, analog and digital circuits.
Contact this candidate