Anirudh K
DevOps Engineer
ad6b1f@r.postjobfree.com Ph: 316-***-****

Summary:
Proficient DevOps Engineer with 8+ years of experience designing, building, and automating cloud infrastructure and CI/CD pipelines across AWS, Azure, and GCP.
Skilled in scripting languages (Python, JavaScript, PowerShell, Bash) and database management (MySQL, PostgreSQL, MongoDB, Cosmos DB, Oracle).
Experienced DevOps professional with strong SRE background, adept at optimizing CI/CD pipelines, automating infrastructure, and ensuring system reliability.
Expertise in Infrastructure as Code (IaC) using tools like Ansible, Puppet, Chef, and AWS CloudFormation/Terraform.
Proven ability to implement CI/CD pipelines with AWS CodeBuild/CodePipeline/CodeDeploy, Jenkins, Openshift, and Azure DevOps.
Strong understanding of containerization technologies (Docker, Kubernetes) and infrastructure monitoring (ELK Stack, DataDog, Azure Monitor).
Experience with DevOps tooling, including version control systems (Git, BitBucket), package repositories (JFrog, Azure Artifacts), build tools (ANT, Maven), and project management tools (Jira, Confluence).
Security-conscious with experience in access management (AWS IAM, Azure AD) and network security (Azure VNet, Route 53, Cloud IAM).
Excellent analytical skills and problem-solving with a focus on continuous improvement and automation.
Proven ability to work effectively with development, operations, and security teams to achieve shared goals.
Adept at clearly explaining technical concepts to both technical and non-technical audiences.
Skilled at troubleshooting complex issues, identifying root causes, and developing efficient solutions.

Technical Skills:
Amazon Web Services (AWS): EC2, S3, RDS, Lambda, CloudFormation, IAM, Route 53, Elastic Load Balancing (ELB)
Microsoft Azure: App Service, Virtual Machines, Functions, AzurAzure AD, Azure Virtual Network (VNet), Azure Blob Storage, Azure Artifacts, Azure Security Center
Google Cloud Platform (GCP): Compute Engine, App Engine, Cloud Functions
Infrastructure as Code (IaC): AWS CloudFormation, Terraform
Continuous Integration/Continuous Delivery (CI/CD): AWS CodeBuild, AWS CodePipeline, AWS CodeDeploy, Jenkins, Openshift, Azure DevOps
Containerization and Orchestration: Docker, Kubernetes
Serverless Computing: AWS Lambda, Azure Functions
Version Control Systems: Git, BitBucket
Configuration Management: Ansible, Puppet, Chef
Scripting Languages: Python, JavaScript, PowerShell, Bash, SQL, PL/SQL
Development Tools and IDEs: IntelliJ, Eclipse
Database Technologies: MySQL, PostgreSQL, MongoDB, Cosmos DB, Oracle
Log Management and Monitoring: ELK Stack, DataDog, Azure Monitor
Networking and Security: AWS IAM, Azure AD, Azure VNet, Route 53 (AWS DNS), Cloud IAM, Cloud Load Balancing
Artifact and Package Management: JFrog, Azure Artifacts
Build Tools: ANT, Maven
Collaboration and Project Management: Jira, Confluence
Operating Systems: Linux (Ubuntu, CentOS, Red Hat, Debian), Windows, macOS

Education:
Master of Science in Information Studies Aug 2022-Dec 2023
Trine University, Angola, IN
Bachelor of Engineering in Computer Science & Engineering Aug 2011-April 2015
Osmania University, Hyderabad, India

Professional Experience:

Client: Dell Technologies, Round Rock, TX August 2022 – Current
Role: DevOps Engineer

Implemented and championed Secure Development Lifecycle (SDLC) practices to ensure code quality and security throughout development.
Designed and maintained robust DevOps pipelines for continuous integration and delivery (CI/CD) with tools like CodeBuild, CodePipeline, and CodeDeploy.
Architected and deployed scalable applications on AWS using EC2 instances, S3 for storage, and RDS for relational databases.
Leveraged AWS Lambda serverless functions for cost-effective and event-driven backend logic.
Implemented autoscaling for dynamic resource allocation and optimized infrastructure costs.
Secured cloud resources with IAM roles and policies for granular access control.
Administered and maintained Linux environments for high availability and performance.
Utilized CloudFormation for IaC deployments, ensuring infrastructure consistency and repeatability.
Created Ansible playbooks to automate infrastructure provisioning and streamline configuration management processes.
Utilized YAML-based configuration files to define infrastructure resources and deployment configurations in AWS CloudFormation, enabling automated provisioning and management of AWS resources.
Managed software artifacts using JFrog for secure and reliable package repository management.
Administered MySQL and MongoDB databases for efficient data storage and retrieval.
Implemented ELK Stack (Elasticsearch, Logstash, Kibana) for centralized log aggregation, analysis, and visualization.
Configured secure and scalable virtual networks (VPC) with Route 53 DNS for efficient application routing.
Established Elastic Load Balancing (ELB) for high availability and traffic distribution.
Implemented Git to facilitate version control and enable seamless collaboration among development teams.
Employed JavaScript and Python scripting for automation tasks and development support.
Utilized IntelliJ for development and collaboration and Jira for project management and agile methodologies.
Environment: Python, AWS, JavaScript, Git, ECS, EKS, YAML, CodeBuild, CodePipeline, CodeDeploy, Ansible, JFrog, MySQL, MongoDB, ELK, VPC, IAM, Linux, IntelliJ, Jira

Client: Pay Pal, Sanjose, CA January 2021 – June 2022
Role: DevOps Engineer

Designed and deployed cloud-based applications on Microsoft Azure using App Service, Virtual Machines, and Functions.
Leveraged Terraform and Puppet for Infrastructure as Code (IaC) to automate infrastructure provisioning and management.
Secured cloud resources with Azure Active Directory (Azure AD) for access control and identity management.
Configured secure and scalable virtual networks using Azure Virtual Network (VNet) for application communication.
Managed and monitored cloud resources using Azure Security Center for optimal performance and security.
Played a key role in team efforts to refine the CI/CD pipeline, integrating automation and adopting best practices to facilitate the seamless building, testing, and deployment of containerized applications on AKS.
Administered and optimized PostgreSQL and Cosmos DB databases for efficient data storage and retrieval.
Utilized Docker for containerized application development and deployment on Azure.
Utilized Helm to streamline application packaging, deployment, and configuration management workflows in Kubernetes-based projects, ensuring efficient and consistent deployment of containerized applications.
Implemented Azure Blob Storage for scalable and secure object storage.
Utilized Azure Artifacts to manage and secure software development packages.
Utilized Azure Monitor for proactive monitoring of system health and performance.
Employed BitBucket for version control and collaboration within development teams.
Adhered to Agile methodologies like Scrum to manage project lifecycles and promote continuous improvement.
Developed PowerShell scripts to automate repetitive tasks and streamline DevOps workflows.
Utilized collaboration tools like Eclipse for development and knowledge sharing within teams.
Environment: Azure, PostgreSQL, Cosmos DB, Docker, Kubernetes, AKS, Azure AD, Puppet, Terraform, PowerShell, BitBucket, Azure Monitor, Azure DevOps, Ping Directory, Agile, Scrum, Eclipse

Client: BCBS, Boise, ID November 2018 – December 2020
Role: DevOps Engineer

Designed and deployed highly scalable applications on GCP using a Compute Engine, App Engine, and Cloud Functions.
Automated infrastructure provisioning and management using Terraform for Infrastructure as Code (IaC).
Secured cloud resources with granular access controls through Cloud IAM.
Configured and managed private networks using Oracle Virtual Private Cloud (VPC) for secure communication.
Configured and maintained network infrastructure, utilizing tools such as Ping to diagnose and resolve connectivity issues.
Implemented load-balancing strategies with Cloud Load Balancing for high availability and traffic distribution.
Integrated DataDog for real-time application and infrastructure monitoring, ensuring optimal performance.
Utilized Docker for containerized application development and deployment.
Managed containerized applications at scale using Kubernetes for orchestration and efficient resource utilization.
Utilized Helm to streamline application packaging, deployment, and configuration management workflows in Kubernetes-based project, ensuring efficient and consistent deployment of containerized applications.
Familiarity with defining and measuring SLOs and SLIs to track system reliability and performance.
Implemented monitoring and logging configurations using YAML for Prometheus and Grafana, enabling real-time visibility into system metrics and log data for proactive troubleshooting and performance optimization.
Collaborated with cross-functional teams to implement network upgrades and optimizations, leveraging Ping as part of the troubleshooting process.
Utilized the ELK stack for monitoring purposes, enabling efficient tracking of system performance and facilitating informed decision-making in task execution.
Implemented Chef for automated configuration management of servers and infrastructure.
Developed Bash scripts to automate repetitive tasks and streamline workflows.
Employed Git to manage version control and facilitate collaboration among development teams.
Established and maintained Continuous Integration and Delivery (CI/CD) pipelines with Jenkins and Openshift for automated builds, tests, and deployments.
Leveraged Agile methodologies, such as Kanban, to manage project lifecycles and facilitate continuous improvement.
Collaborated effectively with developers and operations teams using Confluence for knowledge sharing and project management.
Environment: GCP, Terraform, SRE, SLOs, SLIs, ELK Stack, Cloud IAM, Oracle, VPC, Ping Directory, Cloud Load Balancing, Data Dog, Docker & Kubernetes, Chef, Bash scripting, YAML, Prometheus, Grafana, Git, Jenkins, Openshift, Linux, Agile, Kanban, Confluence.

Client: Loyalty Methods, India June 2015 - October 2018
Role: Build and Release Engineer

Designed and implemented CI/CD pipelines using Jenkins for continuous integration and automated deployments.
Utilized Git for version control, managing code branches, and code reviews.
Created build scripts with ANT to automate build processes and manage dependencies.
Provisioned and configured infrastructure on AWS, including EC2 instances for computing, S3 buckets for storage, RDS for relational databases, and Lambda functions for serverless computing.
Orchestrated containerized deployments using Docker and Kubernetes for scalability and efficient resource utilization.
Managed and administered SQL and PL/SQL databases.
Utilized JIRA for agile project management, tracking issues, and reporting progress.
Created and maintained detailed documentation of build and release processes, infrastructure configurations, and troubleshooting procedures for improved knowledge sharing and maintainability.
Championed continuous improvement initiatives by identifying opportunities for automation with shell scripting.
Streamlined workflows and enhanced overall build and release pipeline efficiency.
Environment: Jenkins, Git, ANT, AWS, Docker, Kubernetes, SQL, PL-SQL, JIRA, Shell scripting, Agile, Scrum.
Contact this candidate