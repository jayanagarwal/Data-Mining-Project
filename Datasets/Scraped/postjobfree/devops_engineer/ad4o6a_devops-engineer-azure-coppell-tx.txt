Harika B
Sr. Azure DevOps Engineer
Email ID: ad4o6a@r.postjobfree.com Contact No: +1-216-***-****
Professional Summary

Microsoft Certified Sr. Azure DevOps Engineer with over 7+ years in IT, excelling in Cloud DevOps, CI/CD, and Linux Administration. Proficient in Cloud Migration, utilizing AWS, Azure, and PCF, along with strong SCM skills using Git, SVN, GitHub, and Azure Repos. Expertise in utilizing microservices-based hosting, Infrastructure as Code with Kubernetes, Terraform, Ansible, Jenkins and Docker, by adapting native advanced technology and DevOps best practices.

Professional Competencies: -
Proficient in Administrating Azure IaaS/PaaS services like compute Azure Virtual Machines, Web, and Worker roles, VNET, Network services, Azure DevOps, SQL Databases, Storages, Azure Active Directory, Monitoring, Autoscaling, PowerShell Automation, Azure Search, DNS, VPN.
Expert-level knowledge in designing and developing complex mappings to extract data from diverse sources including flat files, RDBMS tables, legacy system files, Applications and SQL Server
Extensive experience in migrating on-premises applications to Azure and configured VNETs and subnets as per the project requirement and performed PowerShell scripting to do Patching, Imaging, and Deployments in Azure.
Experience in writing Azure Resource Manager (ARM) to deploy, update, and delete multiple resources in Azure and migrating the on-premises resources to Azure with Azure Site recovery (ASR) and Azure backups.
Experience in Azure IaaS - Virtual machines, VM Scale Sets, Load Balancer, Traffic Manager, Virtual Networks, SQL, Resource Groups and Cloud Services.
Experience in Azure Cloud, Azure Data Factory, Azure Data Lake Storage, Azure Synapse Analytics, Azure Analytical services, Azure Cosmos NO SQL DB and Data Bricks.
Extensive involvement in Azure Backup, Azure Policies, Azure Key Vault, Salt Stack and Tagging. Experience in Azure Platform Development, Deployment Concepts., hosted Cloud Services, platform services and close interface with Windows Azure Multi-Factor Authentications.
Experience in CI/CD tools like Bamboo, Azure DevOps, Bit bucket and Sonar code scan validations. Good working experience in DevOps encryption and security on Azure using ARM templates and PowerShell script.
Utilized Terraform for automated infrastructure provisioning, integrated with Chef and Ansible for comprehensive configuration management and automation, streamlining end-to-end DevOps workflows with efficiency.
Configured AWS VPCs (Virtual Private Clouds), subnets, security groups, and VPN connections to establish secure network environments on AWS, ensuring isolation and access control. Implemented Kubernetes for container orchestration, seamlessly integrating with Azure and AWS services to deploy, manage, and scale containerized applications across cloud environments, leveraging Azure Kubernetes Service (AKS) and Amazon Elastic Kubernetes Service (EKS) for efficient workload management.
Effectively integrated Azure and OpenStack technologies to orchestrate hybrid cloud environments, ensuring optimal performance and scalability.
Experienced in migrating on-premises, .Net apps, DevOps platform to Azure CI/CD processes by utilizing ARM templates, Azure DevOps, Azure CLI, App services to build Repos, Pipelines, Web Apps, and monitoring applications using Application Insights.
Experience in Azure Cloud Services, Storage, Web Apps, Active Directory, Azure Container Service, VPN Gateway, Content Delivery Management, Traffic Manager, Azure Monitoring, Key Vault, Visual Studio Online &Azure SQL/Cosmos DB, Azure Multi-Factor Authentications, Load Balancing, and Application Gateways.
Experienced in created and maintained various DevOps build tools for the team such as provisioning scripts, deployment tools, and development and staging environments on VMware, AWS, and Azure.
Proficient in administrating AWS services such as AWS EC2 instances, AWS S3 storage, AWS Lambda functions, AWS IAM for user access management, and AWS Route 53 for DNS administration.
Experience with various Continuous Integration tools (Jenkins, Gitlab, TravisCI). Experience and strong skills in managing Red Hat Linux servers, CentOS, Virtualization, and system security.
Implemented Google Cloud Platform (GCP) solutions to enhance cross-cloud interoperability and support hybrid cloud architectures, leveraging Google Kubernetes Engine (GKE) for containerized application deployment and Google Cloud Storage for scalable data storage and processing.
Expertise in managing Microsoft's Azure infrastructure, Azure web roles, worker roles, SQL Azure, Azure storage, Azure AD licenses, Office 365, Azure. Virtual machine backup and recover from a recovery services vault using Azure PowerShell and portal.
Experience in dealing with Windows Azure IaaS - Virtual Networks, Virtual Machines, Resource Groups, Traffic Manager, VPN, Load Balancing, Application Gateways, Auto-Scaling.
Hands on experience in Azure Development, worked on Azure web application, App services, Azure storage, Azure SQL Database, Virtual machines, Fabric controller, Azure AD, Azure search, and notification hub.
Designed and developed Cloud Service projects and deployed to Web Apps, PaaS, and IaaS. Configured SQL Server Master Data Services (MDS) in Windows Azure IaaS.
Designed, configured, and deployed Microsoft Azure for a multitude of applications utilizing the Azure stack (Including Compute, Web & Mobile, Blobs, Resource Groups, Azure SQL, Cloud Services, and ARM), focusing on high - availability, fault tolerance, and auto-scaling.
Working on version control systems like Subversion, and GIT and used Source code management client tools like GitBash, GitHub, Git GUI, and other command line applications etc.
Design and Deploy Azure cloud Platform Solutions using Azure services like compute engine, cloud storage buckets, persistent disks, cloud load balancer, auto scaling groups, cloud deployment manager, stack driver, cloud IAM and cloud DNS.
Proficient in scripting languages such as PowerShell, Bash, and Python, automating repetitive tasks and enhancing operational efficiency across Azure and AWS environments.
Utilized Azure Monitor, AWS CloudWatch, and Prometheus for comprehensive monitoring of infrastructure, applications, and services, ensuring optimal performance, reliability, and proactive issue resolution.
Domain Skills: -

Cloud Technologies:
Azure, AWS (Amazon Web Service), GCP (Global Cloud Platform)
Version Control Tools:
Visual SVN, Tortoise SVN, GIT, BitBucket, GitHub, Azure Repos, GitLab
Build Tools:
ANT, MAVEN, GRADLE, Artifactory
Database:
MySQL, MongoDB, Cassandra, Postgre SQL, SQL Server, No SQL.
CI /CD Tools:
Jenkins, Hudson, Bamboo, Azure DevOps, Pipelines
Configuration Management Tools:
Puppet, Chef, Ansible
Bug/Issue Tracking:
JIRA, Rally, Fisheye, Remedy, ServiceNow, Azure Boards
Scripting/Programming Languages:
Bash/Shell, Perl, Python, Ruby, power shell, Jason, YAML, Groovy and Go Lang
Log and Monitoring Tools:
Nagios, Splunk, ELK, Cloud watch, Dynatrace, Prometheus, Grafana and Azure Monitor, Datadog
Web Services:
SOAP, REST
OS, Apps / Web Servers:
Windows Family, RHEL, Ubuntu, CentOS / Apache Tomcat, Web logic
Other Tools:
Putty, Nagios, ClearCase, Salesforce
Container
Orchestration Tools:
Docker, Docker Swarm, Kubernetes, Open Shift, AKS, EKS

Professional Experience: -

Sr. Azure Cloud DevOps Engineer
Compliance Group, USA Jan 2023 â€“ Present

Key Role & Responsibilities:
Implemented various Azure Platform as a Service (PaaS) such as Azure App Service, Azure SQL Database, Azure Functions, Azure Logic Apps, and Azure Key Vault, using ARM templates (JSON). Ensured smooth provisioning of services while safeguarding existing infrastructure configurations.
Implemented Azure services such as Azure Active Directory (AD), Azure storage, Azure cloud services, IIS, Azure Resource Manager (ARM), Azure Blob Storage, Azure VM, SQL Database, Azure Functions, Azure Service Fabric and Azure Service Bus.
Worked in deploying CI/CD system using Azure DevOps on Kubernetes container environment, and for the runtime environment of CI/CD system to build, test and Deployment we have utilized Kubernetes and Docker.
Integrated SCM tools with issue tracking systems such as Azure Boards or JIRA to link code changes to specific tasks, user stories, or defects, enabling better traceability and visibility into project progress.
Established workflows and guidelines for branching, merging, and code reviews to maintain consistency and quality standards across development projects.
Enhanced security posture using Azure monitoring tools for security analytics, secret management, and proactive threat detection, such as Azure Security Center and Azure Key Vault.
Designed and automated AZURE Infrastructure as a Service (IaaS) and Platform as a Service (PaaS), SaaS capabilities which includes virtual machine, container services, virtual network, and cloud services.
Implemented Azure Resource Manager (ARM) to deploy, update, and delete multiple Azure resources, as well as migrating on-premises resources to Azure with Azure site recovery (ASR), and Azure backups.
Employed Terraform in conjunction with Packer to streamline infrastructure provisioning, enhancing efficiency for Azure VMs and AKS. Utilized Terraform for Azure Infrastructure as Code (IaC) to deploy VNets, Blob Storage, and Functions, ensuring uniform and reliable deployments.
Utilizing Terraform configurations to incorporate best practices for managing Azure resources including Azure SQL Database, Azure Active Directory, and Azure Service Bus, compliance and security standards were ensured.
Developed standardized Ansible roles and modules across Azure environments and integrated Ansible into Azure DevOps pipelines to accelerate infrastructure provisioning and application deployments.
Provided visibility and control over tasks within the Azure ecosystem by centralizing the administration and orchestration of automation processes with Ansible Tower.
Integrated Ansible into Azure DevOps pipelines to automate infrastructure provisioning and application deployments, leveraging Azure services like Azure Kubernetes Service (AKS) and Azure App Service.
Utilized Azure DevOps services such as Azure Repos, Azure Boards, and Azure Test Plans to plan work and collaborate on code development, built and deployed application.
Developed, maintained, and provided the team with Various Azure DevOps-related tools like deployment tools, staged virtual environments, and provisioning scripts.
Integrated Shared Image Gallery to store the created images and built Azure pipelines in Azure DevOps to implement all these services in Azure.
Utilized Terraform providers to interface with Azure APIs for provisioning various Azure services such as Storage Accounts, App Service, and Cosmos DB.
Implemented remote state storage using Azure Blob Storage or Key Vault, ensuring secure collaboration and centralized state management across teams.
Structured cluster AutoScaler for Azure Kubernetes Service (AKS) by using Terraform and worked with scheduling, deploying, and managing pods and replicas in AKS.
Terraform was used along with Packer to create custom machine images, and Ansible was used to install the software dependencies once the infrastructure was provisioned.
Developed and maintained Continuous Integration (CI) using tools in Azure DevOps spanning multiple environments, enabling teams to safely deploy code in Azure Kubernetes Services (AKS) using YAML scripts.
Managing the Azure Kubernetes Services (AKS) policies and Helm chart, providing access to different Azure resources and developing and improving the workflows that govern access.
Created and implemented subnets and virtual networks (VNets) in Azure to manage network traffic flow and isolate resources for services such as Azure Kubernetes Service (AKS), Azure App Service, and Azure VMs.
Utilized version control tools such as Azure Repos. Comprehensive knowledge of source controller concepts including branches, tags, and merges.
Developed build and deploy scripts using MAVEN and activated them using Azure DevOps to migrate from one environment to another.
Integrate Azure Active Directory (AAD) with Docker containers to enforce identity and access management policies, ensuring secure authentication and authorization for containerized applications.
Worked with Azure Monitoring tools such as Azure Log Analytics, Azure Network Watcher, and Azure Service Health to diagnose and minimize service degradation.
Experience in using the monitoring tools like Azure monitoring, Dynatrace to setup the desired alerts to avoid disruption. Created ARM Template for deploying the resources into Azure using the PowerShell and continuous integration by VSTS.
Implemented Infrastructure as Code (IaC) practices within DevSecOps workflows using tools like Terraform and Ansible to define and deploy Azure resources securely and consistently.
Implemented continuous security monitoring and threat detection tools within Azure environments as part of DevSecOps workflows, enabling proactive identification and remediation of security issues.
Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets using PowerShell.

Environment: Azure DevOps, Azure Monitor, Azure Active Directory, Azure Blob Storage, Azure Service Bus, Chef, Docker, WebLogic, JIRA, Oracle, SQL, Shell, Python, Apache Tomcat, Java, RHEL/Linux, Centos, Solaris, UDeploy, Terraform, Redshift, Kubernetes, JBoss, OpenShift.
Sr. Azure Cloud Infrastructure Engineer
Fidelity, USA Sep 2020 â€“ Dec 2022

Key Role & Responsibilities:

Designing and implementing Azure Solutions across a range of cloud models like SaaS, PaaS, IaaS, and integrated on-premises, on-demand workloads with the Azure public cloud.
Implemented microservices architecture on Azure, leveraging services like Azure App Service, Azure SQL Database, and Azure Functions to enable rapid development and deployment of scalable applications.
Deployed Azure Kubernetes Service (AKS) for container orchestration and Azure Active Directory (AAD) for identity and access management, ensuring efficient deployment, management, and scalability of containerized applications with integrated security features including single sign-on (SSO) and multi-factor authentication (MFA).
Configured CI/CD pipelines in Azure DevOps integrating with version control repositories to automate the build, test, and deployment processes for applications and infrastructure.
Managed source code using version control systems such as Azure Repos, GitHub, and SVN, facilitating collaborative software development and enabling version control and tracking of changes.
Orchestrated Docker containers with Azure Kubernetes Service (AKS) for seamless deployment, scaling, and management of containerized applications, leveraging Azure's robust infrastructure.
Worked on Microservices for Continuous Delivery environment using Azure, Docker. Involved in setting up a Microservice architecture for application development and implemented high availability with Azure Classic and Azure Resource Manager deployment models.
Integrated Azure Monitor with Kubernetes clusters to gain insights into the performance and health of containerized applications, enabling proactive monitoring and troubleshooting.
Configured Azure Key Vault for securely storing and managing cryptographic keys, secrets, and certificates, while also leveraging Azure Traffic Manager for global DNS-based load balancing, ensuring robust data protection and high availability across distributed applications.
Integrated Docker container orchestration with Kubernetes to automate deployment and scaling of containerized applications, ensuring efficient management and utilization of resources.
Utilized Azure Container Registry (ACR) to securely store Docker container images, facilitating integration with AKS for efficient deployment and management of containerized workloads.
Extensively worked on Building and Installing servers, creating multiple resources like in Azure through Azure Resource Manager Templates (ARM) or Azure Portal and provisioned them using Terraform templates. Also worked on Virtual networks, Azure Custom Security, endpoint security and firewall.
Worked in setting up Azure Virtual Appliances (VMs) to meet security requirements as software-based appliance functions (firewall).
Constructed and Installed servers through Azure Resource Manager (ARM) Templates or Azure Portal. Migrating On-premises virtual machines to Azure Resource Manager (ARM) Subscription with Azure Site Recovery.
Developed and designed Azure DevOps pipeline to manage the resources across multiple subscription in Azure. Worked with Version Control, Build & Release Management and Deployments of the Solutions to the DEV, QA & PROD Environments leveraging Azure DevOps/VSTS principles/process (CI/CD) and toolsets of Visual Studio, AKS (Azure Kubernetes Service), Application Insights, Log Analytics.
Implemented Role-Based Access Control (RBAC) policies within Azure Active Directory (AD) to enforce precise access controls across Azure resources.
Configured Azure Security Center for continuous monitoring, assessment, and remediation of security vulnerabilities, ensuring compliance with industry standards and regulations.
Provisioning servers/instances using infrastructure as code such as Terraform and CloudFormation. Code is stored in a private repository and constantly updated.
Implemented Terraform best practices for Azure, including leveraging Azure Resource Manager (ARM) templates within Terraform configurations for advanced resource provisioning and customization.
Worked on Terraform templates also for provisioning virtual networks, subnets, VM Scale sets, Load balancers, and NAT rules and used terraform graph to visualize execution plan using the graph command.
Configured BGP routes to enable ExpressRoute connections between on-premises data centers and Azure cloud.
Developed build and deploy scripts using MAVEN and initiated them using Azure DevOps to move from one environment to other environments. Used Maven to build java-based web applications and integrated it with Nexus repository.
Integrated Ansible with Azure DevOps to provide automation, continuous integration & Continuous Deployment through Azure DevOps and wrote Playbooks to automate Ansible servers using YAML scripting.
Implemented Azure DevOps Workflow and Plugins for repeatable deployments of multi-tier applications, artifacts, and services to Docker.
Implemented Azure Virtual Network (VNet) peering to establish private connections between Azure virtual networks and utilized Network Security Groups (NSGs) to regulate inbound and outbound traffic, enhancing network security and access management.
Integrated Docker container orchestration framework using Kubernetes by creating pods, Config Maps, and deployments. Development of automation of Kubernetes clusters with Ansible, writing playbooks.
Deployed Kubernetes Clusters on cloud/on-premises environments with master/minion architecture and wrote many YAML files to create many services like pods, deployments, auto scaling, load balancers, labels, health checks etc.
Used Splunk APM for log aggregation and analysis on different application servers and integrating the Splunk with Single Sign-On authentication and Service now ticketing tool.
Implemented Role-Based Access Control (RBAC) policies within Azure Active Directory (AD) to enforce precise access controls and enhance security across Azure resources.
Experience in JIRA for ticketing and as well as defect tracking system and configure various workflows, customizations and plug-ins for JIRA bug/issue tracker, integrated Jenkins with JIRA, GitHub, Maven.
Developed and designed Azure DevOps pipelines for managing resources across multiple subscriptions in Azure, utilizing YAML scripting for defining build and release processes, adhering to CI/CD principles.
Utilized Azure Monitoring tools such as Azure Log Analytics and Azure Network Watcher to diagnose and minimize service degradation, ensuring optimal performance and reliability of Azure resources.
Developed build and deploy scripts using Maven and initiated them using Azure DevOps, enabling seamless migration of applications across different environments, and ensuring consistency in deployments.

Environment: Azure Functions, Azure App Services, ARM, Azure DevOps, Docker, WebLogic, Ansible, Azure VM, Oracle, SQL, Shell, Groovy, Perl, Python, Ant, Maven, Terraform, Splunk, Kubernetes.

AWS DevOps Engineer
Deutsche Bank, USA Aug 2019 â€“ Sep 2020

Key Role & Responsibilities:

Utilized AWS Code Pipeline in combination with AWS S3 and AWS Lambda to automate the deployment process of serverless applications, guaranteeing seamless and scalable deployment operations.
Design and implementation of a Ansible-based configuration management system for all new Linux machines. Configured Jenkins masters and slaves on multiple machines and administer all the instances.
Integrated Stash/Bitbucket with Jenkins to start automated builds on Jenkins using various triggers such as pull request, tags and commits.
Integrated AWS Route 53 for DNS management and AWS Identity and Access Management (IAM) for precise user access control to AWS resources.
Experienced in Ansible to configure virtual machines across infrastructure for multiple platforms. Infrastructure consists on multiple-platform environment servers dedicated for building, deploying as well as for development, test and production systems.
Implemented AWS Route 53 for DNS administration, simplifying domain registration, routing, and health checks for highly accessible apps. Deployed AWS Identity and Access administration (IAM) to precisely manage user access and permissions for AWS resources.
Integrated Docker with Jenkins to automatically build containers and then auto deployment of containers using Kubernetes.
Configured Jenkins masters and slaves for automated builds and deployments, integrating with version control systems like Stash/Bitbucket.
Integrated Jenkins with AWS services for continuous integration and automation of application builds and deployments.
Developed build and deployment scripts using Maven and ANT as build tools in Jenkins to move from one environment to other environments.
Build CI/CD pipelines for application and service delivery into Cloud Foundry via Jenkins â€“ build and release with Git and Jfrog Artifactory.
Implemented Terraform to deploy AWS resources across development, test, and production environments, encompassing EC2 instances, load balancers, and auto scaling groups.
Integrated Terraform configurations for AWS Elastic Load Balancers (ELB), enabling auto scaling and monitoring across diverse environments like QA, SIT, and stage, each operating within separate VPCs.
Implemented AWS VPN gateway to establish Site-to-Site connectivity and leveraged Direct Connect with On-Premises Networks, enabling smooth communication between on-premises infrastructure and AWS cloud resources.
Configured and maintained infrastructure with Chef, automating provisioning and management tasks for enhanced efficiency.
Integrated Docker with Jenkins to automate container builds and utilized Kubernetes for container auto deployment, ensuring scalability.
Copying the EBS volumes to different account as image file over the network due to the enterprise restrictions on the KMS encryption keys sharing.
Developed Terraform templates to create load balancers (ELB), EC2 instances with auto scaling, monitoring on the fly for different environments such as QA, SIT, stage which will run on different VPCs.
Used Docker, Jenkins, VMWare, RHEL, Satellite, OpenShift, Kubernetes, Artifactory, Ansible & GitLab
Integrates with the OpenShift platform to put the ability to create, edit and deploy applications.
OpenShift provides an immutable, container-based platform based on Docker to deploy and run applications and microservices.

Environment: AWS code pipelines, S3, EC2, Lambda functions, SVN, Jenkins, AWS IAM, Docker, WebLogic, JIRA, Oracle, SQL, Shell, Groovy, Perl, Python, Ant, Maven, Apache Tomcat, Chef, Java, Terraform, Kubernetes, JBoss, OpenShift.

Build And Release Engineer
Broadcom, India Jul 2018 â€“ Jul 2019

Key Role & Responsibilities:
Worked on Continuous Integration System i.e. Jenkins. Used Jenkins for official nightly build, test and managing change list. Installed Multiple Plugins for smooth build and release build pipelines.
Implemented Jenkins and Bamboo for continuous integration and for End-to-End automation for application build and deployments.
Developed the build CI/CD pipeline script using different programming languages like Groovy, Shell and Python and secure them with Apache Kafka and Agile methodologies.
Integrated Ansible with Jenkins and Bamboo to automate continuous integration processes and streamline application builds and deployments, thereby enhancing the efficiency of the development lifecycle. Implemented VPC peering connection to access the entire CIDR block of the peer VPC without any restriction.
Developed Ansible playbooks and scripts in Groovy, Shell, and Python to streamline the CI/CD pipeline, ensuring secure and efficient automation of build and deployment processes.
Responsible for writing Puppet manifests to automate configuration of a broad range of services. Involved in Setup and Configuration of Chef Configuration Management.
Installed and configured an automated tool Chef that included the installation and configuration of the Chef Server, Chef DK, Chef Client, and an admin control workstation.
Experience in Administration/Maintenance of Source control management systems such as GitHub Involved in migrating from SVN to GIT. Connected continuous integration system with GIT version control repository and continually build as the check-in's come from the developer.
Created multiple Make, ANT, MAVEN, Shell scripts for build automation and deployment. Performed all necessary day-to-day Subversion (SVN), GIT support for different projects. Analyse and resolve conflicts related to merging of source code for GIT. Extensive experience in using Version control systems includes Subversion (SVN), GIT. Developed build and deployment scripts using ANT and Apache MAVEN as build tools in Jenkins to move from one environment to other environments.
Build and maintain SQL scripts and execute different scripts for different environments. Responsible for Change Management activities, to include new business planning, leading regular change control meetings, prevention, and detection of unauthorized migration to production environments.

Environment: Chef, SVN, Jenkins, Docker, WebLogic, JIRA, Oracle, SQL, Shell, Groovy, Ant, Maven, Apache Tomcat, Terraform, Splunk
Linux Administrator
BeeHyv Software Solutions Private Ltd, India Aug 2016 â€“ Jun 2018

Key Role & Responsibilities:

Responsible for installation, configuration and administration of Sun Solaris 9 and Red Hat Enterprise Linux on x86 architecture.
Setting up, configuring, and troubleshooting TCP/IP, DHCP, DNS, CIFS, NTP and Samba servers on different multi-platforms (Windows, Linux)
Administered RedHat Enterprise Linux 5.x/4.x & Solaris 9 servers by testing, tuning, upgrading, patching and troubleshooting both Physical & Virtual server problems.
Installed and configured Disk and file system management using Logical Volume Manager (LVM) for Linux systems.
Local and remote administering of servers, routers and networks using Telnet and SSH login using SSH keygen tools for password-less setup and agent forwarding on Linux.
Responsible for setting up Cron jobs scripts on production server and for writing Puppet manifests to automate configuration of a broad range of services. Involved in Setup and Configuration of Chef Configuration Management.
Deployed pipelines based on Git, seamlessly integrating with continuous integration/continuous deployment (CI/CD) tools such as Jenkins, to automate the deployment of configuration changes across Linux servers reliably and efficiently.
Implemented Chef to configure and administer LDAP authentication on RedHat servers, ensuring robust user authentication and authorization procedures throughout the infrastructure.
Configured LDAP on RedHat for authorization and authentication by configuring LDAP server which is used for authentication using its database.
Configured and maintained Hudson to implement the CI process and integrated the tool with Ant and Maven to schedule the builds.
Created Git branches to manage different versions of system configurations, facilitating easy rollback and experimentation with new configurations in a controlled manner.
Managing services, maintaining, and managing log files, monitoring events, logs and troubleshooting system problems using Nagios tool and resolve for any reported issues.
Used Puppet manifests for automating the deployment and maintenance of system configurations and services on Red Hat Enterprise Linux and Solaris servers, ensuring consistent and reliable system setups.

Environment: Sun Solaris 9, Red Hat Enterprise Linux, LDAP, SSH, Telnet, LVM, Git, Puppet, Chef, Windows, Nagios
Contact this candidate