MANIKANTA NAGUBANDI
+1-269-***-**** @ad45or@r.postjobfree.com LinkedIn Medium
SUMMARY:
Having 10+ years of IT experience as Cloud Engineer, DevOps Engineer, Build & Release Engineer, Linux Administrator, Systems Engineer in SCM, Build/Release Management with Continuous Integration & Continuous Deployment/Delivery as an iterative process and Automation of infrastructure including end-to-end code configuration using different tools, and cloud Providers like AWS, Azure, OpenStack, and PCF.
CERTIFICATIONS:
Business Impacts:
• AWS Certified Solutions Architect– Associate
• Certified Kubernetes Application Developer
• HashiCorp Certified: Terraform Associate
• Microsoft Azure Administrator
EDUCATION:

Bachelors in computer science from Sathyabama University- 2014

PROFESSIONAL EXPERIENCE:
NYC WCB, New York/Azure DevOps Engineer Nov 2021 to Present

•Implemented Enterprise Integration architecture using Azure ServiceBus, AppServices, Active Directory, Storage, hybrid connection manager, active directory authentication for azure SQL server, and other offerings by azure.
•Designed Network Security Groups (NSGs) to control inbound and outbound access to network interfaces (NICs), VMs, and subnets. Provided high availability for IaaS VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer.
•Migrating the existing applications, simplifying the deployment and management of Microservices based on applications using Azure Kubernetes Services (AKS). Responsible for Configuring ARM Templates, ASG Application Security Groups, and Role-Based Access Control. Writing scripts with PowerShell for Run books and SQL Azure from continuous web jobs.
•Developed and maintained automated workflows using SailPoint to enhance provisioning, de-provisioning, and access review processes, reducing manual intervention and enhancing efficiency.
•Maintained documentation related to SOC2 compliance, including policies, procedures, and audit reports.
•Managed and administered OpenShift clusters, ensuring their availability, scalability, and performance.
•Proficient in migrating on-premises workloads to cloud-provided 3-tier managed service support for client dev, test, and prod azure environments. Used AD connects to sync on-premises windows server to Active Directory to monitor azure resources and migrated SQL Server Database to SQL Azure Database using SQL Azure Migration Wizard and then Deployed application to Azure Cloud. Worked on CI/CD pipeline for Azure Cloud Services using CHEF.
•Designed a robust future state Ingestion Framework solution leveraging Azure Data Factory, Azure SQL database& Data warehouse. Deployed and managed Azure storage for SQL DB's (SaaS and PaaS applications), SQL Server on Azure, Windows, and Linux instances among other Azure cloud services.
•Involved in building Azure management template and responsible for creating virtual machines, serverless API using azure functions, responsibilities Azure service fabric to deploy, and manage scalable microservices and containers, and blobs for storage.
•Developed and maintained Python scripts for automating deployment, configuration, and monitoring tasks, reducing manual effort and errors.
•Ensured the security of IaaS resources by configuring firewalls, access controls, and encryption.
•Integrated tools like Jenkins, GitLab CI/CD, or other CI/CD systems with OpenShift.
•Managed configuration files and environment-specific settings within TeamCity, ensuring consistency across different deployment stages.
•JBOSS FUSE ESB, Apache Tomcat Server and JBOSS EAP experience integrating with ForgeRock, Sailpoint, OpenAM, OpenDj for security architecture.
•Created Azure Automation Assets, Graphical runbook, and PowerShell runbook that will automate specific tasks, deployed Azure AD Connect, configuring Active Directory Federation service (ADFS) authentication flow, ADFS installation using Azure AD Connect, and involved in administrative tasks that include Build, Design, Deploy of Azure environment.
•Worked on Serverless services, created and configured HTTP triggers in the Azure Functions with application insights for monitoring and performing load testing on the applications using the Visual Studio Team Services (VSTS) also called Azure DevOps Services.
•Managed PostgreSQL database instances, including installation, configuration, and regular maintenance.
•Managed Azure Infrastructure Azure Web Roles, Worker Roles, VM Roles, Azure SQL, Azure Storage, Azure AD licenses, Virtual Machine Backup, and Recover from a Recovery Services Vault using Azure PowerShell and Azure Portal.
•Developed Kubernetes templates for various applications like Cassandra, Grafana, and Kafka and set up Kubernetes Clusters for running microservices and pushed microservices into production with Kubernetes backed Infrastructure.
•Created Python-based monitoring solutions using libraries like Prometheus and Grafana to collect metrics, set up alerting thresholds, and ensure system reliability.
•Created Templates for Azure Infrastructure as code using Terraform to build staging and production environments. Integrated Azure Log Analytics with Azure VMs for monitoring the log files, storing them, and tracking metrics and used Terraform as a tool, Managed different infrastructure resources Cloud, VMWare, and Docker containers.
•Developed custom scripts and deployment steps in Octopus Deploy using PowerShell and other scripting languages to accommodate complex deployment scenarios and integrate with various systems.
•Successfully integrated SailPoint with various enterprise systems and applications, ensuring seamless access management and identity synchronization.
•Configured applications that run multi-container Docker applications by utilizing the Docker-Compose tool which uses a file configured in YAML format. Used Kubernetes to manage containerized applications using its nodes, Config-Maps, selector, Services, and deployed application containers as Pods.
•Implemented Ansible to manage all existing servers and automate the build/configuration of new servers. Developed an Ansible role for Zabbix-agent which will be integrated into the CI/CD pipeline and used Ansible to document all infrastructures into version control. Used Ansible to document application dependencies into version control.
•Automated configuration management and deployments using Ansible playbooks and YAML for resource declaration and created roles and updated Playbooks to provision servers by using Ansible.
•Configured, and managed Ansible Centralized Server and created the playbooks to support various middleware application servers.
•Implemented multi-tier application provisioning in open stack cloud, integrating it with Ansible, migrating the application using Maven as a build tool.
•Implemented and managed AppDynamics to monitor the performance of critical applications and services.
•Set up a Continuous Delivery pipeline using Ansible playbooks. This primarily consists of Jenkins to run packages and various supporting software components such as Maven.
•Managed MongoDB database instances, including installation, configuration, and maintenance.
•Experienced in creating custom Build &amp, Deployment automation solutions in scripting languages including Python, Shell, UNIX shell, Ruby, Perl, and PowerShell.
•I have worked and administered artifact tools including Nexus and Artifactory.
•Used ELK stacking to monitor the logs for detailed analysis and worked on dashboarding using Elastic, Logstash &Kibana (ELK). Used ELK to set up real-time logging and analytics for Continuous delivery pipelines & applications.

Business Impacts:
•Implemented automated scaling policies and optimized resource allocation, resulting in a significant reduction 13% in cloud infrastructure costs.

New York Sr. Devops/Cloud Engineer Jan’2020 to Oct’ 2021

•Worked on various Azure Services like Compute (Web Roles, Worker Roles), Azure Websites, Caching, SQL Azure, NoSQL, Storage, Network services, AzureActive Directory, API Management, Scheduling, Auto Scaling, and PowerShell Automation.
•Used Azure Kubernetes Service (AKS) to deploy a managed Kubernetes Cluster in Azure and created an AKS cluster in the Azure Portal used template driven deployment options such as Azure Resource Manager Templates and Terraform.
•Used Docker for setting Azure Container Registry with Docker and Docker-Compose and actively involved in deployments on Docker using Kubernetes.
•Unique experience with Pivotal Cloud Foundry (PCF) architecture and design, troubleshooting issues with platform components, and developing Global/Multi-Regional deployment models and patterns for large-scale developments or deployments on Cloud Foundry.
•Set up VSTS CI/CD pipelines for Micro-Services on an AZURECloud using App Services.
•Created Web Apps on an AzurePortal for deploying web applications using VSTS pipelines.
•Implemented Terraform templates to deploy the resources in Azure.
•Developed and maintained Java-based CI/CD pipelines to automate software builds, testing, and deployment processes.
•Developed and maintained Groovy scripts for various automation tasks, including build and deployment processes, configuration management, and data manipulation.
•Expertise in working with Terraform key features such as Infrastructure as a code, execution plans, resource graphs, change automation and created infrastructure in a coded manner using Terraform.
•Managed Kubernetes charts using Helm, and Created reproducible builds of the Kubernetes applications, managed Kubernetes manifest files and managed releases of Helm packages.
•Used Kubernetes to manage containerized applications using its Nodes, Config Maps, Selector, Services and deployed application containers as Pods.
•Used Docker to containerize MicroServices in cloud and managed clusters using Docker Swarm and Kubernetes.
•Implemented Docker-maven-plugin in Mavenpom.xml files to build Docker images for all microservices and later used Docker file to build the Docker images from the Java jar files.
•Created inventory in Ansible for automating continuous deployment and wrote playbooks using YAML Scripting.
•Had very strong exposure using Ansible automation in replacing the different components of Openshift like ECTD, MASTER, APP, INFRA, Cluster.
•Collaborated with cross-functional teams to ensure that SOC2 requirements were integrated into the development and deployment processes.
•Used Chef for Continuous Delivery, managed CI and CD process and delivered all the application in Rpms.
•Implemented continuous integration using Jenkins. Configured security to Jenkins and added multiple nodes for continuous deployments.
•Developed build and Deployment Scripts using ANT and MAVEN as build tools in Jenkins to move from one environment to other environments.
•Implemented PowerShell Remoting. Generated many PowerShell script to aid the Security team management of AD.
•Creating and managing GitHub branches and generating reports using GitHub APIs.
•Utilized VMware templates and cloning techniques for efficient VM provisioning.
•Worked closely with development teams to integrate Bicep templates into their CI/CD pipelines, resulting in faster and more consistent deployments.
•Designed and built custom dashboards and visualizations in Splunk to provide real-time visibility into system and application performance.
•Planned and executed PostgreSQL version upgrades, ensuring minimal downtime and data integrity.
•Integrated PaaS platforms with CI/CD pipelines to automate application builds, testing, and deployments.
•Improved deployment accuracy and reliability by leveraging Bicep's ability to automatically detect and resolve dependencies between Azure resources.
•Integrated Java-based monitoring solutions such as Prometheus and Grafana to track application performance and generate actionable insights.
•Created custom build tools and scripts using Groovy to support project-specific build requirements and dependencies.
•Developed custom Bicep modules to standardize infrastructure across multiple environments and teams.
•Performed all aspects of server management, including installation, updates, AV protection, upgrades, storage management, Event log checking, optimization, and automation scripting using PowerShell.
•Worked on MongoDB database concepts such as locking, transactions, indexes, sharing, replication, schema design.

Business Impacts:
•Analyzed cloud usage patterns and recommended rightsizing of instances, resulting in a 25% reduction in monthly cloud expenditures while maintaining optimal performance levels.

JPMorgan Chase & Co, New York Cloud Engineer (Sep’2017 to Dec 2019)

•Created 85+ custom Terraform modules for IAC with high scalability and Reusability.
•Responsible for User Management, Plug-in Management and END-END automation of Build and Deploy using Azure App services.
•Collected Real-time data from different components of the applications using Azure event Hubs for ingestion of telemetry data.
•Built end-to-end event-driven workflows by integrating Azure event Hubs with other services like azure functions and azure stream analytics.
•Integrated Packer with Azure Git to automatically build and deploy machine images to speed up deployment.
•Configured the Kubernetes provider with Terraform which is used to interact with resources supported by Kubernetes to create several services such as Deployments, services, ingress rules, Config Map, secrets, etc., in different Namespaces.
•Configured Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure Azure Virtual Network (VNets) and subnets, designed VNets and subscriptions to conform to Azure Network Limits.
•Implemented security measures in TeamCity, including role-based access control (RBAC) and secure artifact management.
•Providing the Application Support to the project which is migrated from Weblogic to hybris and Azure cloud.
•Created Clusters using Kubernetes and worked on creating many pods, replication controllers, replica sets, services, deployments, labels, health checks, and ingress by using Helm charts. Implemented Kubernetes to deploy, load balance, scale and manage docker containers with multiple name-spaced versions.
•Implemented and supported Kubernetes cluster running on top of 60 worker nodes and automated deployment tasks with container technologies such as Docker, helm, and rancher.
•Worked with RedHat OpenShift Container Platform for Docker and Kubernetes.
•Used Kubernetes to deploy scale, load balance, and manage Docker containers with multiple namespace versions in the OpenShift platform.
•Performed Java code reviews and profiling to identify and optimize performance bottlenecks in applications.
•Utilized Azure stream analytics to perform real time and batch processing and applied MLOPs and generated actionable insights.
•Created Ansible Playbooks to provision Apache Web servers, Tomcat servers, Nginx, Apache Spark, and other applications.
•Utilized Python-based tools like Kubernetes to manage containerized applications, automating deployment, scaling, and orchestration tasks.
•Integrated Ansible with Jenkins to provide automation, and continuous integration through Jenkins and Implemented Jenkins Workflow and Plugins for repeatable deployments of multi-tier applications, artifacts, and services to Docker.
•Implemented CI/CD pipelines using Azure DevOps to automate the process of building, testing, and deploying.
•Installed Jenkins Plugins for GIT Repository, Setup SCM Polling for Immediate Build with Maven and Maven Repository (Nexus Artifactory).
•Used MAVEN as a build tool on Java projects and created maven POM files from scratch for multi-module projects for the development of build artifacts using the source code.
•Worked on Azure Information Protection (AIP) to protect the data and documents from leak.
•Integrated Jira with Dynatrace to generate Incidents from Dynatrace and deployed new Dynatrace architecture at disaster recovery site & automated provisioning repetitive tasks using Terraform and Python.
•Optimized TeamCity build configurations and build agent pools to reduce build times and resource consumption.
•Created Terraform scripts and shell scripts to automate the spin-up of the cloud resources, application and admin clusters, Load balancers, Drone, Spinnaker, and storage buckets and applied these scripts using a CI pipeline.
•Created automation scripts and programs in development and production environments to implement configuration management using code.
•Using Splunk to monitor the system logs and notify the incident management system upon exceeding thresholds.

Business Impacts:
•Developed scripts and implemented auto-scaling configurations, reducing over-provisioning of resources by up to 30%, resulting in significant cost savings in cloud infrastructure expenses.

Mercury Insurance, Bengaluru, India Cloud Engineer / Aug’2015 to July 2017

•Involved in Designing and deploying AWS solutions using EC2, S3, RDS, EBS Volumes, Elastic Load Balancer, Auto Scaling groups, Functions, Apigee, Cloud Formation Templates, IAM Roles, and Policies.
•Designed and implemented a wide range of applications using practically the whole AWS stack, including EC2, Route53, S3, RDS, Dynamo DB, SNS, SQS, LAMBDA, and REDSHIFT, with a focus on high availability, fault tolerance, and auto-scaling in Terraform.
•For Infrastructure as Code, implemented the AWS Code Pipeline and produced JSON templates for cloud construction in Terraform.
•Led the transition of Jenkins continuous integration and release procedures to AWS Pipelines.
•Wrote Terraform scripts to automate AWS services which include Web servers, ELB, Cloud Front distribution, Database, EC2, database security groups and S3 bucket.
•Worked with Terraform Templates to automate the AWS virtual machines using terraform modules and deployed virtual machine scale sets in production environment.
•Integrated Kubernetes with network, storage, and security to provide comprehensive infrastructure and orchestrated container across multiple hosts.
•Proficient in AWS CDK, Terraform, and Infrastructure as Code (IaC) tools.
•Created custom docker images for generating reports and automated the process and deployed in Kubernetes cluster.
•By using Docker containerization, we made it easier to create code and deploy applications by providing a consistent environment using Kubernetes for deployment scalability and load balancing from development through production.
•Using a Docker file, created Docker images. I have experience with the Docker container service and have worked on Docker container snapshots, uninstalling images, managing docker volumes.
•Build and maintaining Docker container clusters managed by Kubernetes, Linux, Bash, GIT, Docker. Utilized Kubernetes and Docker for the runtime environment of the CI/CD system to build, test, deploy.
•Jenkins auto deployment was used to deploy JAR, WAR, EAR, and J2EE applications to the Apache Tomcat server.
•Creating and installing a CI (Continuous Integration) system for our team, as well as setting up complete CI/CD pipelines, to ensure that each commit a developer makes goes through the required stages of the software lifecycle and is sufficiently tested before being released to the public.
•Extensively worked on Jenkins to implement continuous integration (CI) and Continuous deployment (CD) processes.
•Built jobs in Jenkins to create AWS infrastructure from Terraform code in GitHub repositories, and managed/engineered Jenkins to handle weekly builds.
•Assisted certain teams with putting up jobs that could make use of a CI/CD environment, managing their Bit Bucket repositories, and building up their Bit Bucket repositories.
•Experience in working with EC2 Container Service plugin in Jenkins which automates the Jenkins master-slave configuration by creating temporary slaves.
•Developed automated scripts using Selenium WebDriver and Implemented Framework for Selenium WebDriver scripts using Java.
•Installed and configured Jenkins to deploy application.
•Developed custom Jenkins jobs/pipelines that contained Bash shell scripts utilizing the AWS CLI to automate infrastructure provisioning.
•Designed, installed, and implemented the Ansible configuration management system and used Ansible to manage Webapps, used Ansible Tower to automate repetitive tasks, quickly deploy critical applications and proactively manages change.
•Used AWS Route 53 for configuring the High-Availability and Disaster recovery to make the environment up and running in case of any unexpected disaster.
•Worked with Terraform Templates to automate the AWS IaaS virtual machines using terraform modules and deployed virtual machine scale sets in the production environment.
•Used JIRA and Snow software with Jenkins and GitHub for issue management and real-time bug tracking.
•Closely collaborated with the development and operations teams to put the processes and tools for building, deploying, testing, and automating infrastructure in place.
•Performed middleware administration tasks such deployment, monitoring, and performance tinkering, Work with Release Management and Transition Management on application configurations changes.
•Expertise in system breakdown testing (also known as Chaos Monkey testing), which was mechanized using a Unix shell script.
•Create a set of Groovy scoring models for prospect targeting to improve the efficacy of marketing initiatives for a major nutritional firm.
•Oversaw system support issues for the delivery, infrastructure, and network teams as well as for external vendors and service providers as the Production Support Manager.
•Deployed built artifacts to WebLogic application server using maven and python scripts.
•Developed automated scripts using Selenium WebDriver and Implemented Framework for Selenium WebDriver scripts using Java.

Business Impacts:
•Strengthened disaster recovery capabilities and minimized downtime risks by configuring High-Availability and Disaster Recovery setups using AWS services like Route 53, ensuring uninterrupted services for Hexaware Mercury Insurance customers even during unforeseen events.
•Introduced Docker and Kubernetes for containerization, optimizing resource utilization and reducing the number of virtual machines (VMs) required, leading to substantial cost savings 10%.

Sonata Software, Bengaluru, India Build and Release Engineer / April’2014 to July 2015

•Developed and implemented Software Release Management strategies for various applications according to the agile process.
•Planned and performed the upgrades on Linux and AIX operating systems and hardware maintenance on HP and POWER servers like increasing memory, disk, replacing failed hardware.
•Administered and Engineered Jenkins for managing weekly Build, Test and Deploy chain, SVN/GIT with Dev/Test/Prod Branching Model for weekly releases.
•Automated releases with ANT/Maven scripting for Compiling Java Code, Debugging & Placing Builds into Maven Repository.
•Deployed & troubleshooting of various Jenkins issues. Installed, upgraded & downgraded various plugins in Jenkins.
•Experience in Jenkins/Maven package building and have hands on experience in development using Shell and Python scripting to automate processes.
•Experience in Enterprise repository management tools like Nexus, Artifactory etc.
•Performed migration of the source code from Apache Subversion (SVN) to GIT HUB.
•Involved in periodic archiving and storage of the source code for disaster recovery.

Business Impacts:
•Enhanced efficiency and agility in software release management processes through the implementation of agile strategies, leading to accelerated time-to-market for Sonata's applications.
•Optimized load balancer configurations to distribute traffic efficiently across instances, reducing the need for over-provisioning and improving resource utilization, resulting in a 15% reduction in infrastructure costs.

Description: In collaboration with the State of New York Workers Compensation Board, the State of New York WCB focuses on serving its diverse population with innovative solutions and robust infrastructure. I played a pivotal role in enhancing network security through the design and implementation of robust security groups and load balancers, ensuring stringent control over inbound and outbound traffic within the state's WCB infrastructure.
Description: AIG, a leading global insurance organization, is renowned for its innovative solutions and commitment to risk management. AIG prioritizes innovation and efficiency in its technological endeavours, making strides towards modernization and scalability in the cloud computing landscape. At AIG, I spearheaded Azure cloud infrastructure projects, leveraging a range of services from compute to networking, and orchestrating deployments. My role involved implementing CI/CD pipelines for microservices, integrating tools for efficient automation.
Description: JPMorgan Chase & Co., Is a financial powerhouse of leader in banking and financial services, The company plays a pivotal role in driving economic growth continually seeks to leverage solutions to enhance its operations and deliver value to its clients. As a cloud engineering initiative at JPMorgan Chase. My contributions included architecting robust Terraform modules for infrastructure as code and seamlessly integrating Azure services for efficient build and deployment automation. Leveraging Kubernetes and OpenShift, I orchestrated scalable containerized solutions, optimizing performance and security measures across 60+ worker nodes.
Description: Hexaware is a global IT and Mercury Insurance in India, known for its expertise in digital transformation, automation, and cloud services. With a focus on innovation and client-centric solutions, Hexaware serves diverse industries including Mercury insurance, healthcare. I worked on Automated infrastructure provisioning with Terraform and managed CI/CD pipelines with Jenkins. Integrated Kubernetes for container orchestration and utilized Docker for consistent deployment environments. Implemented Ansible for configuration management and ensured disaster recovery using AWS Route 53.
Description: Sonata Software, a leading IT services company in India, It as innovative solutions to excellence in the IT services industry. provided me with an opportunity to Build and Release Engineer. I spearheaded the development and implementation of Software Release Management strategies aligned with agile principles. My responsibilities on administering Jenkins, orchestrating seamless build, test, and deploy processes, and automating releases using ANT/Maven scripting. In upgrading operating systems, maintaining hardware, and migrating source code repositories from SVN to GitHub.
Contact this candidate