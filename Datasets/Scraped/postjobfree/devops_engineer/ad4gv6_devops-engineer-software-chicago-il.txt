HARSHA REDDY
Sr. DevOps Engineer
ad4gv6@r.postjobfree.com
+1 (814) -727-1314 LinkedIn
Professional Summary:
A cloud enthusiast with 8 years of experience in the IT industry with a major focus on DevOps, Continuous Integration and Continuous Delivery, Linux Systems Administration, Build, and Release Management, and solving complex problems with creative solutions, supporting development and operations environments. Proficient in SDLC phases and implemented the principles of Software Configuration Management in Agile, Scrum Kanban, and Waterfall methodologies and server-side deployments in application and middleware layers.
• Extensive experience in all phases of the Software Development Life Cycle (SDLC), including Requirement Gathering, Estimation, Development, Test support, production release, and warranty support.
• Built, implemented, and managed cloud-based solutions for cloud platforms implementing technologies like Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS).
• Implemented infrastructure on new AWS systems and migrated existing infrastructure to AWS Cloud platforms and automated using Terraform and AWS CloudFormation Templates and modules.
• Experience in designing, deploying, and maintaining various applications utilizing AWS services stack including EC2, S3, EBS, Elastic Beanstalk, Route 53, VPC, Cloud Front, Dynamo DB, Red Shift, RDS, IAM, ECS, ELB, Cloud Formation, SNS, SQS focusing on High Availability, Fault-Tolerance, and Auto Scaling.
• Build and configure Virtual data center in AWS cloud to support enterprises including Virtual private cloud (VPC), public and private subnets, AWS security groups, route table, Elastic load balancing, and Cloud watch.
• Experience in CloudFormation for automating and provisioning AWS resources like custom-sized VPC, NAT Subnets, and NACLs for the deployment of Web applications and database templates.
• Written Templates for AWS infrastructure as code using Terraform to build staging and production environments.
• Meticulously worked with Azure Services such as VMs, Azure SQL, Blob Storage, Network Services, Subnets, VNets, Load Balancer, Azure Kubernetes Service (AKS), and Azure Container Registry (ACR).
• Expertise in Azure cloud services, such as PaaS and IaaS, Azure Web apps, Function Apps, Azure Data Factory, Azure Resource Manager (ARM), Cosmos DB, Azure Multi-Factor Authentications, Active Directory, Azure Identity and Access Management, Load Balancing, and Application Gateways.
• Designed and managed Azure DevOps infrastructure, including pipelines, repositories, and permissions, ensuring optimal performance and security compliance.
• Conducted regular training sessions for development teams on Azure DevOps tools and methodologies, enhancing team productivity and efficiency.
• Configured and optimized Azure Resource Manager templates to enable infrastructure as code (IAAC) deployments. Utilized to improve the consistency, scalability, and efficiency of Azure resource provisioning.
• Solid practical experience in a variety of GCP services like Compute Engine, Cloud Functions, Container Security, App Engine, Knative, Cloud Storage, Google Kubernetes Engine, and Container Registry.
• Architect, Analyze and develop subscription management system based on Microsoft Azure App Service / Azure SQL Database / Azure Cosmos DB.
• Utilized Azure compute services, Azure Web apps, Azure Data Factory & Storage, Azure Media & Content delivery, Azure Networking, Azure Hybrid Integration, and Azure IAM in professional capacity.
• Established Azure DevOps pipelines for multi-cloud deployments, allowing seamless deployment across Azure, AWS, and Google Cloud Platform (GCP), maximizing flexibility and vendor neutrality.
• Experienced in using Docker for virtualization, Ship, Run, and Deploying the application securely to fasten the Build/Release Engineering. Virtualized the servers using Docker for test and dev-environment needs.
• Used Kubernetes for the deployment, scaling, clustering, and management of containerized applications as Pods, Docker Swarm for the administration of Docker containers, and Kubernetes Clusters to support automatic high availability, load balancing, health checking, and failover.
• Created Kubernetes Pod definitions and deployments, and used Helm Charts to version-control whole deployment plans. Learn about using the Minikube tool to run Kubernetes locally for testing and development.
• The ability to build Ansible Playbooks, encrypt data using Ansible Vault, and maintain role-based access control using Ansible Tower to manage web apps and Environment configuration files.
• Proficient in using Ansible as a strong configuration management tool to speed up the deployment of crucial apps and actively manage change.
• Worked on Chef with Knife commands to manage Nodes, Cookbooks, Chef Recipes, Chef attributes, and ChefTemplates and used Ruby scripting for creating cookbooks comprising resources, templates, and attributes.
• Integrated DNS services from cloud providers like AWS Route 53, Azure DNS, or Google Cloud DNS, managing domain records and DNS zones in cloud environments.
• Proficient in using Puppet for configuration management, creating Puppet manifests, and integrating with Jenkins to automate the deployment of infrastructure and provide continuous deployment and testing.
• Solid practical experience with tools like Jenkins, GitLab CI, GitHub Actions, and Bamboo to set up Continuous Integration and end-to-end automation and setup of numerous pipeline jobs for automated builds and deployments.
• Skilled in automating builds using Jenkins, including the creation of new jobs, configuration of plugins, setup of build triggers, specification of build system, post-build activities, scheduling automatic builds, and build reports.
• Used Artifactory Repositories like Sonatype Nexus for Maven and Ant builds to upload artifacts using Jenkins and build tools like Maven, Ant, and Gradle for creating deployable artifacts such as jar, war, and ear from source code.
• Set up and maintained Code repositories to allow branching, merging, and tagging, such as SVN, GitHub, and Bitbucket, and used Jenkins plugins for the SCM to facilitate automated build and code checkout procedures.
• Installed, set up, and administered monitoring software like Chef, Nagios, Prometheus, and Grafana to gather system statistics. Used Kibana and Log DNA to access application-level logs.
• Hands on experience on Unified Data Analytics with Databricks, Databricks Workspace User Interface, Managing Databricks Notebooks, Delta Lake with Python, Delta Lake with Spark SQL.
• Used Splunk, AppDynamics, Dynatrace, Nagios, CloudWatch, and ELK Stack and configured Splunk to monitor applications deployed on the server by analyzing the server log files and applications and working on alerts in Splunk.
• Proficient in Querying RDBMSs like Oracle, MySQL, SQL Server, DynamoDB, PostgreSQL, Redshift, and NoSQL Databases MongoDB and Provided operational and application support to Oracle database and SQL server databases. Knowledge of Snowflake database applications, Snowpipe, Snowflake Clone, and Time Travel.
• Skilled in deploying applications on servers like JBoss, WebLogic, and WebSphere as well as web applications using Tomcat, Wildfly, and IIS.
• Good understanding of Spark Architecture with Databricks, Structured Streaming. Setting Up AWS and Microsoft Azure with Databricks, Databricks Workspace for Business Analytics, Manage Clusters In Databricks, Managing the Machine Learning Lifecycle.
• Skilled in using bug tracking software like Jira, Bugzilla, Remedy, and ServiceNow to track and manage problems with the software development lifecycle, making sure that bugs are found, reported, managed, and fixed in a prompt and efficient manner.
• Excellent familiarity with a variety of scripting languages, such as Python, Bash/Shell, PowerShell, Ruby, Perl, JSON, YAML, and Groovy. For the purpose of automating administrative duties and streamlining the build and release process, many Shell and Python scripts have been developed.
• Experienced in Administration of Production, Development, and Test environments carrying Windows, Ubuntu, Red Hat Linux, Centos, and Solaris servers.
Technical Skills:
AWS Services EC2, VPC, S3, Route53, SNS, IAM, CloudFront, EBS, ELB, ECS, EKS, Lambda, CloudFormation, CloudFront, ssm, Auto Scaling, SQS, etc. Microsoft Azure VM, Active Directory, ARM, App Service, AKS, ACR, Blob storage, Azure SQL, Azure Monitor, Azure Functions, Cosmos DB, etc.
Google Cloud Platform Compute Engine, Cloud Functions, BigQuery, GCR, GKE, Data Proc, DataFlow, App Engine, Knative, Cloud storage, Cloud Datastore, etc.
Infrastructure as a Code (IaaC) CloudFormation, ARM, Terraform Containerization Tools Docker, Kubernetes, OpenShift Configuration Management Chef, Ansible, Puppet
Build Tools Maven, Ant, Gradle
Continuous Integration Tools Jenkins, Bamboo, GitLab CI, GitHub Actions, TeamCity SCM/Version Control Tools GitHub, SVN, Bitbucket
Artifactory Repositories Sonatype Nexus, JFrog
Logging and Monitoring Tools Nagios, Splunk, Prometheus, Grafana, Log DNA, ELK, AppDynamics, Dynatrace, Datadog, Sysdig.
Databases Oracle, MongoDB, SQL Server, MS SQL, MySQL, NoSQL, Cosmos DB, PostgreSQL, Cassandra, Snowflake
Scripts/ Languages HTML, Bash, Shell Scripting, Ruby, Groovy, YAML, Python, Java, Perl, PL/SQL Bug Tracking Tools Jira, Bugzilla, HP-ALM, Remedy, ServiceNow Virtualization Tools Oracle VM Virtual Box, VMware, Vagrant Servers Apache Tomcat, WebLogic, WebSphere, Jboss, Wildfly, IIS, Nginx and Kafka Operating System UNIX, Linux (Ubuntu, RHEL, Centos), Windows Professional Experience:
Amazon, Austin, TX
Sr. DevOps Engineer Oct 2022 - Till Date
Description: Amazon is an online retailer and web service provider. As a Sr. DevOps engineer, created and automated infrastructure on the cloud and was responsible for building, maintaining, and monitoring web applications when new updates/microservices are added using various DevOps tools in CI/CD. Responsibilities:
• Created AWS Launch configurations based on customized AMI (Amazon Machine Image) and used this launch configuration to configure auto scaling groups and Implemented AWS solutions using EC2, S3, DynamoDB, Route53, EBS (Amazon Elastic Block Store), Elastic Load Balancer, Auto scaling groups.
• Developed microservices with AWS Lambda and AWS S3 using Java to improve the performance of the application and managed network security with Security groups and NACLs (Network Access Control Lists).
• Configured AWS IAM and AWS Security Group in Public and Private Subnets in VPC (Virtual Private Cloud) and created AWS Route53 to route traffic between different regions and Used AWS CloudFront to deliver content from AWS edge locations to users, allowing for further reduction of load on front-end servers.
• Designed AWS Data Lake in S3 to integrate data from multiple systems and provide a platform for analytics and used Lake Formation service and KMS encryption to control access to data.
• Expertise in solving manual redundant infrastructure issues by creating CloudFormation Templates using AWS's Serverless application model and deploying RESTFUL APIs using API gateway and triggering Lambda Functions.
• Designed and implemented RESTful APIs using Go standard libraries and frameworks like Gorilla Mux, ensuring reliable and high-performance communication between services.
• Created, managed, and performed container-based deployments using Docker images containing Middleware and Applications together and Evaluated Kubernetes for Docker container orchestration.
• Created Pods with Kubernetes and worked with AWS CodePipelines to drive all the builds of microservices to the Docker registry and deployed to Kubernetes and Implemented the integrated Docker Container orchestration framework using Kubernetes by creating Pods, Configuration Maps, and Deployments.
• Used Jenkins pipelines to drive all microservices builds out to the Docker registry and deployed on Kubernetes, Created Pods and managed, created private cloud using Kubernetes that supports Dev, Test, and Prod environments.
• Involved in migrating applications from AWS EC2 (Elastic Compute Cloud) servers to Docker services for the test and dev-environment needs, configuration, and automation using Docker containers. Leveraged Docker Engine to run Multiple Tomcat Instances as Containerized AppServers.
• Managed different infrastructure resources, like physical machines, VMs, and even Docker containers using Terraform and configured RDS instances using CloudFormation and Terraform.
• Managed Ansible Playbooks with Ansible roles. Used file module in Ansible playbook to copy and remove files on remote systems and worked with deploying web applications on Apache, Maintained high availability clustered and standalone server environments and refined automation components with configuration management (Ansible).
• Created inventory in Ansible for automating the continuous deployment and wrote playbooks using YAML scripts.
• Created schemes for disaster recovery and backup Kafka clusters, providing business continuity and data integrity.
• integrated cluster administration by automating standard Kafka administrative operations with tools like Ansible.
• Configured Apache webserver and Tomcat in the Linux AWS Cloud environment and automatic deployment of applications using Ansible automation. Experience in utilizing AWS CodePipeline a continuous delivery service you can use to model, visualize, and automate the steps required to release your software.
• Designed and implemented RESTful APIs using Go standard libraries and frameworks like Gorilla Mux, ensuring reliable and high-performance communication between services. Developed dynamic and responsive user interfaces using React, implementing component-based architecture to enhance code maintainability and reusability.
• Built backend services using Node.js, Express.js, or other frameworks to provide RESTful APIs and handle data processing, authentication, and authorization.
• Experience in utilizing Jenkins for enterprise-scale infrastructure configuration and application deployments checking out code from AWS CodePipeline and using Maven to build war/jar artifacts and create pipelines.
• Automated Jenkins jobs checking out code from AWS CodeCommit pushed to AWS CodePipline repository by using Poll SCM, and scheduled jobs as night builds and configured Maven test, compile, and build. sp.
• Used MAVEN as a build tool on Java projects for the development of build artifacts on the source code and deployed artifacts into Nexus (Jar and War file) repository and defined dependencies and plugins in Maven pom.xml for various activities and integrated Maven with AWS CodePipeline to manage and deploy project related tags.
• Configured and maintained Maven and Ant build environments in Jenkins, enabling seamless building and packaging of Java applications and ensuring consistent build outputs.
• Created a JavaScript File called message.js, it contained the port number and the email address that the company will be using to let the customer know to reschedule or to attend the appointment.
• Monitoring of Applications and Servers by using shell/python scripts and Nagios as monitoring tools to identify, and resolve infrastructure problems before they affect critical processes and worked on Nagios Event handlers in case of automatic restart of failed applications and services.
• implemented Datadog monitoring for infrastructure and application performance, enabling real-time visibility into system health and performance. configure Datadog's alerting and notification rules to get real-time alerts for significant events, reducing downtime and enhancing system dependability.
• AWS CodeArtifact supports fine-grained access control using AWS Identity and Access Management (IAM) policies. To define policies to manage who can access repositories, packages, and versions, providing secure artifact management within your Project.
• Managed solving manual redundant infrastructure issues by creating CloudFormation Templates using AWS’s Serverless application model and deploying RESTFUL APIs using API gateway and triggering Lambda Functions.
• Implemented Chef using knife commands to manage nodes, recipes, cookbooks, attributes, and templates. Used ruby scripting for creating cookbooktcps comprising all resources for automating Chef.
• Composed Groovy scripts for setting up LDAP configuration for Jenkins using security matrix and developed automated scripts and frameworks using Java, and Groovy script. Defined and enforced AWS IAM policies to manage user access and enhance security.
• Worked on various Database frameworks such as In-Memory Redis using AWS ElastiCache, NoSQL using Datastax Cassandra-Solr, AWS CloudSearch, and MongoDB based on data characteristics.
• Applied software engineering principles to build and maintain continuous integration and continuous deployment
(CI/CD) pipelines.
• Designed and managed container-based deployments using Docker, improving application life cycle management, Streamlined microservices builds through Jenkins pipelines, enhancing efficiency in Docker registry deployment.
• Participated and contributed effectively in daily stand-up, sprint review, sprint demo, and scrum meetings in Agile.
• Kept up-to-date with the latest trends and technologies in computer science, ensuring the adoption of best practices.
• Streamlined and automated business processes through DevOps practices, reducing manual interventions and increasing operational efficiency. Implemented automated infrastructure on cloud, optimizing web application updates and reducing manual redundancy
• Utilized JIRA for ticket tracking, improving change management and bug tracking processes Environment: AWS, Code Deploy, Code Commit, Terraform, Jenkins, Docker, Kubernetes, CodePipeline, Nagios, Nexus, Maven, Chef, Ansible, Hadoop, Linux, Apache Tomcat, Kafka, Datadog, Oracle, Ubuntu, Red Hat, SUSE, Python, JavaScript, Node.js, GO, JSON, XML, YAML, Jira. CenterPoint Energy, Houston, TX
DevOps/Cloud Engineer Oct 2021 - Oct 2022
Description: CenterPoint Energy is an energy delivery company with electric transmission and distribution, power generation, and natural gas distribution operations. As a DevOps/Cloud engineer, created and automated infrastructure for environments, build and maintained cloud infrastructure using cloud resources migrated the On-Premise web servers to the cloud, developed CI/CD pipeline, and set up monitoring tools using various DevOps tools. Responsibilities:
• Worked on Azure (IaaS) by creating Azure Virtual Machines, storage accounts, VHDs, and storage pools, migrating on-premise servers to Azure, and creating availability sets in Azure.
• Worked on Azure Fabric, Microservices, and Docker containers which involved setting up Terraform CircleCI build used Azure Internal Load Balancer to provide high availability for IaaS VMs and PaaS role instances.
• Worked on developing Terraform templates to automate the Azure IaaS infrastructure using Terraform modules and deployed virtual machine scale sets in a production environment.
• Used Terraform to build staging, and production environments and integrated Azure Log Analytics with Azure VMs for monitoring the Azure log files, storing them, and tracking metrics.
• Used Google stack driver for monitoring the logs of both Google Kubernetes Engine (GKE) and GCP instances and configured alerts from Stack driver Also set up VPN and configured Network Access for firewalls, routing, and network tags for migrating Google Compute Engines.
• Set up auto-scaling of the instance group for DEV/QA environments using GCP CLI (Command line tools) and GCP cloud environments and provided proof of concept (POC) on creating server-less architecture with GCP.
• Designing, strategizing, and establishing Azure virtual machines. Executing and overseeing virtual networking deployment within Azure and establishing connections with on-premises environments.
• Created different environments for multiple projects in Google Cloud (GCP) and Azure Platforms, and worked on GCP services like Compute Engine, Cloud Storage, Cloud SQL, and Stackdriver for monitoring.
• Worked on Containerization of applications with Azure Kubernetes cluster and played a key role in building a Platform-as-a-Service (PaaS) environment for web servers and automated Kubernetes cluster for Ansible Tower.
• Worked on Azure Kubernetes and Docker for build, testing, deploying, and containerizing the CI/CD application to deploy on the cloud and managed container replicas on node clusters using Azure Kubernetes.
• Responsible for installation and configuration of the latest Docker version to Datacentre including universal control plane (UCP) and Docker trusted registry (DTR) on a cluster of host’s environments.
• Developed Azure DevOps pipelines to drive all microservices builds out to the Docker registry and deployed them on Azure Kubernetes created pods and accelerated using Azure Kubernetes.
• Created Web-Apps (PaaS solutions) on the Azure portal for deploying web applications using Azure DevOps pipelines. As a part of the DevOps process, Kafka was integrated into CI/CD pipelines for the purpose of testing, deploying, and monitoring applications connected to Kafka.
• Extract Transforming and migrating data from various source systems to Azure Data Storage services via Azure Data Factory, T-SQL, Spark SQL, and U-SQL Azure Data Lake Analytics. Conducting data ingestion into multiple Azure services such as Azure Data Lake, Azure Storage, Azure SQL, and Azure DW, followed by data processing within Azure Databricks.
• Implemented Azure DevOps Pipelines for CI/CD setup, deployed applications automatically by enabling the triggers to deploy, and automated the Azure DevOps pipelines from building the packages to deployments by archiving, zipping, pushing to Azure artifacts, and cutting a release in GitHub.
• Involved in creating the customized Agents for building the pipelines with various dependent packages integrated with the dev portal and created the firewall rules in Azure for deploying the applications from Azure DevOps.
• Created pipelines to move data from on-premise servers to Azure Data Lake.
• Worked on managing Ansible Centralized Server and created playbooks to support various middleware application servers and configuring the Ansible tower as a configuration management tool to automate repetitive tasks.
• Automated weekly releases with Maven scripting for Compiling Jar/War/Rar files by Debugging and placing builds into the Maven Repository. Utilized maven plug-in to execute Python Scripts. Developed modular and responsive user interfaces using React.js, incorporating best practices in component architecture and state management.
• Used Node.js for development of Restful APIs to serve the Front-End requirements and a Node. js-based JavaScript library for building prototypes for various required services such as Logging, Scheduling, and Notification.
• Containerized services in Docker for a Confidential environment by installing and configuring the JFrogo repository manager for sharing the artifacts within the company. Demonstrated expertise in writing cross-browser and cross- device compatible JavaScript code to ensure consistent behavior across various environments
• Developed and customized Jenkins pipelines using Groovy scripting to implement custom automation logic and orchestrate microservices deployments to Docker containers managed by Kubernetes.
• Wrote customized deployment process templates for deploying source bits to Dev/QA/UAT/PROD Environments by developing PowerShell scripts to automate the Azure cloud creation including end-to-end infrastructure and VMs.
• Developed command-line utilities and tools in Go to simplify common tasks, such as log analysis, data migration, or resource provisioning. JSON package for Go was extensively used for marshalling and unmarshalling
• Utilized GIT for version control, collaborating with development teams to manage changes to the .NET codebase and infrastructure as code. Established branching strategies that align with .NET application developed and deployed.
• Imported and managed various corporate applications into the GitHub code administration repo and Managed GIT.
• Working Experience on Azure Databricks cloud to organizing the data into notebooks and making it easy to visualize data through the use of dashboards.
• Installation, configuration, and monitoring of servers, and databases by Oracle Enterprise Manager and Wrote Oracle Stored Procedures, functions, and Triggers using optimizing techniques to reduce the load on the database.
• Skilled in the development, setup, and utilization of Azure Cosmos DB containers.
• Experience in designing and implementing database schemas, normalizing data, and ensuring data integrity using PostgreSQL data modeling capabilities. Familiar with popular tools and frameworks in the PostgreSQL ecosystem, such as PgAdmin, PSQL, PostGIS (for geospatial data), and PgBouncer (connection pooling).
• Monitored the application and infrastructure health by analyzing the logs and observing the user dashboard using Splunk. Deployed Prometheus with Grafana to monitor the Infrastructure and Kubernetes cluster and configured alerts firing when different conditions were met. Involved in server-side administration by deploying Web servers like Microsoft IIS, Apache HTTP, Nginx, and Httpd onto the cloud-based servers.
• Utilized Agile methodologies to streamline application development processes, resulting in faster delivery and improved quality. Created and managed customized CI/CD processes with triggers and post-build actions in Jenkins, ensuring successful downstream dependency builds.
• Worked closely with Business Analysts to understand and translate business requirements into technical specifications for development and deployment.
• Developed metrics dashboards and advanced filters in JIRA to provide end-users and business leadership with performance metrics and status reports.
Environment: Azure, GCP, Terraform, Kubernetes, Docker, Azure DevOps, VSTS, Git, GitHub, Go, .NET, Ansible, Maven, Splunk, Python, Git, New Relic PowerShell, Nginx, Apache, Kafka, Datadog, Oracle, Prometheus, Grafana, JFrogo, PostgreSQL, JavaScript, Node.js, JSON, Jira. AstraZeneca, India
Build and Release Engineer Jan 2018 – Aug 2021
Description: It provides application management and infrastructure management to industries like retail, health care, banking, etc. My responsibilities as a Build and Release Engineer would focus on the creation, maintenance, and enhancement of the software build and release procedures. Responsibilities:
• Maintained the user accounts AWS IAM Roles, configured Route 53 to access the privately exposed application on AWS ECS Clusters, Integrated DynamoDB, SQS and automated push notifications using AWS SNS service.
• Accountable for setting up databases in AWS using RDS, configuring EC2 instance backup by using S3 storage buckets, and AWS CLI (Command Line Interface).
• Experience utilizing Azure Databricks cloud platform to arrange data within notebooks and simplify data visualization via dashboard creation.
• Written Templates for Azure Infrastructure as code using Terraform to build staging and production environments. Integrated Azure Log Analytics with Azure VMs for monitoring the log files, store them and track metrics and used Terraform as a tool, Managed different infrastructure resources Cloud, VMware, and Docker containers.
• Implemented and managed Azure Active Directory (AAD), and AWS Identity and Access Management (IAM), for effectively managing user permissions, groups, and policies to enforce least privilege access.
• Implemented Azure DevOps dashboards and reports to track project progress, monitor deployment metrics, and facilitate data-driven decision-making for stakeholders.
• Architect, analyze and design Payment processor in Azure based on Azure App Service and Azure Service Fabric offering.
• Built and released Cloud-based products containing Linux and Windows environments, using Power Shell and Python. Responsible for Development of DEV, QA, UAT, and PRODUCTION Build and Release.
• Worked on Jenkins as a continuous integration server by integrating it with Git, Maven, Sonar Scanner, and Nexus.
• Integrated GIT into Jenkins to automate the code check-out process with the setup of SCM Polling for Immediate build with Maven, Code Analysis with Sonar scanner, and Artifactory as Nexus.
• Experienced as a Kubernetes Administrator, responsible for configuring web applications and managing various Azure services such as App Services, Application Insights, Application Gateway, DNS, Traffic Manager, and additional App Services.
• Implemented routing, middleware, and templating in Go web applications, delivering dynamic and interactive user experiences. Integrated C# applications with cloud platforms like AWS, managing resources and leveraging cloud- native services. Experience in integrating Unit Tests and code quality analysis tools like Junit and Selenium.
• Responsible for estimating the cluster size, monitoring, and troubleshooting of the Spark Databricks cluster.
• CHEF and Jenkins. Experience in installing, administering, and maintaining CHEF which is used as a configuration management for existing infrastructure. Integrated Hadoop with various components of the Hadoop ecosystem, including Hive, Pig, Spark, and HBase, to support end-to-end data processing and analysis workflows.
• Used CHEF to manage Web Applications, Config files, Database, Commands, and user mount.
• Experience in writing chef cookbooks and
Contact this candidate