Jayanth Reddy K
Sr. Azure DevOps Engineer
Email: ad5r42@r.postjobfree.com
Contact no: +1-469-***-****
LinkedIn: www.linkedin.com/in/jayanth-reddy-k-768b35298 Professional Summary:
Ø Having 8+ years of IT experience as professional Sr. Azure DevOps Engineer with a strong background in DevOps engineering, build & release engineering. Ø Experience in software development lifecycle (SDLC), which includes User Interaction, Business Analysis/Modeling, Design, Development, Integration, Documentation, Testing, and Deployment. Ø Experience in administrating various Azure IaaS/PaaS services such as Azure Virtual Machines, Web and Worker roles, VNET, Network services, Azure DevOps, SQL Databases, Storages, Azure Active Directory, Monitoring, Autoscaling, PowerShell Automation, Azure Search, DNS, and VPN. Ø Proficient in using various Azure tools, including Azure Network Security Groups, Azure Operational Insight and OMS, AZURE Premium Storage, Site Recovery, Network Virtual Appliance, and Client-Side encryption for Azure storage objects. Expertise in deploying AZURE AD Connect, configuring ADFS authentication flow, ADFS installation using AZURE AD Connect. Ø Proficiently experienced in AWS Services like EC2, IAM, VPC, Cloud Formation, S3, SNS, SES, RedShift, CloudWatch, SQS, Route53, CloudTrail, Kinesis, Lambda, Network ACLs, Security Groups, Route53, Elastic Beanstalk and RDS and obtaining High Availability, Fault Tolerance and autoscaling for AWS EC2 instances utilizing the services like Elastic IP, EBS and ELB. Ø Templated AWS Infrastructure as a code using Terraform to build staging and production environments. Ø Strong knowledge on Ansible Roles, inventory, Ansible Tower, Ansible Galaxy concepts and used Ansible Control Server to deploy plays and playbooks to the machines and systems in the inventory. Have also created Ansible Playbooks to provision Apache Web servers, Tomcat servers, Nginx, and other applications.
Ø Used Azure Container Registries Tasks to build container images in Azure and created multi-step tasks to automate building, testing, and patching multiple container images in the cloud. Ø Configured Kubernetes Replication controllers to allow multiple pods such as Jenkins Master server in multiple minions. Managed Kubernetes charts using Helm, managed Kubernetes manifest files and created repeatable builds of the Kubernetes application. Ø Using Kubernetes, we scheduled, deployed, and managed container replicas onto a node cluster. Also deployed Docker containers through Kubernetes to manage the micro services utilizing its nodes, pods, config maps, selectors, and services.
Ø Used Azure Container Instances for deploying Docker containers onto Azure infrastructure without provisioning using any VM’s.
Ø Experience working with Chef roles, cookbooks, recipes, templates, resources, attributes, and data bags. Furthermore, proficient in setting up Chef servers, workstations, and bootstrapping infrastructure Chef nodes for effective configuration management.
Ø Proficient in Bash, Python, and PowerShell scripting to automate processes in various environments. Skilled in using Git and Subversion (SVN) as SCM tools on both Linux and Windows platforms for effective software configuration management.
Ø Proficient in installing, configuring, and managing RDBMS and NoSQL tools like SQL Server, MySQL, DB2, PostgreSQL, MongoDB, DynamoDB, and Cassandra. Ø Expertise in creating resources using Azure/AWS Terraform modules and automated infrastructure management. Additionally, experienced with key Terraform features, such as Infrastructure as Code, Execution Plans, and Resource Graphs also used Auto Scaling for launching cloud instances while deploying microservices and used Terraform to map complex dependencies and identify network issues. Ø Managed ELK (Elasticsearch, Logstash & Kibana) stack to collect, search and analyze log files across servers, log monitoring and created geo-mapping visualizations using Kibana in integration with Ansible. Ø Used Terraform Templates to automate the IaaS virtual machines and deploy virtual machine scale sets in various environments.
Ø Created a production environment with Terraform and Terra grunt as a wrapper. Developed infrastructure tests with Go and Terra test.
Ø Configured and deployed Azure Automation Scripts for a variety of applications that use the Azure stack for Compute, Web and Mobile, Blobs, Resource Groups, Azure Data Lake, HDInsight Clusters, Azure Data Factory, Azure SQL, Cloud Services, and ARM Templates. Ø Experience in Windows Azure environment, creating the New VMs, Azure subscriptions, storage accounts, managing SSL certificates for IIS websites, administering Azure assets using PowerShell. Ø Implemented DevOps pipeline Automated Builds, Continuous Integration and Continuous Delivery with tools Jenkins.
Ø Experience in Building and deploying the application code using CLI of Kubernetes called kubectl, kubelet, kubeadm, kubespray and Schedule the jobs using Kube-scheduler. Ø Designed and maintained Continuous Integration (CI) by using Azure DevOps services that cover multiple environments, allowing teams to deploy code in Azure Kubernetes Services (AKS) with security using YAML scripts.
Ø Migrated legacy applications to Microsoft Azure Cloud PaaS by setting up CI/CD pipelines on Azure DevOps.
Ø Utilized Python API to upload agent logs into Azure blob storage while managing the migration of SQL Server databases to SQL Azure.
Ø Creating and managing VM in Windows Azure, establishing connectivity with the help of endpoints, and Migrating VM from Transitional hosts on VMWare/ Boxes. Ø Experience managing repository managers like Nexus for Maven builds. Additionally, integrated Maven with Jenkins to capture Surefire test reports and Javadoc produced by Maven, and to build parallel modules for larger Maven projects.
Ø Experience using Splunk for log analysis and improving server performance. Additionally, I played a key role in standardizing the deployment, configuration, and maintenance of Splunk forwarders across both UNIX and Windows platforms.
Ø Knowledge in using Terraform and Ansible, migrate legacy and monolithic systems to Azure and managing Ubuntu and RHEL virtual servers on Azure by creating Ansible Nodes. Ø Experience in working on cluster management on Kubernetes to create Pods, Nodes, and deploying microservices pulled from the Docker Registry and managed by Kubernetes. Technical Skills:
Cloud Platforms Azure, AWS, GCP, OpenStack
Configuration Management
Tools
Ansible, Chef, Puppet, Terraform
CI /CD Tools Jenkins, Bamboo
Build Tools Maven, ANT
Containerization Tools Docker, Kubernetes, OpenShift Version Control Tools GIT, GITHUB, Bitbucket, SVN
Logging & Monitoring Tools Nagios, Splunk, ELK, CloudWatch, Azure Monitor, New Relic, Logstash
& Kibana (ELK), JIRA.
Scripting & Programming
Languages
Python, Bash/Shell, PowerShell, Ruby, C, Java/ J2EE, .Net Databases Oracle 10g/11g/12c, DB2, MySQL, NoSQL (MongoDB, DynamoDB, Cassandra, Spark),
Application/Web Servers Apache Tomcat, NGINX, JBoss, WebSphere, Web Logic. Operating Systems UNIX, Linux, Windows, Solaris.
Virtualization Platforms Oracle VirtualBox, VMware Workstation, Vagrant, VMware. Bug Tracking Tools JIRA, Bugzilla, Remedy,.
Scripting Python, YAML, Ruby, Bash, Shell, PowerShell, JSON. Professional Experience
Sr Azure DevOps Engineer
Homesite insurance, Boston, MA June 22- Present
Responsibilities:
Ø Configured Rancher to manage AKS clusters and automated the deployment and configuration of Kubernetes workloads using Rancher. Migrated a legacy application to Kubernetes using Rancher, saving the company $10,000 per year and resolved a critical issue in Rancher that caused a cluster outage, preventing downtime for 100 users.
Ø Ensured the security and compliance of Kubernetes workloads by combining Azure's RBAC and Rancher's access control mechanisms, meeting industry standards and regulatory requirements. Ø Configure Atlantis to listen for Terraform pull request events. Atlantis uses webhooks to listen for Terraform pull request events.
Ø Demonstrated proficiency in deploying, configuring, and managing Istio service mesh within Azure Kubernetes clusters using Rancher, enhancing microservices communication, and observability. Ø Implemented POC and configured FluentD to aggregate logs from various sources, parse them, and securely forward them to centralized logging systems such as Elasticsearch, Logstash, and cloud-based services.
Ø Performed POC on opensource monitoring tool Prometheus, Grafana or Datadog for AKS monitoring and implemented with Prometheus and Grafana as it of more customizable and of course open-source tool. Ø Breaking monolithic applications to microservices and deploying them on AKS using Helm charts and Azure DevOps pipeline.
Ø Authoring and and Logic App diagnostics.building Azure Logic apps, Logic App integration, Publishing and monitoring Logic Apps
Ø Dealing with Windows Azure IaaS - Virtual Networks, Virtual Machines, Cloud Services, Resource Groups, Express Route, VPN, Load Balancing, Application Gateways, Auto-Scaling, and Traffic Manager.
Ø Implemented and maintained dev, test, staging, and production environments leveraging infrastructure as code using Azure ARM templates (Infrastructure as code, JSON / YAML config). Ø Performed security monitoring tests to identify intrusions. Configured with F5 Load balancers in Failover for Load balancing and SSL handling with various scripting languages like Bash, Perl, Shell, Ruby, PHP and Python.
Ø Configuring Azure web apps, App services, Application insights, Application gateway, DNS, Traffic Manager, Analyzing Azure Networks with Network Watcher, Implementing Site Recovery, Azure Stack, Backup and Recovery.
Ø Experience with Azure VPN Gateway: configuring and managing site-to-site and point-to-site VPNs. Experienced with Azure ExpressRoute: connecting on-premises networks to Azure using a dedicated private connection.
Ø Ability to create and manage Helm charts. This includes creating new charts, editing existing charts. Ø Updating Ansible scripts changes and pushing on git repository. Creating S3 buckets and managing policies for S3 buckets
Ø Migrating .net core application legacy deployments from IIS to containerized platform using docker, Kubernetes, OpenShift and terraform. Automated repetitive tasks and processes using GitLab CI/CD scripts. Ø Utilized GitLab for version control and collaborated on projects using Merge Requests and Issues. Ø Deployed and managed Azure SQL and NoSQL databases using AKS and Terraform Azure pipelines, ensuring high availability and scalability.
Ø Implemented Terraform and wrote custom Terraform templates for creating Azure services and resources like (VNets), subnets, Azure network settings, NSG’s, Resource groups, VM’s, Kubernetes cluster and store the Terraform state in Azure Blob storage and monitor microservices on AKS. Ø Configured Azure monitor to monitor all Kubernetes clusters across different resource groups in the subscription. Expertise in using PowerShell scripting to automate tasks, troubleshoot problems, and develop custom solution.
Ø Expertise in using PowerShell scripting to automate tasks, troubleshoot problems, and develop custom solution.
Ø Integration of Maven/Nexus, Jenkins, Urban Code Deploy with Patterns/Release, GitHub, Confluence, JIRA and Cloud Foundry.
Ø Implemented Enterprise Integration architecture using Azure Service Bus, AppServices, Active Directory, Storage, hybrid connection manager, active directory authentication for azure SQL server and other offerings by azure.
Ø Designed Network Security Groups (NSGs) to control inbound and outbound access to network interfaces
(NICs), VMs and subnets.
Ø Configured Azure Backup Service for taking backup of Azure VM and data of on premise to Azure, built and installed servers through Azure Resource Manager (ARM) templates or Azure Portal. Ø Developed Python Scripts to automate various system tasks, OS patches for dev environments, and deployment of applications to testing/prod environments using Python OS modules. Ø Used Service fabric Cluster to deploy Jenkins as a service fabric application to the cluster and using that deployed all of the service application.
Ø Involved in Windows system administration and performance tuning. Wrote PowerShell Scripts to automate the deployments on to Octopus deploy.
Environment: Azure, Azure DevOps, PowerShell, Okta, Azure AD, POC, Citrix, Python, Linux, MySQL, Apache Tomcat 7.x, Docker, Virtualization, plug-ins Apache HTTP server 2.4, JDK1.7, XML, GIT, AppDynamics, Datadog, AppInsights, JSON.
Senior DevOps Engineer
Cisco, San Jose, California Oct 19 - May 22
Responsibilities:
Ø Provisioned Azure resources of different providers Compute, Network, Service Fabric, using ARM template and implemented and maintained dev, test, staging, and production environments leveraging infrastructure as code using Azure ARM templates (Infrastructure as code, JSON / YAML config). Ø Written Templates for Azure Infrastructure as code using Terraform to build staging and production environments. Integrated Azure Log Analytics with Azure VMs for monitoring the log files, store them and track metrics and used Terraform as tool, Managed different infrastructure resources Cloud, VMware, and Docker containers.
Ø Designed and implemented CI/CD pipelines using GitLab CI/CD for automated builds, testing, and deployment.
Ø Developed automation scripts in Python for various tasks, improving operational efficiency. Ø Worked on AWS to Azure migration, Jira to Azure DevOps Boards Migration, GitHub to Azure DevOps Migration along with Experience in configuring and using PaaS offerings (like Azure Database services, Azure Kubernetes, OpenShift and Azure Containers, DNS, Application gateway rerouting, Application Insights, Azure Container Monitors, etc.).
Ø Integrated AWS Dynamo DB using AWS lambda to store the values of the items and backup the AWS Dynamo DB streams and Automated backup of data in EBS and instance store to AWS S3 buckets and created backup of AMI for mission critical production servers from AWS CLI and used AWS Data pipeline to configure data loads from AWS S3 into Redshift. Ø Implemented and enforced coding standards and best practices within the GitLab environment. Ø Creation of gitlab-ci.yml file for kicking build process in stages that run in docker container. Ø Involved in Serverless services (Azure Functions) where I created and configured HTTP Triggers in the Azure Functions with Application insights for monitoring and performing the load testing on the Applications using the Azure DevOps Test Plans, also configured Shared dashboards with required metrics and logs.
Ø Integrated AWS Dynamo DB using AWS lambda to store the values of the items and backup the AWS Dynamo DB streams and Automated backup of data in EBS and instance store to AWS S3 buckets and created backup of AMI for mission critical production servers from AWS CLI and used AWS Data pipeline to configure data loads from AWS S3 into Redshift. Ø Implemented and enforced coding standards and best practices within the GitLab environment. Ø Creation of gitlab-ci.yml file for kicking build process in stages that run in docker container. Ø Created docker images for micro-services to work in AWS ECS and configuring Application load balancer and auto scaling groups for high availability of application in cloud. Ø Created and Maintained pipelines to manage the infrastructure as a code (IAC) for all the applications. Ø Created and maintained Continuous Integration (CI) using tools like Azure DevOps visual studio team services (VSTS) over multiple environments to facilitate an agile development process which is automated and repeatable, enabling teams to safely deploy code in Azure Kubernetes Services (AKS) using Azure DevOps by YAML scripting.
Ø Deployed Kubernetes Cluster on Azure with master architecture and wrote many YAML files to create Ø many services like pods, deployments, auto-scaling, load balancers, labels, health checks, Namespaces, Config Map, etc.
Ø Worked on implementing the Kubernetes Cluster API to manage, create, scale, upgrade and destroy of the Kubernetes clusters using a declarative API on both on-premises and Azure Cloud using BareMetal operator and Azure providers from Cluster API’s.
Ø Created, managed, and performed container-based deployments using Docker images in the Docker Hub containing Middleware and Applications together and evaluated Kubernetes for Docker container orchestration.
Ø Used Nagios as a monitoring tool to identify and resolve infrastructure problems before they affect critical processes and worked on Nagios Event handlers in case of an automatic restart of failed applications and services.
Ø Monitoring the performing tests in stage using monitoring tools like Splunk, Marvel, Dynatrace, Kibana for response times MS, CPU%, JVM’s, web requests, V cores. Ø Designed, build and managed the ELK (Elasticsearch, Logstash, and Kibana) cluster for centralized logging and search functionalities for the Applications. Ø Worked on GITHUB and Bitbucket to track changes made by different people in source code and configured GIT with Jenkins and schedule jobs using POLL SCM option. Ø Created Azure Automation Assets, Graphical runbooks, PowerShell runbooks that will automate specific tasks. deployed Azure AD Connect, configuring ADFS authentication flow, ADFS installation using Azure AD Connect.
Ø Implemented Azure Kubernetes Service (AKS) to deploy a managed Kubernetes cluster in Azure and created an AKS cluster in the Azure portal used template driven deployment options such as Azure Resource Manager (ARM)templates and terraform.
Ø Developed Kubernetes manifests for various applications like Cassandra, Grafana, Prometheus, Kafka and setting up Kubernetes Clusters for running microservices and pushed microservices into production with Kubernetes Infrastructure.
Ø Expertise in using Docker to containerize custom web applications and deploy them on Digital Ocean with Ubuntu instances through Cluster and to automate the application deployment in cloud. Ø Implemented Ansible Tower to schedule jobs and to manage complex network deployments with the addition of control and delegation to Ansible powered environment and automated the infrastructure using Ansible roles downloaded and managed from Ansible Galaxy. Ø Used Terraform for building, changing, versioning infrastructure and collaborate the automation of Azure Infrastructure via Terraform and Jenkins.
Ø Implemented Terraform Templates automating Azure VM using Terraform modules and deployed virtual machine scale sets in production environment.
Ø Configured Jenkins by identifying and installing required plug-ins. Wrote Seed. Groovy scripts to configure Build Jobs, Build Pipelines and by using Jenkins created a master and slave configuration to implement multiple parallel builds through a build farm. Ø Implemented integration testing unit-testing strategies for Jenkins shared libraries using Junit and Groovy Spock.
Ø Wrote Jenkins shared libraries for CI/CD life cycles and created generic pipelines across the cloud applications to automate application. Worked on multiple areas of Jenkins like Plugin Management, Securing Jenkins, Performance issues, Analytics, Scaling Jenkins, integrating Code Analysis and Test Phases to complete the CI/CD pipelines within Jenkins. Ø Implemented Jenkins pipeline jobs to create Azure Infrastructure from GitHub repositories containing Terraform code and created on-premises active directory authentication using automation with ansible playbooks.
Ø Maintained applications by Monitoring Logs Information, Resources usage and Performance and get the Health and Security notifications by using Monitoring tools like Splunk, ELK (Elasticsearch, Logstash, and Kibana), Datadog, Nagios, Zabbix.
Environment: Terraform, Azure, Ansible, Azure AD, Azure SQL, CDN, ARM, Azure Traffic Manager, Azure Kubernetes, Azure DevOps, Azure Containers, GitLab, VSTS, Docker, Docker Swarm Cluster, GitHub, Linux, Groovy, Spock, Junit, Jenkins, CloudWatch, Nagios, AWS. Role: DevOps Engineer
CVS, New York, NY Aug 17 – Sep 19
Responsibilities:
Ø Worked on creating a CI-CD pipeline leveraging Gitlab CI/CD while migrating off Code Pipeline. Ø Used Gitlab as the code repository, Packer to bake the AMI, Gitlab to integrate multiple pipeline jobs, Cloud Formation to spin up the infrastructure. Worked on Deploy automations. Ø Created build container with required dependencies to build application packages, artifacts for the application build dependencies and deployments.
Ø Created a fully automated provision of Solr Cloud infrastructure. The stack brings up 3 Zookeepers, required number of Solr Nodes which communicate to the Zookeeper and the load balancer for Solr. Ø Created S3 buckets and maintained and utilized the policy management of S3 buckets and glacier for Storage and backup on AWS.
Ø Created Cloud Formation templates to bring up each part of the infrastructure. Used Cfn Init, user data and leveraged auto scaling groups, installing packages through the user data to bring up the entire infrastructure. It helped build Immutable, highly available, fault tolerant infrastructure. Ø Managed Kubernetes charts using Helm, and built reproducible Kubernetes applications builds, managed Kubernetes manifest files and Helm package releases.Configured Logstash with config files to integrate with ELK stack for log aggregation. Elastic Search, Kibana and Logstash, python scripts to automate many routine and regular timed tasks.
Ø Created RDS clusters with multiple readers to populate Solr Cloud production index using RDS reader end point. Installed and configured Grafana with graphite as the back-end database for metric collection, monitoring and graphing. Used cronjobs and agents to collect and send metrics to graphite. Ø Installed and configured SSM agent to run shell scripts remotely on EC2 using SSM. Ø Enabled logging to send logs to cloud watch by creating cloud watch log groups and giving instance access to write the logs using IAM role.
Ø Configured Jenkins with SVN and scheduled jobs using the Poll SCM option for streamlined automation. Ø Developed Shell scripts to automate the Build and Release process, as well as custom scripts for monitoring repositories and server storage.
Ø Deployed and configured Atlassian tool JIRA for both hosting and issue tracking for local instances, workflow collaboration, and tool-chain automation, also used Remedy for bug tracking. Ø Implemented Maven and Shell scripts to automatically compile, package, deploy, and test J2EE applications on various WebSphere platforms.
Ø Responsible for Installation, Configuration Management, Maintenance and Systems Development of Red Hat Linux, Oracle Enterprise Linux / UNIX Systems. Ø Created Docker images for RESTful web services and Database systems, and efficiently stored them in Artifactory.
Ø Utilized J2 templates for maintaining environment-specific configurations in Ansible Modules. Ø Efficiently deployed Docker images and dynamically scaled containers based on resource utilization and requirements in each environment.
Ø Successfully performed and deployed builds for various environments such as QA, Integration, UAT, and Production.
Ø Developed BASH shell scripts to automate and schedule cron jobs for efficient job automation. Role: DevOps Engineer
People Tech, Hyderabad, India. Nov 15 – Jul 17
Responsibilities:
Ø Worked on escalated tasks related to interconnectivity issues and complex cloud-based identity management and user authentication, service interruptions with Azure Virtual Machines (their host nodes) and associated virtual storage (Blobs, Tables, Queues). Ø Migrating Services from On-premises to Azure Cloud Environments. Collaborate with development and QA teams to maintain high-quality deployment.
Ø Moved 72 web services and related applications to Deploy and maintained them across 5 environments Develop, QA, UAT, PreProd and Prod.
Ø Configured NSGs for two tiers and three tier applications. Experience in integrating on premises servers to Azure. Configured VNETs and subnets as per the project requirement. Configure Azure blob storage and Azure file servers. Configured private and public facing Azure load balancers. Ø Used Ansible and Ansible Tower as Configuration management tool, to automate repetitive tasks, quickly deploy critical applications, and proactively manage change. Ø Developed an automated deployment tool for dev, UAT and production environments using Ansible. Allows new services to be deployed and released simply by developers including an Ansible playbook. Ø Used Kubernetes to manage containerized applications using its nodes, Config Maps, selector, Services
& deployed application containers as Pods.
Ø Making deployments of Microservices as containers by using containerization tools like Docker and Docker Compose. Docker Swarm and Kubernetes for orchestration and Microsoft Azure to ensure continuous deployments into the different environments. Ø Managed Kubernetes charts using Helm, Created reproducible builds of the Kubernetes applications, managed Kubernetes manifest files and Managed releases of Helm packages. Ø Created additional Docker Slave Nodes for Jenkins using custom Docker Images and Worked on all major components of Docker like Docker Daemon, Hub, Images, Registry, Swarm etc. Ø Built end to end CI/CD Pipelines in Jenkins to retrieve code, compile applications, perform tests and push build artifacts to Nexus and UDeploy to orchestrate changes across servers and components. Ø Created branching & tagging strategy to maintain the source code in the GIT repository and coordinated with developers to establish and applying appropriate branching, labeling/naming conventions using GIT source control.
Ø Setup and integrated Prometheus with Grafana for Monitoring. Used Elasticsearch (ELK stack) for centralized logging and analytics in the continuous delivery pipeline to store logs and metrics into Azure storage using storage function.
Ø Determined ways to optimize/improve JIRA and JIRA Agile setup and process workflows, as well as identify where functionality can/cannot meet user requests. Ø Created Azure PowerShell script for APIM backup and restore operations. Created several SQL scripts as part of bug fixes to provide immediate solutions for some of the common issues. Environment: Red Hat Enterprise Linux, Ubuntu, Web Logic, Bash Scripting, MySQL, HTTP web servers, LDAP directory, Active Directory, DNS, CRON, Nagios, Apache Tomcat, Dockers, Web Sphere & Web Logic application server.
Role: Build and Release Engineer
Client: Zensar, India May 14 – Oct 15
Responsibilities:
Ø Administered Bamboo servers which include install, upgrade, backup, adding users, creating plans, installing the local/remote agent, adding capabilities, performance tuning, troubleshooting issues, and maintainence. Setting up continuous integration and formal builds using Bamboo with the Artifactory repository and Resolved update, merge and password authentication issues in Bamboo and JIRA. Ø Developed Puppet modules and manifests to automate deployment, configuration, and lifecycle management of key clusters. Wrote puppet manifests for configuration management and deploy .Net and Java applications.
Ø Implemented continuous integration using Jenkins master and slave configuration. Configured security to Jenkins and added multiple nodes for continuous deployment. Ø Responsible for the development and maintenance of processes and associated scripts/tools for automated build, testing, and deployment of the products to various developments. Ø Installed/Configured and Managed Nexus Repository Manager and all the Repositories. Ø Involved in editing the existing ANT/MAVEN files in case of errors or changes in the project requirements.
Ø Responsible for the Plugin Management, User Management, Build/Deploy Pipeline Setup and End- EnJob Setup of all the projects.
Ø Jenkins is used as a continuous integration tool for automation of daily process. Ø JIRA is used as ticket tracking, change management and Agile/SCRUM tool, writing SQL scripts. Ø Worked on Utilization of CloudFormation and Puppet by creating DevOps processes for consistent and reliable deployment methodology.
Ø Developed Python and shell scripts for automation of the build and release process. Ø Initiated responsibility for administering the SVN servers which included install, upgrade, backup, adding users, creating repository/branches, merging, writing hooks scripts, performance tuning, troubleshooting issues, and maintenance. Implemented a GIT mirror for SVN repository, which enables users to use both SVN and GIT.
Ø Configured and maintained the Shell/Perl deployment scripts for Web logic and UNIX servers. Analyzed the Maven Build projects for conversion.
Ø Deployed Java Enterprise applications to Apache Tomcat, Web Server, and JBoss Application server. Ø In the production environment implemented and configured Nagios for continuous monitoring of applications and enabled notifications via emails and text messages. Environment: Java, Eclipse, Tomcat, Apache, Red hat, Oracle 11g, Shell Scripting, Ubuntu, Windows, Cent OS, Samba, FTP, VMware.
Contact this candidate