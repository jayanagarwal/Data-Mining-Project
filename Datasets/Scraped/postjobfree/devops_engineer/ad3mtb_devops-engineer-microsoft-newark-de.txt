HARI MUDUNURI
Sr. Cloud/DevOps Engineer
Email: ad3mtb@r.postjobfree.com
Mobile: +1-440-***-****
www.linkedin.com/in/hari-m-873265236

PROFILE:
Certified Cloud DevOps Engineer with 8 years of experience in IT Industry focusing on cloud computing technologies such as Microsoft Azure, Amazon Web Services (AWS), automation and configuration management tools and like Terraform, Ansible and containerization technologies and continuous Integration, continuous delivery (CI/CD) tools such as Dockers, Kubernetes, and Jenkins during various phases of day-to-day work.
Designing and implementing Microsoft Azure Solutions across a range of cloud models like SaaS, PaaS, IaaS, and integrated on-demand workloads with the Azure public cloud. Also, Expertise in build and setup deploying solutions on Microsoft Azure using Azure CLI and PowerShell to automate the process.
Experience in deploying Azure AD Connect, setting the ADFS authentication flow, and installing ADFS using Azure AD Connect, we also created Azure Automation Assets, Graphical Runbooks, and PowerShell Runbooks that would automate particular operations.
Worked in Azure Scalability and Azure Availability Created VM availability sets using the Azure portal to provide resiliency for IaaS-based solutions and Virtual Machine Scale Sets (VMSS) using Azure Resource Manager (ARM) to manage network traffic.
Migrating on-premises to Windows Azure DR using Azure Recovery Vault and Azure backups, Azure Fabric to the cloud in Azure and creating Domain Controller in one of the Virtual Machines and adding users to Domain Controller.
Automated CI/CD pipelines, deployments of web applications based on .NET, Node.js, Python, Java, using AWS Code Deploy, Code Pipeline, EC2 and secured by creating IAM roles and policies for services and users.
Implemented DevOps pipeline in Azure from scratch setting up boards, pipeline, repos, agent pools. Also, setup servers from scratch on clustered environment and enabled load balancers on the virtual machine servers to equally distribute the user traffic.
Skilled in Azure DevOps for deploying all PAAS Azure services using ARM Templates, as well as working on Logic Monitor by adding Azure resources, creating dashboards, device groups, and devices.
Very good at troubleshooting AWS EC2 instances for status checks via System Status checks and Instance Status checks alerts, as well as maintaining S3 buckets, VPC (Virtual Private Cloud), ELB (Elastic Load Balancers), and RDS (Relational Database Services).
Implemented a server less architecture using API gateway, Lambda, Dynamo DB, deployed AWS lambda code from amazon S3 Buckets and defined methods for failure management, performance testing, and application auditing within the serverless architecture.
Used Terraform to create a reliable version and infrastructure on Azure. In addition, resources were created using Azure Terraform modules, and infrastructure management was automated. Terraform was used to map more complex dependencies and identify network problems.
Extensive experience on Terraform to map more complex dependencies and identify network issues and implement terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation.
Converted existing Terraform Modules that had version conflicts to utilize CloudFormation templates during deployments, worked with Terraform to create stacks in AWS, and updated the Terraform Scripts based on the requirement on a regular basis.
Proficient in using Azure Site Recovery (ASR) and Azure backups to migrate on-premises resources to Azure, as well as in using Azure Resource Manager (ARM) to deploy, update, and delete numerous resources on Azure. worked on constructing a resource group of virtual machines using Azure Resource Manager's deployment settings (ARM).
Worked with Azure Kubernetes Service to deploy and manage Kubernetes clusters in Azure, as well as created an AKS cluster in the Azure portal using the Azure CLI and template-driven deployment options.
Implemented HTTPS Ingress controller and used TLS certificate on AKS to provide reverse proxy, configurable traffic routing for individual Kubernetes services.
Worked on Kubernetes for running/managing containers, images, and container snapshots while developing a platform for automating, deploying, and scaling application containers across host clusters.
Used AWS Elastic Kubernetes Service to run containerized versions of classic Java and Node.js applications. Both at the pod and instance levels, the application was automatically resized.
Docker was used for local application deployment and Vagrant for different infrastructure setup and code testing, and docker containerization was used to make our application platform consistently flexible when moved into different environments.
Experience in writing Ansible playbooks, creating custom YAML playbooks, encrypting data with Ansible Vault, and maintaining role-based access control with Ansible Tower.
Writing playbooks for Ansible application deployment and maintaining role-based access control by utilizing Ansible Tower to manage web apps, Environment configuration files, Users, and Packages are skills in designing, installing, and implementing Ansible configuration management systems.
Wrote Jenkins shared libraries for CI and CD life cycles, as well as generic pipelines across cloud applications to automate application and infrastructure deployments and introduced various security compliance rules to validate the organization's standards over the release workflows.
Experience using Jenkins in a variety of ways, including integrating Code Analysis and Test Phases to finish CD pipelines within Jenkins, managing plugins, securing Jenkins, performance concerns, and scaling Jenkins.
Created repositories, branches, and tags in Git and assisted developers with merging issues and parallel development process implementation.
Experience in ELK for centralized logging and then store logs and metrics into S3 bucket using lambda function. Used Kibana for data visualization and integrated it with elastic search and log stash. Also wrote Maintained Automated Salt scripts for Elasticsearch, Logstash and Kibana.
Experience with scripting tools such as Shell, Bash, Python, PowerShell, and Ruby for automating Cron jobs and notification processes.
Administered several Linux distributions (RHEL, CentOS, Ubuntu, Solaris, Ubuntu, Fedora), and worked on LVM, Kickstart, Bonding, LAMP, and LDAP. Excellent programming knowledge in C and Java, as well as good Unix Shell, Perl, and Python scripting skills.
PROFISSIONAL SKILLS:

Operating Systems
Ubuntu, CentOS, RedHat Linux, Windows.
Container Tools
Docker, Docker Compose, Docker swarm, Kubernetes.
Version control tools
GIT, Bit Bucket, SVN, TFS
Ci/Cd Tools
Jenkins/Hudson, Azure dev0ps.
Databases
MySQL, MS SQL SERVER 2008/12, MS Access,
NoSQL (MongoDB, DynamoDB), Aurora.
Cloud
Azure/AWS
Languages & Scripting:
Shell scripting, Python, React Java Script, HTML, CSS, JSON, JQUERY, Perl
Build Tools.
Maven, Ant, Gradle.
Configuration Management Tools
Chef, Puppet, Ansible, Terraform, Chef Automate,
Ansible Tower
Virtualization Technologies.
VMware, Windows Hyper-V, Virtual box, Vagrant.
Networking/ Protocol
TCP/IP, NIS, NFS, DNS, DHCP, Cisco Routers/Switches, WAN, SMTP, LAN, FTP/TFTP
Repository Management
JFrog, Nexus, Artifactory

EDUCATION:
Master of science in Information Technology,
Pittsburg State University, Pittsburg, Kansas, 66762, USA.
CERTIFICATIONS:
Microsoft Certified: DevOps Engineer Expert.
Microsoft Certified: Azure Administrator Associate.
AZ:400 Designing and Implementing Microsoft DevOps Solutions.
WORK EXPERIENCE:
Client: Provista Software Corporation. June2023-Present
3017 Douglas Blvd Suite 300, Roseville, CA, 95661.
Project: VIBE - Election Management Service – LA-County.
Role: Sr. Cloud/DevOps Engineer.
I worked on Azure Blob to store unstructured data and are accessible via HTTP and HTTPS from anywhere. Used the SQL Azure Migration Wizard, I managed moving SQL Server databases to SQL Azure Databases, and I uploaded agent logs to Azure blob storage.
Used resource groups to organize and manage resources in Azure cloud by grouping them as a single entity and resource groups that are tied to an Azure subscription are managed across different subscriptions to consolidate billing and management.
Used Microsoft Azure for Dev, Test and UAT environments for customers regardless of final Production platform (SaaS Cloud, Private secure cloud) to speed up development/ deployment process and work within CI/CD framework.
Experience in deploying and optimizing two tier .NET web applications to Azure DevOps to concentrate on development using services such as Repos to commit codes, Test Plans to trigger application and unit tests, deployed artifacts to App Service, and Azure Application Insight collects health performance and usage data of the process.
Designed and implemented CI/CD using tools Azure DevOps over multiple environments to facilitate an agile development process which is automated and repeatable, enabling teams to safely deploy code many times a day while ensuring (AKS) are supported.
I have provisioned the resources like Azure Virtual machines both Linux and windows, Storage accounts, Azure Kubernetes service, Key Vaults, route tables, container registry, private DNS Zones, Private end points, SQL databases and Virtual networks by creating the terraform modules from scratch and placed these scripts in Azure Repos.
I have worked on azure machine learning service for building, deploying, and managing machine learning models using Azure ML and integrated these models into larger application systems. Also automated these ML workflow’s training, testing and deployment models with CICD process using the Azure DevOps pipelines.
Managed and processed large datasets with an included experience with Azure data services like Azure Data Lake, Azure SQL Database and Azure Databricks. since it is a critical aspect of machine learning. I also migrated the data from the volumes of the VMware servers to Azure blob storages using various methodologies.
Leveraged ADLS-compatible frameworks like Apache Spark and Azure Databricks, I processed and transformed vast datasets efficiently, optimizing storage configurations and employing partitioning strategies for enhanced querying performance and cost-effectiveness.
Created Terraform templates/modules to deploy the resources in both (Prod and Recovery) environments which are in different regions at a time by managing the variables in private terraform cloud. Also created the traffic manager to redirect the traffic to failover (Recovery) environment when production environment is down by giving the priority options 1 and 2.
Worked on Ansible playbooks for configuration management meaning installing the Azure cli, docker, docker compose, Kubernetes helm, Kubernetes repositories, char-museum, Istio, RabbitMQ software in each of our Linux virtual machines in both environments that supports our application deployments.
Acted as a point of contact between developers and the testers, track defects till closure. Identify, troubleshoot, and resolve issues related to build and deployment process.
Docker containers were used to virtualize servers for test and development environments, as well as for configuration automation. Experience in developing Docker Containers by using existing Linux Containers and VMs.
Setting the Azure Container Registry with Docker and Docker-compose, actively involved in deployments on Docker using Kubernetes.
Used Kubernetes to orchestrate the deployment, scaling, and management of Docker Containers. Used azure yaml pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes, Created Pods and managed using Kubernetes. Utilized Kubernetes for the runtime environment of the CI/CD system to build, test deploy.
Used Helm to manage Kubernetes charts. Managed Helm package releases and created reproducible builds of Kubernetes apps. Designed and implemented Kubernetes manifests and helm charts for microservice deployment into K8s clusters.
Installed Kibana dashboard within the Kubernetes cluster using helm and monitored the logs of microservices and notify the developers team where exactly the errors occurred in the code with the help of correlation ids and error stack trace and helped the dev teams to resolve the issues soon.
Worked on implementing backup methodologies using PowerShell for Azure services like Azure SQL databases, Azure Key vaults, storage blobs, App services etc.
CLIENT: Dr. First Inc., Rockville, MD. Jan2022-April2023
Role: Sr. DevOps Engineer
Created and Managed Virtual Machines in Azure and setup communication with the help of endpoints and configured VM’s availability sets using Azure portal to provide resiliency for IaaS based solution and scale sets using Azure Resource Manager to manage network traffic.
Managed Azure Container Registry to store private Docker images, which are deployed and Azure pipelines to build, test, and deployments. Azure Monitor to collect metrics and logs. Configured Monitor to track performance and maintain security, and used Splunk tool to collect metrics, queries.
Created PowerShell scripts for automated login, securing data into Azure Key Vaults and dynamically setting appropriate permissions on Azure resources like Azure SQL also stored and managed secrets like passwords and API keys as well as keys and certificates used for authentication and encryption.
worked on Azure VPN-Point to Site, Virtual networks, Azure Custom security, endpoint security, and firewall in addition to configuring Azure MFA as a component of Azure AD Premium to securely authenticate users.
I have deployed an enterprise-ready platform foundation (Landing Zone) with all the necessary shared services to support the IT portfolio, including hybrid connectivity (Virtual WAN). And deployed migration landing zone with Azure Blueprint.
Implemented the Azure Data Factory Triggers and scheduled the pipelines and monitored the Azure data factory pipelines and configured the alerts to get notification of failure pipelines and it offers a range of IAM features such as MFA, access policies, password policies to protect user identities and prevent unauthorized access.
Create servers using AWS, import volumes, launch EC2 and RDS, create security groups, enable auto-scaling, load balancers (ELBs), and ensure high availability of EC2 instances' applications by utilizing AWS High Availability options.
Using Amazon API Gateway and AWS Lambda functions, scripts were implemented to respond to events in Amazon Dynamo DB tables, S3 buckets, and HTTP requests and created custom AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery.
Experience in Designing Terraform Templates and with custom build steps using PowerShell and Azure CLI. Created infrastructure with terraform in Azure for IaaS and PaaS services.
Written Terraform scripts from scratch for building Dev, Preprod and Prod deployments. Used this reusable Terraform modules to build staging and production in both Azure and AWS cloud environments and automated CICD pipelines for various applications.
Used terraform to provision high availability Azure VMs. Also written new plugins to support new Terraform functionality and involved in using Terraform to migrate legacy and monolithic systems to Azure.
created Azure ARM templates that could be deployed by several teams. Net-based applications on Web roles prompted the VSTS to construct the ARM Templates. The data was encrypted using web-based applications and worked on Azure Key Vault.
Wrote many RBAC policies to define user permissions in Kubernetes and created Ingress, Egress rules to regulate the Kubernetes cluster's inbound and outbound traffic.
Experience in Kubernetes to deploy scale, load balance, and manage run containers with multiple names spaced versions using Helm charts.
Responsible for defining application deployment solution on docker based PaaS environment and migrating applications to Kubernetes clusters on AKS.
Implemented Pod Security policies (PSP) in AKS for required best practices and the ability to control what pods to be controlled, scheduled in AKS cluster prevents some possible security vulnerabilities on privilege escalations.
Integrated container systems like Docker and container orchestration like EC2 Container Service, Kubernetes to deploy scale, load balance, scale and manage docker containers with multiple names spaced versions.
Configure Docker-in-Docker (DIND) as a daemon to provide Kubernetes pods as Jenkins slaves and use the dynamic pods to execute Jenkins jobs. This offers a method for using Docker-ce on an outdated Docker daemon.
Created Jenkins jobs for continuously building the projects. Scheduled jobs to build upon every check in into subversion. Wrote Groovy script in Jenkins jobs to do pre-and post-build operations.
To automate the dev, test, deploy workflow for the ansible codebase, CI/CD web hooks and workflows were implemented around Jenkins. installed and maintained Jenkins and Nexus for the company's CI and sharing of artifacts, respectively.
Deployed two tier python web applications to Azure DevOps CI/CD to focus on deployment by using services such as Repos to commit codes, test plans for unit test and stored artifacts in Blob storages.
Experienced with version control tools like GIT, Bitbucket, and SVN. In-depth knowledge of source controller concepts like Branches, Tags, and Merges.
Developed PowerShell scripts for automating tasks and troubleshooting configuration issues. Also automated workflows with PowerShell and python scripts such as application packaging and deployment.
Design, Build and manage the ELK (Elasticsearch, Logstash, Kibana) cluster for centralized logging and search functionalities for the APPS.
Used App dynamics to monitor the system performance and check if there are any flaws in the present working environment.
Environment: AWS, Amazon API, AWS Lambda, AWS VPC’s, AWS Cognito, Python Boto3, Dynamo DB, S3 Buckets, EC2, RDS, IAM, Security groups, AWS Faregate, EKS, Jenkins, GIT, Docker, Terraform, Ansible, CloudFormation, APP Dynamics, Kibana.
Client: Ameri health, Philadelphia, Pennsylvania Feb 2020 – Dec2021
Role: Sr. Cloud Engineer
Configured Azure Automation Desired state configuration management to assign permissions via RBAC, assign nodes to proper automation accounts and Desired state configuration, and receive alerts on any changes made to nodes and their configuration.
Involved in migrating the application from Infrastructure as a Service (IaaS) to Platform as a Service (PaaS) by converting the existing solution to Windows Azure Worker Role and then configuring ARM, VM, Networking, Private Static IP Address, and Public IP Address.
Created and configured HTTP Triggers in the Azure Functions with Application insights for monitoring and performing load testing on the applications using the VSTS and used Python API for uploading all the agent logs into Azure blob storage.
Creating Databricks notebooks using SQL, Python and automated notebooks using jobs. Created spark clusters and configured high level concurrency clusters using Azure Databricks to speed up to preparation of high-quality data.
Migrated on-premises IT infrastructure to the Azure Cloud and built Azure Environments from scratch. experienced utilizing Azure Recovery Vault and Azure backups to migrate from on-premises to Windows Azure in Active Directory on the Cloud.
Enabled load balancers at the Layer 4 level by creating Azure Load Balancer, created Application Gateway at the Layer 7 level, and the DNS level by creating Traffic Manager.
Using terraform CLI, maintained the state file of the cloud infrastructure. verified the security of the state file and shared it by migrating it to terraform cloud without any interruption or recreation of the existing infrastructure.
Created Terraform templates for provisioning virtual networks, VM Scale sets, Load balancers, NAT rules and used terraform graph to visualize execution plan using the graph command. Used Terraform to deploy the infrastructure necessary to create development, test, and production environments for software development projects.
Engaged in the development of the Azure Resource Manager Template (JSON) and designing custom build steps using PowerShell, as well as ensuring that no changes were made to the existing infrastructure while performing incremental deployment.
Created an Azure cloud with Kubernetes that supports DEV, TEST, and PROD environments. Implemented a production-ready, load-balanced, highly available, fault-tolerant, auto-scaling Kubernetes infrastructure and microservice container orchestration.
Worked on the Azure Kubernetes service to create production-grade Kubernetes that allow enterprises to deploy and run containerized workloads across private and public clouds in a reliable manner.
Administrated tasks for creating Docker images managing versions, container networking and standard infrastructure maintenance tasks on Azure container Registry (ACR) and Kubernetes platform in AKS.
Involved in development of test environment on docker containers and configuring the docker containers using Kubernetes.
Implemented CI/CD using Jenkins and configured DevSecOps strategies, used SAST (Static Analysis Security Testing) and DAST (Dynamic Analysis Security Testing) to eliminate security flaws, vulnerabilities present in the source code and running application.
Set up a Jenkins server in Azure for automated software builds and deployment of services on the Azure platform.
Developed end-to-end CI/CD pipelines in Jenkins to retrieve code, compile applications, run tests, and push build artifacts to Nexus Repository and Deploy to orchestrate changes across servers and components.
Major emphasis on Configuration, SCM, Build/Release Management, Infrastructure as a code (IAC) using Azure DevOps operations Production and cross platform environments.
Worked with Azure DevOps, including pipeline creation for various ARM template deployments by passing pipeline variables and variable groups. In addition to that worked on publish pipeline artifacts and Release Pipeline creations for variable stages such as dev, test, and prod, that kick in when the build is created.
Established a CI/CD and release pipelines with Azure DevOps (VSTS, TFS) in both the cloud and on-premises, using GIT, MS Build, Docker, Maven, and Jenkins’s plugins.
Skilled in monitoring services using Nagios, CloudWatch and using ELK stack Elasticsearch Fluent d Kibana.
Experience in coordinating with DevOps team in instrumenting various Dashboards & Reports for Performance statistics in AppDynamics &Splunk and diagnosing the identified performance issues using AppDynamics and Splunk.
Developed Ansible playbooks for installing WebLogic/Tomcat applications, also deployed WAR, JAR, and EAR files across all environments.
Build and deploy Java code with Jenkins and perform code coverage analysis with SonarQube. Use SonarQube to perform quality checks and upload the results to the Nexus repository.
Environment: Azure Cloud, Azure DevOps, VMs, VNs, Kubernetes, Docker, AKS, Terraform, Ansible, Jenkins, Git, TCP/IP, DHCP, DNS, PowerShell, Python, Splunk, SonarQube, JFrog, Nagios, Nexus, JIRA, VSTS, TFS, Tomcat, Nginx, Linux, Windows servers.
Client: BCBS (Blue cross and blue shield), Dallas, TX Aug2018-Jan2020
Role: Infrastructure Engineer
Managed Azure Infrastructure hosting plans implemented and deployed workloads on Azure virtual machines (VMs), Windows Azure was used to deploy the application to the cloud. Configured SQL Server Master Data Services (MDS) in Windows Azure IaaS.
Worked with various vendor VPN devices such as Cisco Meraki, Palo Alto Firewalls, SonicWALL Devices, and Sophos firewalls to help enterprise customers migrate their networks from on-premises to Azure Cloud.
Re-architected Azure IaaS environment in new datacenter using high performance DS series VMs and AD connect to sync on-premises windows server active directory to Azure active directory.
Creating and managing windows Azure Virtual machines and setting up communication using Network Security Groups.
Designed roles and groups for users and resources using AWS Identity Access Management (IAM) and implemented Multi-Factor Authentication (MFA) on externally available servers and on AWS Console, monitoring and alerting using Cloud Watch and Cloud Trail.
Implemented AWS solutions such as EC2, S3, IAM, EBS, Security Group and Auto Scaling in Cloud Formation JSON templates. Created snapshots and Amazon machine images (AMI) of the instances for backup.
Written Terraform modules to manage AWS/Azure infrastructure, including the automatic creation of RDS instances, VPCs, Autoscaling groups, Load balancers, SQS, and S3 buckets.
Used Terraform to design and implement automated provisioning of full stack application services (VPC, Security Groups, Instances, and ELB) in AWS.
Created performance measurements to monitor resources across azure using azure native monitoring tools utilizing ARM templates.
Created Kubernetes templates for various applications such as Cassandra, Grafana, and Kafka, as well as setting up Kubernetes Clusters for running and deploying micro services to production using Kubernetes-backed infrastructure.
Using Helm, managed K8s charts and created reproducible builds of Kubernetes applications.
Kubernetes load balancer was used to balance traffic across containers and distribute loads at the dispatch level, and Kube-proxy was used to manage the virtual IPs assigned to services. In addition, a port value was specified for the port field in order to deploy the configuration files.
Created a new pipeline and used Docker for server virtualization for test and development environments, as well as automation configuration using a Docker container.
Created Docker Swarm using Docker CLI to Orchestrate, schedule and deploy the services to Swarm and managed the Swarm behavior and created virtual networks to connect Docker containers across multiple hosts using Docker weave.
Jenkins was used for CI to deploy the Spring Boot Microservices to Azure Cloud and OpenStack using build packs, as well as for a CD pipeline involving Jenkins and GIT to complete the automation from commit to deployment.
Creation of self-hosted agent pools in Azure DevOps for use on on-premises servers. Developed and designed Azure DevOps pipelines to manage resources across multiple subscriptions in Azure.
Design, build & manage the ELK cluster for centralized logging & search functionalities for the app.
Managed Web applications, environment configuration files, users, and Packages using Ansible. Using Ansible playbooks, create a Continuous Delivery pipeline.
Ansible and Ansible Tower were used as configuration management tools to automate repetitive tasks, quickly deploy critical applications, and manage change proactively.
Scripts were created in Windows PowerShell to automatically configure network settings for our organization by utilizing available VPCs and subnets.
Created Python scripts to push data from DynamoDB to MySQL. In addition, written and maintained Python deployment scripts for Web Sphere, a web application server.
Environment: Azure cloud, SQL(MDS), VPN devices, Azure DevOps, RDS, Amazon S3, Dynamo DB, IAM, MFA, AWS solutions, AMI, Terraform, Bitbucket, Jenkins, Microservices, Docker, Kubernetes, Ansible, Ansible Tower, Power Shell, Python scripts, Python, Splunk, Jira.
Client: Cognizant Technology & Services, BAL, Maryland. April2017-July2018
Role: AWS Cloud Engineer
Created an AWS Virtual Private Cloud (VPC) with multiple subnets and deployed application and database servers with different Security Groups, N/W ACLs, NAT Gateways to serve the purpose of security.
Changing existing AWS infrastructure to server-less architecture (AWS Lambda) and migrated data from datacenters and on-premises to cloud using AWS Import/Export Snowball service.
Developing and maintaining of cloud-based web hosting service, including security audit PHP, used Amazon AWS for disaster recovery, and created SAN/NAS services with CARP for redundancy and file sharing for services.
Hands-on Integration with OAuth and AWS Cognito service with third party security web identity federal for user pool, identity pool for (single sign on) SSO Authentication.
Written Terraform templates and Chef Recipes, which were then pushed into Chef Server for configuring EC2 Instances, and deployed code into the required environments using AWS Code Deploy.
Using Terraform templates, created AWS infrastructure, including EC2 instances, VPCs, and S3 buckets, and converted these to AMIs for use in production as part of a continuous delivery pipeline.
Using tools like Jenkins and GitHub/Bitbucket, users can better manage software development, deployments, and infrastructure.
Set up Jenkins jobs to build the projects in a continuous loop. Scheduled jobs to build on each subversion check-in. In Jenkins’ jobs, I wrote a Groovy script to perform pre- and post-build tasks.
Utilized Jenkins in a novel way to automate the majority of the build-related tasks. By granting EO/managers the ability to trigger required builds, the build system's throughput and efficiency have been increased.
Responsible for installing and configuring Jenkins to support various Java builds, as well as Jenkins’s plugins for automating continuous builds and publishing Docker Images to the Nexus Repository.
Built and deployed Docker containers to deconstruct a monolithic app into microservices, thereby
Contact this candidate