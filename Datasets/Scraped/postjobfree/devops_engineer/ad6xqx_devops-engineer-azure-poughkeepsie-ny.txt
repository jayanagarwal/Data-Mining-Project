Sr. DevOps Engineer
Nikitha Tirumala
+1-845-***-****
ad6xqx@r.postjobfree.com
LinkedIn: https://www.linkedin.com/in/nikitha-reddy-66856623b/

PROFESSIONAL SUMMARY:
●Around 8 years of hands-on involvement in IT industry comprising of Build, Deployment and Release Management, Software advancement environment set up and DevOps automation engineering with Cloud Implementations and SRE .
●Worked on creating the Docker containers and Docker consoles for managing the application life cycle.
●Proficient in creating DevOps strategy in a various distribution of LINUX and Windows alongside using DevOps tools suites like Subversion (SVN), GIT, CVS, ANT, Maven, Jenkins, Bamboo, Chef, Puppet, Docker, Docker Swarm, Kubernetes, Nexus, Artifactory, Nagios and Splunk in traditional environments, as well as cloud environment like AWS, OpenStack, Azure and PCF.
●Experience in migrating on premise infrastructure to cloud platforms like Aws/Azure/GCP/OpenStack/Pivotal Cloud Foundry (PCF) and involved in virtualization using (VMware, VMware ESX, Xen) and infrastructure orchestration using containerization technologies like Docker and Kubernetes.
●Experience in dealing with Microsoft Azure IaaS - Virtual Networks, Virtual Machines, Cloud Services, VPN, Resource Groups, Express Route, Load Balancing, Application Gateways, Auto-Scaling, and Traffic Manager.
●Experience of Microsoft Azure which includes Creating PaaS builds, PaaS deployments, Storage -Accounts, Queues, CDN, ARM templates, Azure Service Bus and extensive experience in designing AZURE Resource Manager (ARM) templates and designing custom build steps using PowerShell.
●Experience in creating and maintaining AWS User Accounts, Security Groups, VPC, Route 53, Dynamo DB, RDB, SNS, SES and AWS storage services like S3, EBS.
●Implemented AWS solutions using EC2, S3, RDS, Dynamo DB, Route53, EBS, Elastic Load Balancer and Auto scaling groups.
●Converted existing AWS infrastructure to server less architecture (AWS Lambda) deployed via Terraform and AWS Cloud formation
●Experience in dealing with Microsoft Azure IaaS - Virtual Networks, Virtual Machines, Cloud Services, VPN, Resource Groups, Express Route, Load Balancing, Application Gateways, Auto-Scaling, and Traffic Manager.
●Experience with Open Shift, Docker swarm, Kubernetes and clustering frameworks.
●Used Kubernetes to deploy scale, load balance, scale and manage Docker containers with multiple namespace versions, also developed custom base Docker images for Spring Boot, Tomcat, and Node.
●Production experience in large environments using configuration management tools like Chef, Puppet and Ansible supporting Chef Environment with 500+ servers and involved in developing manifests.
●Experience working on several Docker components like Docker Engine, Hub, Machine, Compose and Docker Registry. Designed Docker images & linked Docker containers for secured way of data transfer.
●Developed cookbooks and wrote chef recipes using Ruby script and Chef DSL to automate system configuration.
●Well versed with many different concepts of Chef like Roles, Environments, DataBags, Knife, and Chef Server Admin/Organizations.
●Extensive involvement with and Version Control Systems like GIT, CVS and Subversion (SVN). Also resolved conflicts during the branch merging in different version control systems.
●Experience using Maven and ANT as a Build Tool for the working of deployable artifacts (war & ear) from source code.
●Experience in using Nexus, Artifactory, and JFrog Repository Managers for Maven and ANT builds.
●Experience in deploying WAR, JAR, and EAR files in WebLogic, WebSphere, JBoss application servers in LINUX/Unix/Windows environment.
●Involved in developing Java web-based interfaces using HTML5, CSS3, JQuery, XML and JSON.
●Managed different infrastructure resources, like physical machines, VMs and even Docker containers using Terraform.
●Worked with Ansible (automation tool) to automate the process of deploying/testing the new build in each environment, setting up a new node and configuring machines/servers.
●Written Cloud formation templates and deployed AWS resources using it.

TECHNICAL SKILLS:

Cloud Infrastructure: AWS, Google Cloud, OpenStack, MS Azure, VMware and PCF
Configuration Management Tools: Puppet, Chef, Ansible.
Containers: Dockers, Kubernetes, AWS ECS.
Continuous Integration Tools: Jenkins, Bamboo, Hudson.
Build Tools: ANT, MAVEN, Gradle, Build Forge, MS Build
SCM and Versioning Tools: GIT, ClearCase, Perforce, CVS, Subversion (SVN)
Bug Tracking Tools: JIRA, Rally, Nexus, Remedy
Logging & Monitoring Tools: Nagios, Splunk, Rsyslog, ELK Stack (Elastic search, Log stash, Kibana), AppDynamics.
Web Technologies and Servers: JavaScript, Node Js+2, Servlets, JDBC, JSON, JBOSS, Apache Tomcat, WebLogic
Database: Dynamo DB, MongoDB, Oracle, SQL Server, MySQL
Operating System: Windows, Linux, Unix, Solaris, MAC OS
Network Services and Topologies: LDAP, DNS, NIS, DHCP, NFS, Web, FTP, Sub netting, LAN, VPC, WAN and firewalls
Scripting languages: Shell, Python, PL/SQL, Java AWT/Swing, XML, HTML, CSS3, Ruby, Perl, PHP

CERTIFICATIONS:

AWS CERTIFIED SOLUTION ARCHITECT- ASSOCIATE
CERTIFIED KUBERNETES ADMINISTRATOR (CKA)

EDUCATION:

●Master’s in Computer Science from Marist Collage
●Bachelor’s in Computer Science Engineering from JNTUH
Jaya Prakash Narayan Educational Society Group of Institution.

WORK EXPERIENCE:

Client: SYNOPSYS - Burlington, MD USA Mar 2023 – Present
Role: Sr. DevOps Engineer/ SRE

Responsibilities:
●Implemented Terraform modules for deployment of various applications across multiple Cloud providers and managing infrastructure. Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code.
●Strong knowledge and experience on Confidential Web Services (AWS) Cloud services like EC2, S3, EBS, RDS, VPC, and IAM.
●Build servers using AWS launching and configuring of Amazon EC2 cloud servers using AMI's (Linux/ Ubuntu), Creating security groups, and load balancers in the defined Virtual Private Connection (VPC).
●Used Terraform as Infrastructure as a code and Execution plans, Resource Graphs, Change Automation and extensively used Auto scaling launch configuration templates for launching amazon EC2 instances while deploying Micro services.
●Implemented CI/CD pipelines using GitLab CI/CD to automate testing and deployment processes, improving release cycles and code quality.
●Managed and configured GitLab repositories, ensuring streamlined version control and collaborative development.
●Developed and executed automated test scripts using Selenium WebDriver to validate web application functionality.
●Developed Java API to interact with Amazon SQS used for sending bulk emails. Also, to connect the AWS S3 services for storing and retrieving data in S3 buckets.
●Experienced in scripting Jenkins pipelines using Groovy for automated build, test, and deployment processes.
●Implemented Docker-maven-plugin in Maven. pom to build Docker images for all micro services and later used Docker file to build the docker images from the java .jar files.
●Researched alternative build strategies and platforms to enhance the reliability of the build process therefore reducing the lag time between code check-in and QA testing.
●Designed and distributed private cloud system solution using Kubernetes (Docker) on CoreOS and used it to deploy scale, load balance and manage Docker containers with multiple names spaced versions, and worked on Docker Engine, Docker HUB, Docker Images, and Docker Compose for handling images for installations and domain configurations.
●Played a key role in the integration of cutting-edge technologies, ensuring the voice remote services remained at the forefront of industry standards.
●Led the strategic planning and implementation of voice remote services, contributing to a seamless and user-friendly experience for customers.
●Installing and configuring Maven Repository using Nexus tool and used the same to share the snapshots and releases of internal projects
●Orchestration and Provisioning of Infrastructure using Configuration Management Tool Ansible Enterprise and utilized for creating Ansible playbooks using roles to automate system operations.
●Hands on experience in deploying and configuring Elastic search, Log stash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWS Lambda and X-Ray.
●Redefined processes and implemented tools for software builds, patch creation, source control, and release tracking and reporting, on UNIX platform.

Environment: Java, JSP, AWS (EC2, VPC, ELB, S3, RDS, EBS, ELB, AWSCLI, Cloud Formation, IAM, Cloud watch), Azure, VSTS, Jenkins, Maven, Nexus, WebLogic, Nginx, Subversion, GITHUB, Ansible, ELK stack, SonarQube, JIRA, Linux, IBM DB2, WebLogic, Perl, Shell, Python, Ruby, Terraform, Docker and Kubernetes.

Client: T-Mobile, New York, NY US Aug 2022 – Feb 2023
Role: Cloud DevOps Engineer/SRE

Responsibilities:
●Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets.
●Planned and designed the build and release methodologies for the application through Azure platform.
●Worked on Azure compute services, Azure Webapps, Azure Data Factory & Storage, Azure Media & Content delivery, Azure Networking, Azure Hybrid Integration, and Azure Identity & Access Management (IAM).
●Worked on Server less services (Azure Functions) created, and configured HTTP Triggers in Azure Functions with Application insights for monitoring and performing load testing on the Applications using the VSTS.
●Experience of working in VSTS staying connected with in the organization all the way from planning to release in agile methodology.
●Automated different workflows, which are initiated manually with Python scripts and Linux bash scripting.
●Written Templates for Azure infrastructure as a code using Terraform to build staging and production environments. Integrated Azure Log Analytics with Azure Virtual machines for monitoring the log files, store them and track metrics
●Contributed to the optimization of voice remote services, collaborating with cross-functional teams to enhance overall customer experience.
●Configured and deployed several hypervisors and Virtual Machines running on Google Cloud Platform (GCP) for developing, testing and production environments.
●Installed packages on Chef only, when necessary, by managing the attributes. Deploying the Cookbooks, recipes using Knife tool from Chef-DK, Workstation to Chef-server, also responsible for maintaining the run-list on chef-server.
●Integrated GitLab CI/CD with Docker and Kubernetes for automated deployment of microservices.
●Experienced in utilizing JFrog Artifactory for artifact management, including configuration, deployment, and integration with CI/CD pipelines for seamless software delivery.
●Configured and deployed several hypervisors and Virtual Machines running on Google Cloud Platform (GCP) for developing, testing and production environments.
●Integrated Docker into various infrastructure tools, including Ansible, Chef and VMware vSphere Integrated Containers.
●Used ANT and MAVEN for building the applications and developing the build scripts, Deployed the Java applications into web application servers like WebLogic and Apache Tomcat.
●Used and created automated scheduled builds with Continuous Integration tool JENKINS and deploying the code through web application servers like Web Sphere/Web Logic/Nginx/Apache Tomcat/JBOSS.
●Worked on User Management and Plugin Management for Jenkins. Implemented the setup for Master slave architecture to implement multiple parallel builds through a build farm and improve the Performance of Jenkins.
●Skilled in Okta configuration and administration, including user lifecycle management, single sign-on (SSO), multi-factor authentication (MFA), and access policies.
●Defined dependencies and plugins in Maven pom.xml and integrated Maven with GIT to manage and deploy project related tags.
●Implemented branching, merging and versioning of the code in GITHUB. Maintained branches/forks in GITHUB version control for the changes made in cookbooks as per release.
●Developed scripts using pandas to easily perform read/write operations to CSV files, manipulate and compare data by columns.
●Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and conducted code reviews.
●Performed the synchronization of various environments with the latest code.
●Ensured sending timely notifications to Release, Development and Testing Teams on the progress and completion of the build and deployments.

Environment: Java/J2EE, GITHUB, Jenkins, Chef, Ansible, ANT, Maven, VSTS, Shell (bash), JSONschema, Django, F5 LTM, Apache Tomcat, WebLogic, Terraform, GCP, Azure, PowerShell, Red hat LINUX, CentOS, UNIX, JIRA, Remedy.

Client: CTS, India Jan 2018 – Dec 2021
DevOps Engineer

Responsibilities:
●Creation of Cloud Formation templates for different environments (development/ staging/ production) to automate Infrastructure (ELB, ASGs, SNS topics, RDS etc.)
●Created four staged CI/CD pipelines with AWS Code Pipeline plugin for Jenkins, GitHub repository, Jenkins build server EC2 instance using IAM instance role, proxy and firewall settings to allow inbound connections on server and AWS Code Deploy.
●Designed and deployed AWS solutions using E2C, S3, RDS, EBS, Elastic Load Balancer, Auto scaling groups & Cloud Formation. Created monitors, alarms and notifications for EC2 hosts using Cloud Watch.
●Written/Developed Ruby recipes in Chef Cookbook to automate the entire deployment process as well as infrastructure admin tasks and Used Chef for Continuous Delivery, Managed CI and CD process and delivered all application in rpms.
●Debugging Chef Recipes and their execution trying to pull logs into Splunk and monitor deployments.
●Responsible for creating Chef Cookbooks and Docker containers that can be used by the development team to do local development as well as help improve the deployment process.
●Work experience with Docker swarm and compose in building distributed Docker containers. Able to script Docker steps that can be used for automated deployment for developers in Local, staging and production after a continuous integration build.
●Experienced in writing Python Scripts to support Web Logic Scripting Tool (WLST). Build and deployed Java/J2EE to a web application server like WebLogic in an agile continuous integration environment and also automated the whole process.
●Viewing the selected issues of web interface using SonarQube. Responsible for upgradation of SonarQube using upgrade center.
●Worked as an SCM in automating the build and deploy process through Anthill Pro and Build forge on deploying applications in WebLogic.
●Managed GITHUB repositories for branching, merging, and tagging, also resolved merging issues during build and release by conducting meetings with developers and managers.
●Built end to end CI/CD Pipelines in Jenkins to retrieve code, compile applications, perform tests and push build artifacts to Nexus and uDeploy to orchestra changes across servers and components.
●Deployed centralized logging via Rsyslog and Logstash with Kibana (ELK) as the web frontend.
●Monitor and design of integrated build pipelines using continuous integration workflows such as Artifactory.
●Comprehensive high-level understanding of programming concepts and talent for applying those concepts to rapidly develop proficiency in unfamiliar programming languages.
●Skilled in administering Artifactory repositories, implementing artifact lifecycle management strategies, and optimizing performance to support agile development workflows.
●Implemented Release schedules, communicated the Release status, created Roll out Plans, tracked the Project Milestones, prepared the reports and chaired the Release calls and worked for a successful Releases.
●Triggering events, such as on source code commits, on a schedule or in sequence using Team City.
●Developed Shell, Batch, and Python Scripts for automation of build and release purpose.

Environment: RHEL, Java, WebLogic, Artifactory, JIRA, Nexus, uDeploy, Team city, Windows Server 2005/2008, SonarQube, ELK stack, Docker, Jenkins, Ant, Maven, GITHUB, Chef, Shell, Python, Ruby.

Client: Pristyn Care, India Jun 2016 – Dec 2017 Role: Build/Release Engineer

Responsibilities:
●Build Engineer for the Client’s UNIX and Java applications.
●Setup different environments for build and Release into Development, Test, Pre-production and Production.
●Designed and implemented Continuous Integration process using tools like Jenkins with approval from development and other affected teams.
●Designed effective planning for SCM and implemented the setup of the Environment.
●Installation and configuration of management tool Puppet across RHEL environment.
●Migrated VMware VMs to AWS and Managed Services like EC2, S3 Bucket, ELB and EBS etc. with Puppet modules/manifests.
●Wrote puppet manifests for deploying, configuring, and managing collected for metric collection and monitoring. Defined Puppet Master and Puppet Agents to manage and configure nodes.
●Set up automated deployment on JBOSS and WebSphere application servers using Python and shell scripts.
●SVN repository Administration and Configuring, maintaining network and troubleshooting such as DNS, NFS.
●Working with LDAP, Active Directory, DNS and VLAN technologies.
●Build artifacts (WAR's and EAR's) are deployed into a Web logic app server by integrating the WLST scripts to Shell Scripts.
●Used Puppet to manage Web Applications, Config Files, Data base, Commands, Users Mount Points, packages.
●Setting-up ANT script-based jobs in Jenkins and Worked with Jenkins Pipelines.
●Initially used Ant for writing build.xml for building Java/J2ee applications and later migrated to Maven.
●Defined dependencies and Plug-ins in Maven POM.xml for various activities and integrated Maven with SVN to manage and deploy project related tags.
●Installed and Configured WebSphere Application server with LDAP security.
●Code Push and Data migration for each release to the new test environment and production.
●Incorporated the Code Quality Tools like Junit, SonarQube and Find Bugs using monitoring tool JIRA.
●Written Perl scripts for the automation of daily support tasks.
●Adopted Install Shield scripts, written scripts and used them to package builds and releases for different environments as defined in SDLC.

Environment: Java, Ant, Maven, Subversion (SVN), RHEL, VM Ware, AWS, Perl Scripts, Shell Scripts, Puppet, WebLogic, WebSphere, LDAP, Jenkins, LINUX / UNIX.
Contact this candidate