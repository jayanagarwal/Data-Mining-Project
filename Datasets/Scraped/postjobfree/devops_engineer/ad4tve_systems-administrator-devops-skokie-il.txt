Imtiaz Mohammed
ad4tve@r.postjobfree.com
224-***-****
_
Professional Summary:
• 9 Years in IT industry as a Cloud DevOps, Build and Release Engineer with Linux Systems Administrator experience in variety of cloud settings - Private, Public and Hybrid Cloud AWS, GCP & Azure platforms along with using various tools like Docker, Kubernetes, Ansible, Terraform, Argo CD, Jenkins, Git, & JIRA. Enthusiastic to work in a knowledge gaining and sharing environment.
• Experience in working with multiple Cloud platforms like AWS, Azure and GCP to implement the automation of manual processes using various DevOps tools and technologies.
• Experience in working as a DevOps Engineer, Build & Release Engineer, System Administrator operations process and tools area (Code review, unit test automation, Build & Release automation, SCM, Incident and Change Management).
• Experience on AWS platform and its dimensions of scalability including EC2, S3, Route53, ELB, EBS, VPC, AMI, SNS, RDS, IAM, Auto Scaling, CloudFront, Cloud Watch, Cloud Trail, Cloud Formation, OPS Work, Security Groups.
• Experience in using build tools like MAVEN and ANT for the building of deployable artifacts such as war, jar& ear from source code.
• Extensively worked with automation tools like Jenkins, to implement the End-to-End Automation.
• Experienced in designing roles and groups for users and resources using AWS Identity Access Management (IAM). Managed multiple AWS accounts with multiple VPC's for both production and nonproduction where primary objectives included automation, build out, integration and cost control.
• Hands on experience on Azure VPN-Point to Site, Virtual Networks, Azure Custom security, Endpoint Security, firewall, Windows Azure name resolution, Scheduler, Automation and Traffic Manager, syncing On-premises Windows Server Active Directory to Azure AD (AAD) using Azure AD connect.
• Utilized AWS CLI to automate backups of ephemeral data-stores to S3 buckets, EBS and create nightly AMIs for mission critical production servers as backups.
• Experience in migrating infrastructure and application from on premise to Azure and from Cloud to Cloud such as AWS to Microsoft Azure.
• Experience working on Azure Cloud services, Azure Data Factory, Azure Data Lake Analytics, Azure Data Bricks, GIT, Azure DevOps. Managing Client’s Microsoft Azure-based PAAS and IAAS environment.
• Extensive experience in Windows Azure (IaaS) migrating like creating Azure VMs, storage accounts, VHDs, storage pools, migrating on premise servers to Azure and creating availability sets in Azure.
• Experience in dealing with Windows Azure IaaS - Virtual Networks, Subnets, Load balancers, Virtual Machines, Cloud Services, Resource Groups, Express Route, VPN, Load Balancing, Application Gateways, Auto-Scaling, and Traffic Manager.
• Hands-on experience in Configuration management with Ansible, writing cookbooks and playbooks to install Apache server, JBoss, WordPress for the same.
• Skilled at Software Development Life Cycles and Agile Programming Methodologies.
• Written Ansible playbooks to Provision Several pre-prod environments such as WebLogic domain creations and several proprietary middleware installations.
• Written Python wrappers on top of WSADMIN Library for WebSphere configurations like creating JVM, clusters, JDBC, Nidetch. Technical Skills:
DevOps, Linux, Automation, Amazon Web Services, Ansible, Chef, Git, Scripting, Terraform, Azure, Jenkins, Azure DeVos. Cloud Providers/Technologies Microsoft Azure, Amazon Web Services (AWS) Version Control Tools GIT, Bit Bucket, GitHub, Azure DeVos Git Build Tools MS Build, Dotnet Core, NPM, ANT, MAVEN Infrastructure as code Automation tools Terraform, ARM Templates, Cloud Formation Templates CI Tools Azure DeVos/VSTS/TFS, Jenkins/Cloud bees, Configuration Management Tools Ansible, Chef, Run deck. Bug/Issue Tracking JIRA, Service Now
Web/ Application Servers IIS, Kestrel, Apache, WebSphere, WebLogic, Tomcat. Operating Systems Windows, RHEL, Ubuntu, CentOS.
Scripting/Programing Languages Python, Shell, PowerShell. Database Automation tools Liquidate, Flyway.
Artifactory Nexus, Azure DeVos, AIM.
Containers Docker, Azure Kubernetes Service (Container Management) 1.13,1.14, 1.15,1.17,1.18. Application servers WebSphere, WebLogic, Tomcat IIS. Database Azure SQL, IBM DB2, Oracle
Log, Application Monitoring Oracle APM, Azure Application Insights, Azure OMS, Sense Service Mesh Istook (1.2.5, 1.3.8, 1.4.9, 1.7.3,1.7.6) Educational Qualification:
Education Details: Masters in CHICAGO STATE UNIVERSITY. Professional Experience:
Client: T-Mobile May 2019 –
Present
Role: AWS DevOps Engineer
Responsibilities:
Part of a DeVos team who is responsible for Automating Infrastructure as code, Configuration management, Build and Release, Continuous delivery and administration.
Creating Infrastructure as code on azure by using terraform and customizing the environment using Ansible.
Created Infrastructure as code as application stacks, end to end provisioning and configuration within single pipeline.
Created automated infrastructure as code using Terraform and ARM Templates for components such as Azure Virtual Machines, Azure Wapp, Azure Function, Azure Lockup, Azure Application Gateway, Azure Traffic Manager, Azure Vent, Azure CDN (Verizon, Akamai), Azure Storage Account, Azure Hub & Spoke Vents, Azure Firewall, Azure Virtual machines, Azure Cosmos DB, Azure SQL DB, Azure Key vault, Azure EventGridTopic, Azure Route tables, NSG, Azure Container registry
Implemented Best practices using terraform using modular approach by reusing the terraform templates using git tags
Solid experience in migrating the osprey applications to Cloud
Migrated Asp Dotnet applications to dotnet core by containerizing using docker and deploying them on to azure cabernets service.
Extensively worked on microservices deployments and configurations
Worked on transformation of ASP Dotnet applications to Dotnet core microservices
Implemented Azure Kubernetes service from Scratch and deployed all the way to production.
Implemented Azure cabernets services using Availability sets and later migrated the AKS to VM scale sets using multiple node pools, Implementing the blue green Upgrades
Used Istook as the service mesh for ingress for Azure cabernets service.
Used Azure WAF for securing the Kubernetes cluster.
Istook Egress Gateway to control egress traffic from clusters.
Written generic helm templates which we have used across all the AKS applications deployments and configurations.
Created a Wrapper pipeline to deploy microservices at application level for the migration and disaster recovery activities
Used traffic manager and deployed a multi-region cluster and maintained active-active environments.
Used Ansible as configuration management tool and automated all the cabernets activities like creating the namespace, Creating RBAC for namespaces, helm deployments, user-onboarding. Etc.
Created and Managed Pipelines for different applications (Dotnet, Java, React, Angular) Build and deployments which includes the unit tests, Static code analysis, Security analysis, Docker builds, Docker image scan, deployments and automated UI, Smoke testing.
Expert in azure DeVos classic pipelines and yam pipelines. Implemented several best practices to include the deployment gates to continue the automated flows for the application build and deployment activities
Configures custom domains for azure CDN for static assets by integration of CDN with azure blob storage.
Implemented docker image scans using Anchor
Administering different tools like SonarQube, Azure DeVos, Checkmarks, AKS.
Used JIRA to track issues and Change Management.
Used Ansible to deploy artifacts that are built by Maven.
Implemented ISTIO across all the cabernets clusters for ingress and also policies like CORS, Rate Limiting, JWT, MTLS.
Creating continuous build and delivery pipelines all the different technologies for deploying the microservices
Installed and Configured Jenkins for Some of the configuration activities.
Azure DeVos was used for implementing automated CI/CD for daily deployments and for creating the end to end builds and deployment process.
Implemented the complete end to end Automation flow for creation, configuration, deployment and testing for web applications, API’s from scratch
Creating docker images according to the requirements
Azure DeVos used for Different types of Jobs created for Multiple Projects worked using Build Pipelines and Deploy into various environments using the Maven and other Tools.
Worked extensively on Ansible Playbooks and Scripting.
Created Ansible playbooks for different environments for release and converted Puppet scripts into the Ansible Playbooks.
Worked with the Architects on SDLC process being the owner of post development environments.
Carried Deployments and builds on various environments using Jenkins Automation tool.
Developed and maintained the continuous integration and deployment systems using Jenkins, Maven, Git, Ansible
Configured the user's accounts for Continuous Integration - Jenkins, Nexus and Sonar
Migrating projects from TFS/Other SC tools into Azure DeVos (aka VSTS or Microsoft Visual Studio
Work with different team members for automation of Release components.
Supporting different projects build and release SCM effort e.g. branching, tagging, merge etc.

Environment: Azure, Azure DeVos, Ansible, Dotnet Core, MS Build, Maven, NPM, SonarQube, AZURE Kubernetes service, Jira, Linux, Java, Istook, Oracle APM, Checkmarks, Azure Wapp, Azure Function, Azure Lockup, Azure Application Gateway, Azure Traffic Manager, Azure Vent, Azure CDN
(Verizon, Akamai), Azure Storage Account, Azure Hub & Spoke Vents, Azure Firewall, Azure Application Insights, Azure Security Center, Azure Virtual machines, Azure Cosmos DB, Azure SQL DB, Azure Key vault, Azure EventGridTopic,Okta,Azure Route tables, NSG, Azure Container registry. Client: South west Airlines Apr 2017
–May2019
Role: Cloud DevOps Engineer
Responsibilities:
Multi Cloud environment setup, configuration, migration and deployments to AWS, Azure with Accenture’s clients
Designed, Implemented Infrastructure as code to create automated stacks on Azure using terraform which includes creation of Azure Vent, Subnets, Virtual machines, Azure SQL, Azure Logic Apse appaired Application Gateway, storage accounts, NIC, NSG.
Implemented Best practices using terraform implementing the modularized approach to reuse the azure templates.
Stored the Terraform state files to azure storage account via terraform backend.
Rockeries the ant and maven build using docker multistage builds.
Designed and Implemented CI/CD pipelines for building and deploying the docker images on to amazon ECS.
Involved in migration of POS system from on-premises to Azure Cloud
Written terraform scripts for spinning azure environments.
CI/CD Pipelines for Azure Logic APP, Azure Function APPS
CD to environments in Azure.
Monitoring the environments with sense monitoring tool
Integrating the selenium with Jenkins for performing Automated test cases
Written playbooks for installation and configuration for IBM MQ, WebSphere, WMB and DB2.
Written playbooks for CI/CD of WAS, IIB and DB2.
Continuous integration and deployment of java code for WebSphere application server.
Continuous integration of creating MQ queues for WebSphere application server.
Creating BAR files for WMB and deploying it on to the execution group for WebSphere message broker.
Written Jenkins pipeline DSL scripts for creating the automated jobs in Jenkins.
Used Ansible as the deployment tool
Designed implemented Infrastructure as code pipelines for Identity management application PING a different client for Accenture
Created Automation cloud formation stack using cloud formation templates which creates VPC, Subnets, EC2, RDS and deployed application docker images on to the EC2 instances enabling the Auto Scaling with Amazon AMI Images using Jenkins pipeline.
Configured & deployed Java applications on Amazon Web Services (AWS) for a multitude of applications utilizing the AWS stack, cloud formation.
By designing and implementing Docker workflow reduced built and deployment times.
Good Knowledge on container management using Docker in creating images.
Hands on experience in creating Docker containers and Docker consoles for managing the application life cycle.
Scheduled, deployed and managed container replicas on to a node cluster using cabernets.
Managed local deployments in cabernets, creating local cluster and deploying application containers
Promoting CI CD culture collaborating with Development, DBA, QA, Support and Business Operations.
Documented release, builds and source control procedures and plans.
Installing, configuring and administering Jenkins CI tool on Linux machines.
Develop scalable build, test and deployment systems in virtualized environments.
Resolved the issues on Amazon web services by capturing the snapshots of build boxes.
Installation and configuration of new relic on the amazon EC2 instances.
Configured new relic for all the events and alerts of application metrics
Involved in phases of testing for example Integration testing, Smoke testing Performance testing and Load testing. We are also using inbuilt test cases in Jenkins and running those tests on master branch.
Experience in AWS using EC2, AWS S3, AWS VPC and IAM services.
Designed AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.
Configured AWS IAM and Security Group in Public and Private Subnets in VPC.
Setup and build AWS infrastructure various resources, VPC EC2, S3, IAM, EBS, Security Group, Auto Scaling, and RDS in Cloud Formation JSON templates.
Created AWS Route53 to route traffic between different regions.
Configured and automated the Jenkins Build jobs for Continuous Integration.
Interaction with business analysts for getting updated requirements and supported change Management Processes.
Use agile methodology throughout the project. Involved in weekly and daily bases release management.
Coordination with continuous Integration to ensure that all applicable environment issues are resolved in advance of production implementation Environment: Azure, AWS, Azure VMS, Azure SQL, NSG, Vent, Subnets, Aws EC2, VPC, Amazon ECS, Veracode, Bitbucket, DSL (groovy), SonarQube, Sense, Docker, Shell Scripts, Ansible, Python, Jenkins, Groovy, WebSphere. Fiserv, Brookfield, Wisconsin May 2015 – Mar
2017
DevOps Engineer
Responsibilities:
As a DevOps engineer, my role includes Middleware automation, release management, Environment Management, Continuous integration, continuous deployment, Incident management, Version management.
Hybrid cloud environment GAIA, Amazon Webservices Responsibilities include creating Infrastructure as code, Configuration, Build and deployments to the created environments.
Migrated Several Java applications WebSphere/WebLogic/tomcat to EC2 on amazon web services.
Automated AWS components like EC2 instances, Security groups, ELB, RDS, IAM through AWS Cloud information templates.
Built and Deployed Docker images on AWS ECS and automated the CI-CD pipeline
Worked on AWS services like EC2, S3, Glacier, ELB, RDS, Redshift, IAM, Route 53, VPC, Auto scaling, CloudFront, Cloud Watch, Cloud Trail, Security Groups.
Worked on AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates
Used Internal tools ARM (Automated release management), AIM, I request for Continuous integration and Continuous deployment
Created CI/CD pipelines using Jenkins, Chef for Deployments to application servers.
Written PowerShell scripts for Automated IIS deployments.
Set up CI (Continuous Integration) for major releases in Jenkins.
Used Jenkins innovatively to automate most of the build related tasks. Improved throughput and efficiency of build system by providing EO/managers rights to trigger required build.
Created Jenkins pipelines several Downstream/Upstream job configurations based on dependencies from other applications &amp, based on Release methodologies
Built a deployment server and added script, Jenkins public key using CFT user data so that developers can build and
deploy their code using Jenkins UI.
Wrote Jenkins pipeline scripts using groovy DSL.
Installed and configured code rules, keys of Sonar for code analysis and created of Sonar Qu be dashboards for different team members based on their roles to monitor the progress of project source code.
Merged release branches to the trunk after the production release and resolved the conflicts rose during the merge in GIT.
Creating fully automated CI build and deployment infrastructure and processes for multiple projects.
Developing scripts for build, deployment, maintenance and related tasks using Jenkins, Docker, Maven, Python and Bash
Deploying and maintaining production environments using AWS EC2 instances and Elastic Container Services with Docker.
Experience of writing & managing Chef Scripts & using Linux automated deployments using Chef.
Installed WLS, setting up WebLogic Domains, configuring/monitoring/administering Admin Servers, Managed Servers and Node Manager in development, testing and production environments.
Created WebLogic clusters.
Performed WebLogic Servers administration tasks such as installing, configuring, monitoring and performance tuning.
Created and Configured Data Sources for database connectivity and JMS resources.
Managed infrastructure resources in cloud architecture (GIAA) with close coordination with various functional teams.
Troubleshooted and resolved Build failures due to infrastructure issues reduced by 95% stabilizing the build process.
Setting up the Build environment across different applications using I request and maven
Setting up the auto deployment process for different applications in different environments and implementing the auto deployment process.
Involved in managing other version control tools like GIT.
Written generic scripts (shell, python) for automating the war/ear file deployments across WebSphere, WebLogic and tomcat application servers.
Written PowerShell generic scripts for automating the web applications across all the IIS containers.
Written shell scripts for Deployment automation and day-to-day complex tasks. Environment: GIT, Amazon Webservices, GAIA (Internal cloud), Maven, Docker, Chef, Git, run deck, ARM, AIM Nexus, Jenkins, WebLogic, Amazon EC2, AWS ECS, AWS RDS, Aws VPC, AWS Subnets, WebSphere application server, MQ(IBM), IBM DB2, Tomcat, Shell, Perl, Nexus and JIRA. Pluribus Networks, Bengaluru, India Oct 2012 – March 2015
Build & Release Engineer
Responsibilities:
Part of a Team which is responsible for the build management, middleware automation and production support.
Installing, configuring and maintaining Continuous Integration, Automation and Configuration Management
tools.
Install, configure and administer Jenkins for CI and CD.
Connected continuous integration system with GIT version control repository and continually build as the check-
ins came from the developer.
Created pipelines to clone the code from source code repository, build the code using build tools like Ant, maven and deployed the artifacts on application servers.
Managed Git repository, code merging, production deployments and Coordinate/assist developers with establishing and applying appropriate branching, labeling/naming conventions using Git source control.
Worked on Version Control System Bitbucket /GIT throughout Dev/Test/prod/Branching to perform daily and weekly software builds.
Developing scripts for build, deployment, maintenance and related tasks using Jenkins, Maven, Python and Bash.
Installed and configured WebLogic.
Created WebLogic domains, Managed servers.
Configured SSH, SMTP, Build Tools, and Source Control repositories in Jenkins. Installed multiple plugins to
Jenkins. Configured Proxy to get auto updates
Created chef cookbooks to deploy war and ear files to WebLogic and WebSphere application servers.
Installation and configuration of Webserver (Apache), MySQL and PHP in a LAMP stack. Managing Server configurations and network firewalls by installing antivirus in application servers.
Configuration and Administration of Apache Web Server and SSL.
Deployed J2EE applications to Application servers in an agile continuous integration environment and also automated the whole process.
Worked on the installation and configuration of the monitoring tool Nagios.
Created and maintained the Python deployment scripts for WebSphere java applications.
Configured JDBC, JMS, JNDI, SNMP and J2EE Services and Data sources.
Created JMS Configurations– JMS Server, Connection Factory, Foreign JMS server, Message Bridge, Topic/Queue, Distributed destinations.
Redefined processes and implemented tools for software builds, patch creation, source control, and release tracking
and reporting.
Configured connectivity with SSL Certificates for web servers and App servers for applications in all environments.
Configured Jenkins to implement nightly builds on daily basis and generated change log that includes changes happened from the last 24 hours.
Deployed Enterprise Application Archive (EAR), Web Application Archive (WAR), in staging and production.
Worked with POM.xml files, performing releases with the Maven release plugin, Arenization of Java projects and managing Maven repositories.
Worked with Nexus Artifactory Repository, published artifacts with unique semantic version number
Deployed and configured Chef Server and Chef Solo including bootstrapping of chef client nodes for provisioning.
Configuration and automation of the build process for dotnet applications using MS build builds and deploying the zip packages on to IIS servers.
Manage IIS web fronts end servers.
Worked on tuning Application Server, and Web Servers by changing the Heap Size parameters and tuning JVM’s Garbage Collector.
Documented the entire build and release engineering process and provided on call support. Environment: Java, Agile, Git, Chef, RHEL 6, Nagios, Jenkins, Bash, ANT, MAVEN, Shell Scripts, XML, Weblogic, Websphere, Tomcat, Apache, Python Scripting, Windows.
Contact this candidate