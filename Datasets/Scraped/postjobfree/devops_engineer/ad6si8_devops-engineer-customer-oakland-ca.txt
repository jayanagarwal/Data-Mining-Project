Mohan G
Senior DevOps Engineer
Email id: ad6si8@r.postjobfree.com
Phone No: +1-650-***-****

PROFESSIONAL SUMMARY
•Over 9 + years of expertise as a cloud DevOps engineer, with a focus on creating, deploying, and managing AWS and Azure cloud infrastructure. Skilled at using CI/CD pipelines, optimizing application scalability, and automating infrastructure.
•A helpful team player who possesses exceptional interpersonal skills, self-motivation, and a commitment to continuous system maintenance. shown the ability to deliver excellent customer service.
•Well-versed in a variety of AWS services, including Route 53, Autoscaling, Lambda, SES, RDS, EC2, VPC, EBS, and AMI. extensive knowledge of automation using CI/CD systems such as Jenkins and Bamboo.
•Expertise in Hadoop and Big Data, along with knowledge of several databases, such as Oracle, MySQL, MS-SQL, and Cassandra.
•Proficiency in Azure IaaS administration, with a focus on provisioning, ID management, and governance.
•Proficiency with Azure installations, including setting up services for ideal web app and key vault connection.
•Skillful at using Azure DevOps pipelines for deployment to manage Private and Hybrid cloud configurations in SQL Azure and Azure.
•Skilled in scripting languages to improve DevOps tools and procedures, such as Python, Shell, Bash, and JavaScript.
•Work with bug-tracking software like JIRA, Remedy, and Bugzilla in addition to data warehousing using AWS Redshift.
•Proficient in Agile tools like Atlassian and Jira, with hands-on experience in Continuous Delivery tools like Nexus and Run deck.
•Implemented continuous delivery processes, architected AKS Kubernetes clusters, and automated environment creation using Terraform.
•Extensive involvement in Docker-based deployments, utilizing Docker containers to bridge development and operations securely.
•Hands-on experience with container clusters including Docker swarm, Kubernetes, and Mesos, and expertise in OpenShift Container Platform.
•Well-versed in IAM tasks including provisioning, ID management, and governance, especially strong in Azure IaaS management

TECHNICAL SKILLS:
Build Tools: MAVEN, ANT, Gradle, MS Build.
Bug Tracking Tools: JIRA, Fisheye, Cucumber, confluence, IBM ClearQuest.
Version Control Tools: Automation container GIT, SVN, Team Foundation Server (TFS), Clear Case.
DevOps Tools: Jenkins/Hudson, bamboo, Team City, Build Forge, AntHillPro, TFS Visual Studio Build.
Continuous Deployment: Puppet, Ansible, Saltstack, Chef, Git, Terraform, Docker, Kubernetes, marathon and Mesos.
Cloud services: Amazon Web Services (AWS), Azure EC2, RDS, VPC, S3, ROUTE53, SNS, SQS, Cloud front, EBS, ELB, Cloud watch, Elastic Beanstalk, OpenShift, OpenStack, and Cloud Trail.
Monitoring tools: Nagios, ELK, Splunk, Elasticsearch, SonarQube, CloudWatch, and Selenium.
Networking: TCP/IP, NIS, NIS+NFS, DNS, DHCP, WAN, SMTP, LAN, FTP/TFTP, TELNET, Firewalls.
Database Servers: Oracle 9i, 10g, MySQL 7.0, 6.5, RDBMS Oracle, MongoDB, IAM, Cassandra, SQL Server.
Web/Application Servers: WebLogic, WebSphere, JBoss, Apache Server, Apache Tomcat.
Languages: C, C++, .NET, Java/J2EE, PH. Golang.
Scripting Languages: Bash and Korn Shell scripting, Perl, Ruby, Python, YAML, Groovy.
SDLC: Agile, Scrum, and Waterfall.
Operating Systems: RHEL (5.x, 6.x, 7x), SUSE Linux (9,10,11), Sun Solaris (9,10,11), CentOS 5,6, Windows 2003, 2008, VMware ESX (3.5,4.0).

PROFESSIONAL EXPERIENCE

Client: Verizon, Dallas, TX February 2023 - Present
Role: Sr. DevOps Engineer

Responsibilities:
Using Jenkins 1.0.5, I implemented and maintained continuous integration and deployment (CI/CD) pipelines, improving deployment speed and code quality.
Automated infrastructure provisioning and management with AWS Cloud Formation Templates, reducing manual errors and operational costs.
Configured and maintained web servers (Apache, Tomcat) to ensure high availability and performance for online retail platforms.
Developed automation scripts in Python3.6.0 and PowerShell 4.2.6 to streamline system administration tasks, increasing team productivity.
Utilized Chef 12.7.2 for configuration management, ensuring consistent environments across development, testing, and production.
Monitored system performance and reliability with AWS Cloud Watch, proactively addressing potential issues to avoid downtime.
Managed source code and version control using GitHub 2.0, facilitating collaboration and code integrity.
Deployed and managed applications in containerized environments using Docker, improving scalability and deployment speed.
Implemented security best practices for system hardening and vulnerability management, safeguarding sensitive customer data.
Integrated AWS RDS for reliable and scalable database services, enhancing data retrieval and storage processes.
Optimized application delivery through AWS ELB and AWS SQS, ensuring efficient load balancing and message queuing.
Developed and maintained documentation in Confluence 6.2, promoting knowledge sharing and collaboration within the team.
Utilized Maven 3.0.2 for project build automation, reducing build times and improving developer workflow.
Managed artifacts and dependencies using Artifactory 5.4.5, ensuring consistent use of libraries and tools across projects.
Automated code quality checks and security scans, integrating tools within the CI/CD pipeline for early detection of issues.
Facilitated cross-functional collaboration between development and operations teams to foster a DevOps culture, improving project outcomes.
Provided technical support and troubleshooting using Remedy9.1, ensuring timely resolution of operational issues.
Implemented logging and monitoring solutions to track application and infrastructure performance, enabling data-driven decision-making.
Led the migration of applications to cloud environments (AWS), optimizing costs and leveraging cloud-native services.
Conducted system performance tuning and optimizations, ensuring optimal resource utilization and response times.
Collaborated on incident management processes, enhancing system reliability and reducing mean time to recovery (MTTR).
Managed project tasks and timelines using JIRA 7.2.x, ensuring on-time delivery of DevOps initiatives.
Enhanced system security by implementing AWS security groups and identity access management (IAM) policies.
Performed root cause analysis for system errors and performance bottlenecks, implementing long-term solutions to prevent recurrence.
Trained and mentored junior DevOps engineers, promoting best practices and continuous learning within the team.

Environment: DevOps, jQuery, Tomcat, Apache, Jenkins 1.0.5, Python3.6.0, Ruby2.3, Chef12.7.2, JIRA 7.2.x, Confluence6.2, Remedy9.1, Maven 3.0.2, Artifactory 5.4.5, GITHUB, Ubuntu, CentOS, Linux, AWS ELB, AWS SQS, AWS S3, AWS Cloud Formation Templates, AWS RDS, AWS Cloud Watch, PowerShell 4.2.6.

Client: State of Kentucky, Frankfort, KY (Dept of Courts) January 2020 – January 2023
Role: Azure/DevOps Engineer

Responsibilities:
Designed and implemented CI/CD pipelines using Jenkins and Azure Data Factory, streamlining deployment processes.
Collaborated with data engineers to optimize data pipelines in Azure Data Factory for performance and cost-effectiveness.
Managed and optimized Azure cloud services, including Azure Data Lake, Azure Storage, and Azure Data Bricks.
Spearheaded the migration of on-premises MS SQL databases to Azure SQL Database, improving availability and reducing costs by 30%.
Developed infrastructure as code (IaC) using Terraform and PowerShell to automate cloud resource provisioning.
Developed and maintained a CI/CD pipeline using Azure DevOps, automating the build, test, and deployment of .NET applications.
Administered Linux servers and Red Hat systems to maintain operational stability and security.
Configured and maintained azure environments to support data-intensive healthcare applications.
Utilized Ansible for configuration management, ensuring consistent environments across multiple deployments.
Managed and optimized MS SQL databases, implementing backup and recovery strategies.
Scripted automated tasks in Python and Shell Scripting to increase system efficiency and reduce manual intervention.
Implemented containerization strategies using Docker and managed container orchestration with Kubernetes.
Performed load testing and application optimization with JMeter, improving system performance and reliability.
Collaborated with development teams to integrate .NET applications with Docker containers
Managed version control repositories with GIT, maintaining source code integrity and supporting team collaboration.
Monitored application and infrastructure health using Splunk, identifying and resolving potential issues proactively.
Automated build processes using Maven, reducing code integration issues and improving build reliability.
Developed and supported WebSphere application server environments, ensuring optimal performance for healthcare applications.
Deployed and managed message brokers such as Kafka, facilitating efficient data streaming and processing.
Planned and executed the migration of on-premises MS SQL databases to Azure SQL Database.
Utilized Soap UI for web service testing, ensuring APIs met functional and performance requirements.
Conducted routine system audits, leveraging Splunk for log management and analysis.
Orchestrated multi-container Docker applications across various environments, enhancing application scalability and fault tolerance.
Implemented and enforced code quality checks, integrating static analysis tools into the CI/CD pipeline.
Collaborated with development and QA teams to refine deployment strategies and test automation.
Scripted custom automation tools in Golang, enhancing operational workflows and reducing repetitive tasks.
Managed application deployment and runtime configurations on Tomcat servers.
Executed infrastructure scaling and management tasks using Azure Data Factory to support data warehousing requirements.
Ensured system security by automating patch management and compliance checks.
Trained junior DevOps engineers on cloud technologies and automation practices, fostering team growth and skill development.
Documented technical procedures and automation scripts, creating a knowledge base for continuous improvement.

Environment: Red Hat Linux, MS Azure, Jenkins, Ansible, Shell Scripting, Azure AD, Azure Service Bus, Azure SQL, Cosmos DB, Log Analytics, Azure Kubernetes Service (AKS), Event Hub, Service Bus, Key Vault, App Insights, Azure VM creation, ACR, Azure Function App, Azure Resource Manager (ARM), Azure WebApp, Azure SQL, and Azure SQL MI, SSH, YAML, WebLogic, Python, Azure DevOps, Git, Maven, Jira

Client: US Bank, Minneapolis, MN March 2018 – December 2019
Role: Sr. DevOps Engineer

Responsibilities:
Configured and managed AWS services, including AWS Redshift, S3, and EC2, to support scalable travel data analytics.
Developed and maintained AWS Data Pipelines for efficient data flow across different components of the travel platform.
Utilized AWS Glue for data cataloging and ETL processes, enhancing data availability and integrity.
Set up and managed notifications and email services using AWS SNS and SES, facilitating effective communication.
Automated deployment processes using Jenkins 0.4.0 and MAVEN 2.5.3, improving release cycles.
Implemented configuration management with Chef 12.2 and Puppet, ensuring environment consistency.
Developed and deployed Java/J2EE applications in a high-transaction travel retail environment.
Managed WebSphere6.1.1 servers, optimizing them for performance and reliability.
Wrote and maintained Shell Scripts (7. x) for task automation on UNIX and Windows XP systems.
Monitored system performance, identifying bottlenecks and implementing solutions to enhance efficiency.
Collaborated with development teams to integrate Python 3.5.1 scripts into the deployment workflow.
Conducted system audits, ensuring compliance with industry standards and best practices.
Optimized web servers for high availability and load balancing, ensuring 24/7 uptime for global users.
Led cross-functional initiatives to adopt new AWS features and services, driving platform innovation.
Managed security groups and access controls within AWS to protect sensitive travel data.
Streamlined development operations by introducing new tools and processes for version control and code deployment.
Troubleshot and resolved issues related to application performance and infrastructure.
Facilitated the migration of legacy systems to cloud-based infrastructure, improving scalability.
Designed and implemented backup strategies using AWS services to ensure data redundancy and recovery.
Participated in on-call rotations, providing support for critical issues impacting the travel platform.
Worked closely with QA teams to automate testing processes, increasing the reliability of software releases.
Provided expertise on system scaling to handle peak travel seasons with increased load.
Developed documentation and training materials for the operations team, enhancing team knowledge and capabilities.

Environment: AWS EC2, SNS, SES, Web Servers, MAVEN 2.5.3, Jenkins 0.4.0, Chef 12.2, Puppet, Java/J2EE, WebSphere6.1.1, Shell Scripts 7.x, UNIX, Windows XP, Python 3.5.1

Client: WalkingTree Technologies, Hyderabad, India May 2016 – August 2017
Role: Cloud/ DevOps Engineer

Responsibilities:
Established databases via RDS and storage utilizing Google Storage Bucket, alongside configuring instance backups to Google Storage Bucket.
Proficient in troubleshooting and debugging CI/CD pipelines, adept at resolving issues such as build failures, test errors, or deployment hiccups.
Experienced in utilizing orchestration tools like Terraform, and Chef, and harnessing modern solutions such as Vault, Consul, Kubernetes, Docker, Kafka, etc.
Automated the installation and configuration processes of API Management products, including Google Apigee components with a 38-node cluster and Enterprise Kong Gateway.
Provided support for existing Stream sets architecture within the AWS environment, with a focus on migrating the architecture to the cloud.
Leveraged Terraform to establish infrastructure components such as VPC, subnets, storage buckets, Secret Manager, GKE, etc.
Collaborated with orchestration tools like Terraform and Chef, integrating contemporary tools like Vault, Consul, Kubernetes, Docker, Kafka, etc.
Implemented security measures for components within a multi-team cloud environment, with a focus on automated deployments using bash and Jenkins.
Established S3 buckets and enforced security protocols using IAM and Bucket Policies.
Managed Lifecycle Policies for seamless object movement across different S3 tiers and Glacier.
Developed bash wrapper scripts facilitating one-click deployment and destruction of Terraform-managed mini-environments for developers.
Established monitors and dashboards using Data Dog and facilitated monitoring using Monitor, ensuring readiness for SOC 2 audit compliance.
Administered AWS Services including EC2, Lambda, S3, ELB, Route53, EFS, and IAM.
Configured CloudWatch Alarms to monitor EC2 and RDS performance.
Created and maintained Docker files for Python Flask Applications.
Utilized Jira for tracking efforts and managing sprints.
Devised and promoted branching strategies and best practices for GitHub-based collaboration with Developers.
Utilized Route53 for DNS records and CNAME management.
Implemented and secured PostgreSQL, integrating it with application code through environment variables using Ad Ops.
Developed various Functions in Python, Logic Apps, and constructed the entire ecosystem.
Customized AMIs for enhanced boot time and efficient Auto Scaling.
Executed Infrastructure and Code Deployments adhering to established Change Management Processes.

Environments: AWS EC2, S3, RDS, AMI, IAM, Redshift, Lambda, VPC, Chef, Java, Git, Jenkins, Terraform, Python, Linux, Bash, Groovy, Subversion, Rest API, Ant, Maven, Nexus, U-deploy, SQL, Cloud Formation, Golang, OpenShift, Cassandra, Subversion, Selenium, UNIX, SVN, Docker, Jira, Python, Ruby, Shell Scripts, Tomcat, Ansible, Splunk

Client: ValueMomentum, Hyderabad, India September 2014- May 2016
Role: System Engineer (DevOps Engineer)

Responsibilities:
•Gathered user requirements and packaged Node.js packages and libraries, establishing a CI/CD pipeline for deploying Node.js server code with extensions onto Kubernetes clusters.
•Automated build processes using Jenkins, leading to a 40% reduction in build times.
•Conducted daily scrum meetings to synchronize team activities and identify opportunities for accelerating progress.
•Automated manual tasks to free up time for more productive work and exploration of new technologies.
•Integrated AppDynamics with tools like Splunk to enhance monitoring capabilities.
•Employed technologies such as Docker and Kubernetes on existing cloud infrastructure to streamline management processes, reduce costs, and minimize downtime.
•Deployed containerized applications using Docker onto Kubernetes clusters managed by Amazon Elastic Container Service for Kubernetes (EKS).
•Configured 'Kubectl' for interaction with Kubernetes infrastructure and utilized AWS CloudFormation Templates (CFT) to launch worker node clusters on Amazon EC2 instances.
•Diagnosed and resolved issues on Linux-based systems, providing swift solutions to address root causes.
•Managed GitLab pipelines for Kubernetes-based automation.
•Demonstrated proficiency in creating Ansible Playbooks from scratch using YAML functions to automate CI/CD pipelines and deploy microservices.
•Provisioned load balancers, auto-scaling groups, and launch configurations for microservices using Ansible.
•Utilized Ansible Tower to efficiently manage multiple nodes and inventories across different environments, automating cloud deployments with Ansible and AWS CloudFormation Templates.
•Maintained various cluster-based applications on Zookeeper and SOLR.
•Designed pipelines, monitoring solutions, infrastructure, and security policies as code for Kubernetes environments.
•Monitored New Relic and Grafana for service alerts and devised permanent solutions for identified errors.
•Mitigated infrastructural and configuration drift using Terraform to ensure 99.99% uptime of services.
•Automated the release process, scripting in bash and Golang.
•Maintained a private Wiki (Confluence) documenting every activity/project that went live.
•Implemented Lambda functions within the system to close any public ports as a security measure against potential hacking.
•Conducted weekly meetings to conduct Root Cause Analysis (RCA) of critical downtimes and strategize preventive measures for future improvements.

Environments: AWS EC2, VPC, EBS, Lambda, AMI, SNS, RDS, EBS, Bamboo, Python, TFS, JSON, Java, puppet, Selenium web driver, Appium, Linux, Eclipse, Git, Ant, Maven, Subversion, UNIX, SVN, Docker, Jira, Pearl, Ruby, Shell Scripts, Tomcat, Jenkins, Splunk, groovy, Apache.

Education & Certification Details:

Bachelor’s in computer science 2014 passed out from Jawaharlal Nehru Technological University, Kakinada.
AWS Certified DevOps Engineer - Professional certification
Contact this candidate