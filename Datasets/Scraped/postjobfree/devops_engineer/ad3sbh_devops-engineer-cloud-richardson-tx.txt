Nikhil P
Sr. Cloud/DevOps Engineer
ad3sbh@r.postjobfree.com
469-***-****

Around 7 years of professional experience in designing robust build processes, Linux System Administration, and multi-cloud environment management, which includes process automation, efficient Build and Deployment Automation, Release Management, and proficient source code repository administration.
PROFESSIONAL SUMMARY:
Expertise in all SDLC phases encompassing development, testing, migration, administration, security management, and production support, ensuring end-to-end software lifecycle mastery.
Experienced in navigating various operating systems, encompassing RedHat Linux, Ubuntu, CentOS, Unix, and Windows, with the ability to tailor solutions to the distinctive demands of each platform adeptly.
Demonstrated expertise in the effective utilization of a wide range of AWS services like EC2, S3, IAM, RDS, EBS, ELB, EFS, Auto Scaling, VPC, CloudWatch, Route53, CloudFront, CloudFormation and Elastic Beanstalk.
Experienced working with supplementary AWS services such as Lambda, DynamoDB, SNS, SQS, CodePipeline, CodeDeploy, and CodeCommit.
Proficient in Azure services, including Azure Resource Manager (ARM), Azure IAM, Azure Active Directory (AD), Azure networking, databases, and serverless solutions like Azure Functions and Azure Service Fabric.
Skilled in infrastructure provisioning through Azure ARM templates encompassing Azure Virtual Networks, VM management, load balancing, and network connectivity, ensuring robust and scalable Azure environments.
Hands-on expertise in Google Cloud Platform services, including Compute Engine, Cloud Load Balancing, Cloud Storage, Cloud SQL, Stackdriver Monitoring, and Cloud Deployment Manager.
Proficient in various Google Cloud Platform services, including BigQuery, Cloud Pub/Sub, Kubernetes Engine, Cloud Functions, and Cloud IAM, enabling versatile and efficient cloud solutions.
Proficiently oversaw GitHub repositories and permissions, encompassing branching and tagging strategies. Additionally, I managed version control systems like GitLab and Subversion to ensure collaborative and structured code management.
Implemented robust API security protocols to ensure data confidentiality and integrity, aligning with industry standards and best practices.
Utilized significant CI/CD tools (Jenkins, Ansible, Hudson, Chef, Puppet) to automate deployment and enhance software project efficiency and reliability.
Skilled in Ansible and creating playbooks for automating complex IT workflows, enhancing software provisioning, configuration, and deployment efficiency for streamlined operations.
Expertise in Terraform's infrastructure as code for orchestrated cloud resource management for consistent, automated, and efficient deployment of intricate architectures.
Proficiency in utilizing Build Automation tools and understanding Continuous Integration principles using tools such as Jenkins and Maven.
Proficiently administered Artifactory and Nexus repositories for efficient artifact management and streamlined build processes.
Proficient in Docker containerization to enhance application portability, scalability, and deployment efficiency, resulting in streamlined development workflows and optimized resource utilization.
Effectively leveraged Kubernetes for containerized app management, dynamic app scaling, and high availability enhanced by Docker to streamline application control and scalability.
Highlighted proficiency in deploying Helm charts, skillfully managing networking intricacies, and successfully orchestrating multi-cloud setups.
Proficiently utilized OpenShift's container orchestration to deploy, manage, and scale applications with high availability.
Successfully integrated SonarQube and Veracode into CI/CD pipelines, ensuring rigorous code quality checks and security scans for robust software development.
Proficient in various build tools like Maven, Gradle, and ANT, enabling efficient software compilation, testing, and packaging for effective project development.
Proficient in Bash, Groovy, Python and Unix shell scripts, alongside GIT Bash and Putty, to automate tasks and optimize operational efficiency.
Implemented monitoring and logging solutions employing tools like CloudWatch, ELK, Dynatrace, Splunk, Datadog, Prometheus and Grafana to significantly enhance efficiency and reduce costs by identifying and resolving performance, security, and scaling issues within the infrastructure.
Managed application deployment on enterprise-grade servers, including Apache Tomcat, WebSphere, WebLogic, and JBoss, ensuring high performance and reliability within intricate environments.
Strategically leveraged various issue-tracking tools, notably JIRA, Bugzilla, Remedy and ServiceNow, to systematically manage software issues, promote collaborative teamwork, and ensure efficient issue resolution.

LICENSES & CERTIFICATIONS:
AWS Certified Solutions Architect Associate
Google Certified Associate Cloud Engineer

TECHNICAL SKILLS:

Cloud Platforms
Amazon Web Services, Microsoft Azure, Google Cloud Platform
Configuration Management
Ansible, Chef, Puppet.
Version Control Tools
Git, BitBucket, Gitlab, SVN
Continuous Integration & Delivery
Jenkins, Bamboo, ArgoCD
Build Tools
Maven, Gradle, ANT
Package Management
Nexus, Artifactory, JFrog
Security Management
SonarQube, Veracode
Containerization
Docker, Kubernetes, OpenShift
Operating Systems
Red Hat Linux, Ubuntu, CentOS, Unix and Windows.
Database
MySQL, MongoDB, PostgreSQL, SQL SERVER, Oracle 10g,11g, 12C.
Programming Languages
Python, Java, Golang, XML, JavaScript, Shell Script, Bash, Perl, NodeJS
Infrastructure Spin-up Tools
Terraform, CloudFormation, ARM Templates.
Web Application Servers
Apache Tomcat, Nginx, WebSphere, WebLogic, and JBoss.
Logging & Monitoring Tools
Nagios, Splunk, Cloud Watch, Datadog, Prometheus, Grafana, Dynatrace and ELK.
Issue Tracking
JIRA, Bugzilla, ServiceNow, Remedy

PROFESSIONAL EXPERIENCE:

Client: Sallie Mae Sep 2021 to Present
Role: Sr. Cloud/DevOps Engineer Indianapolis, IN

Responsibilities:
Engineered robust cloud solutions, seamlessly integrating AWS and Azure technologies for optimized performance.
Led the strategic move from Azure to AWS, reconfiguring cloud resources, optimizing cost management, and ensuring a smooth transition of data, applications, and workloads to AWS's cloud ecosystem.
Established and customized user and group configurations with AWS Identity and Access Management (IAM) across AWS. Leveraged cutting-edge APIs to streamline resource management.
Developed and deployed AWS solutions, harnessing Amazon Elastic Compute Cloud (EC2), Amazon S3, Amazon Elastic Block Store (EBS), Elastic Load Balancing, Elastic Kubernetes Service (EKS), Amazon RDS for PostgreSQL/MySQL/SQL Server, AWS CloudFormation, and Amazon Simple Queue Service (SQS).
Engineered custom AWS CloudFormation templates to configure Virtual Private Clouds (VPCs), subnets, EC2 instances, Load Balancers, and Network Access Control Lists (NACLs).
Implemented Amazon Simple Queue Service (SQS) to facilitate reliable and scalable messaging within AWS-based cloud solutions.
Applied Amazon S3 features like versioning and archiving for robust backups and long-term storage. These practices were integrated seamlessly with Amazon S3 data management.
Utilized AWS Elastic Beanstalk for deploying, scaling, and managing web applications and services developed with Java, ensuring seamless performance and scalability within the AWS cloud environment.
Took responsibility for creating various Amazon CloudWatch alarms, which send Amazon Simple Notification Service (SNS) notifications when triggered.
Streamlined AWS Lambda functions with the AWS Command Line Interface (CLI), ensuring efficient data backup and recovery.
Practical application of Kafka for seamless data integration, enabling real-time streaming and communication across diverse data sources within the AWS ecosystem.
Acted as a bridge between the operations and development teams, facilitating effective communication and collaboration.
Spearheaded the conceptualization and implementation of diverse microservice-based APIs, harnessing the power of the Python framework to enhance communication between various application components for optimized efficiency.
Managed Git repositories, branches, and tags, facilitating developers in resolving merging issues and implementing parallel development processes.
Utilized Ansible Tower to create inventory lists, job templates, and scheduled tasks while managing Ansible Roles sourced from Ansible Galaxy to automate infrastructure processes.
Designed and implemented AWS virtual servers using Ansible roles to facilitate the seamless deployment of web applications within the AWS environment.
Leveraged Terraform as Infrastructure as Code (IaC) for deploying the essential infrastructure to establish development, testing, and production environments for a software development initiative within the AWS ecosystem.
Designed and managed CI/CD pipelines for application deployments through Jenkins and AWS CodePipeline, enabling seamless workflow support.
Orchestrated Jenkins as a comprehensive continuous delivery solution, encompassing package creation, distribution, and deployment to AWS Elastic Beanstalk via Jenkins jobs with embedded shell scripts.
Seamlessly merged Jenkins and GitHub for continuous integration, employing GitHub Webhooks for automated triggers.
Proficiently employed Groovy scripting in Jenkins pipelines to automate complex deployment tasks, integrate with external APIs, and manipulate configurations across various pipeline stages.
Managed an AWS Artifact repository for deploying Maven-generated artifacts and storing build dependencies.
Utilized AWS Artifact REST APIs to perform tasks like artifact downloads, uploads, and updates and tested AWS Artifact's functionality.
Leveraged Docker for efficient development and testing environments, including Docker Registry setup for local and Docker Hub image management.
Orchestrated Docker and Kubernetes across diverse cloud providers, supporting developers in CI/CD application containerization and enabling both public and private cloud deployments.
Experienced in troubleshooting pods, modifying configurations, and managing OpenShift clusters, including scaling AWS app nodes up and down.
Implemented GitOps workflows for Kubernetes clusters, facilitating smooth application deployment, scaling, and rollback. Integrated Git repositories with Helm charts, promoting a Git-centric approach for streamlined infrastructure and application lifecycle management.
Utilized ArgoCD to declaratively manage Kubernetes applications, ensuring infrastructure as code (IaC) principles and enabling efficient updates and rollbacks of containerized services.
Established quality gates within the SonarQube dashboard and integrated them into the pipelines to build failures when conditions are unmet.
Deployed Trivy in CI/CD pipelines for automated container vulnerability scanning, strengthening security with preemptive CVE remediation in the cloud-native environment.
Orchestrated Trivy in development workflows, automating CVE prioritization for proactive defense, ensuring continuous security validation in the cloud infrastructure.
Utilized Bash, Python, Shell, and CRONtab scripts in Linux to automate administrative and management tasks, ensuring streamlined operations.
Demonstrated expertise in Boto3, the Python SDK for AWS, to programmatically interact with various AWS services, enabling seamless automation of cloud resources and infrastructure management.
Managed the internal ELK-based monitoring solutions, replacing Splunk functionalities while optimizing data security, redundancy, and real-time insights across AWS instances.
Oversaw seamless transition of log data, ensuring efficient parsing, transforming, and forwarding to Elasticsearch for comprehensive analysis using Kibana.
Implemented streamlined systems for customer inquiries, utilizing automated ticketing and cross-functional coordination. Achieved prompt issue resolution, consistently exceeding SLAs.
Effectively utilized JIRA and other issue-tracking tools to ensure smooth development processes, track issues, and facilitate collaboration.

Client: Charles Schwab May 2020 to June 2021
Role: Cloud/DevOps Engineer Dallas, TX

Responsibilities:
Skillfully orchestrated the deployment of diverse applications, capitalizing on a wide array of Azure components. These included Virtual Machines (VMs), Azure Blob Storage, Azure Disk Storage, Virtual Networks, Azure Cache for Redis, and Azure Cosmos DB.
Expertise extended to Azure Load Balancer, Azure SQL Database, Azure Identity and Access Management (Azure AD), and Azure DNS. Additionally, managed deployments on Azure App Service and leveraged Azure Monitor for comprehensive application monitoring.
Proficiently built and deployed microservices, seamlessly integrating them with Azure Kubernetes Service (AKS) or Azure Functions, ensuring robust, scalable solutions.
Executed proficiency in Azure Command Line Interface (CLI) and Azure SDK, effectively deploying and scaling web applications and services developed in Java and PHP using Azure App Service.
Engineered custom Azure Resource Manager (ARM) templates to configure Virtual Networks, subnets, VMs, Load Balancers, and Network Security Groups.
Configured and maintained Azure Functions to trigger during Jenkins builds, storing results in Azure Blob Storage for universal access.
Proficiently established Azure NAT Gateways and Azure Firewall while managing route tables, Public IP addresses, and Network Security Groups.
Pioneered a Proof of Concept (POC) using Azure DevOps Repos, Azure Pipelines, and Azure DevTest Labs to establish Continuous Integration within the Azure infrastructure.
Conducted code management tasks utilizing GitLab, overseeing code branching and merging. Automated the release process by pushing all code to GitLab.
Led initiatives to reduce response times by 15%, implementing targeted training and resource allocation strategies. Continuously monitored workflows, ensuring efficient service request resolution.
Employed Ansible and Ansible Tower for automated configuration management, deploying applications, managing changes, and streamlining software updates while ensuring functionality verification.
Streamlined deployment through the Ansible Python API, seamlessly integrating Maven POMs with third-party tools for cohesive project builds.
Employed Terraform for infrastructure automation, utilizing Infrastructure as Code (IAC) through configuration files to provision and manage resources across multiple cloud providers.
Harnessed core Terraform components like state files, providers, and modules, ensuring streamlined infrastructure orchestration, scalability, and reliability in deployments.
Utilized Jenkins to institute continuous integration and delivery (CI/CD), harnessing its fundamental services to automate the processes of building, testing, and deploying applications.
Managed Nexus and Artifact repositories, integrating them with Jenkins to automate builds and deploy artifacts seamlessly.
Established a Continuous Delivery workflow that involves constructing Docker images and publishing them to a private Nexus v3 repository.
Containerized applications with Docker, including Docker file creation, Docker-compose setup, snapshots, and volume management.
Enhanced Jenkins functionality with custom Docker Images, expanding Docker Slave Nodes and utilizing core Docker components such as Docker Daemon, Hub, Images, Registry, and Swarm.
Engineered K8s clusters using Helm Charts, overseeing diverse components like pods, replication controllers, replica sets, services, deployments, labels, health checks, and ingress/egress via YAML files.
Created a Python script to purge outdated deployments in a Kubernetes cluster by deploying designated pods through GitLab-CI and HELM charts.
Managed GitLab runner instances, facilitating Jenkins CI pipelines for developers and aiding in application deployment to the Kubernetes cluster.
Implemented Golang-based continuous integration workflows using Jenkins and GitLab, automating the building, testing, and deployment of Golang applications.
Developed REST APIs in Golang to provide backend capabilities, seamlessly interfacing with OpenStack and other downstream APIs.
Demonstrated hands-on experience using OpenShift for container orchestration, Kubernetes integration, and multi-regional deployment for large-scale applications.
Integrated security scanning and code analysis tools like SonarQube and Veracode into the CI/CD pipelines, automatically identifying and mitigating code vulnerabilities.
Utilized SonarQube and Veracode to elevate code quality and security, ensuring the development of secure and robust applications.
Proficiently managed Nginx and Apache web servers, optimizing integration with Azure components for high-performance application delivery.
Oversaw Splunk dashboards, including charts, graphs, and drill-downs, to optimize the usability of the Splunk platform and its applications for managers, administrators, users, and analysts.
Deployed and configured the ELK stack in mode, facilitating the seamless flow of application logs from the App Server to Elasticsearch through Logstash.
Engineered real-time monitoring dashboards via the ELK stack, facilitating efficient log analysis and visualization.
Employed Jira and Confluence for efficient knowledge base management, documentation, and ticket tracking, enhancing cross-functional team collaboration.

Client: Honeywell Jan 2019 to May 2020
Role: Cloud/DevOps Engineer Dallas, TX

Responsibilities:
Led the design, deployment, and ongoing management of cloud solutions using Amazon Web Services (AWS) and its associated technologies.
Managed the migration of services from on-premises to AWS cloud environments, collaborating closely with development and QA teams to ensure high-quality deployments.
Orchestrated the initial deployment of AWS components like Virtual Private Cloud (VPC), Elastic Load Balancing, Amazon S3, and Affinity groups. Enabled the replication of VMware VMs to AWS through AWS Server Migration Service.
Configured AWS Identity and Access Management (IAM), overseeing user and group management. Implemented AWS Lambda within AWS Step Functions for machine configuration.
Specialized in configuring internal and external load balancers, load-balanced sets, and AWS Route 53 for DNS management.
Expertise in implementing high-availability (HA) deployment models with AWS Elastic Beanstalk and AWS CloudFormation.
Played a crucial role in migrating on-premises systems to AWS, establishing AWS Disaster Recovery Environments and AWS Backups from scratch using AWS CLI and AWS CloudFormation.
Utilized Nagios for LDAP, consolidating data for LDAP users. Managed system performance monitoring with Nagios, including server maintenance and integrating new services and servers.
Designed end-to-end DevOps workflows for multiple applications, integrating CI/CD pipelines using Git, AWS CodePipeline, Docker, and AWS CloudFormation Templates.
Implemented CloudTrail to capture the events related to API calls made to AWS infrastructure.
Revamped API structures by modularizing existing Python modules using pyyaml libraries, enhancing overall system flexibility.
Designed and implemented horizontally scalable APIs using Python Flask, ensuring seamless integration with external interfaces.
Managed Git repositories, enhanced branching, merged practices, integrated Git into Jenkins for auto checkouts, and streamlined version control tool integration.
Leveraged Chef for configuration management, utilizing Chef Automate, Habitat, and InSpec to automate infrastructure and application deployments across various environments.
Designed Chef Cookbooks and Recipes for streamlined configuration efficiency within AWS and other cloud environments, ensuring consistency and efficiency.
Orchestrated the migration of legacy systems to AWS using Terraform, automating instance transformation and emphasizing infrastructure-as-code principles for efficient change management.
Contributed to establishing continuous integration and daily build processes using Jenkins with the Artifactory repository manager.
Developed end-to-end CI/CD pipelines in Jenkins to fetch code, conduct tests, and build artifacts into JFrog Artifactory, enhancing the development workflow.
Crafted Dockerfiles for microservices, adapting Tomcat configurations for Java app deployment within containers.
Executed and monitored Microservices across platforms, constructing Kubernetes Pod definitions, Deployments, and harnessing Helm Charts for version control and deployment strategies.
Configured Network Load Balancers, implemented firewall rules for secure DMZ segments in the Kubernetes OpenShift cluster.
Installed Prometheus and Grafana with precision using Helm for meticulous application performance monitoring in Kubernetes clusters.
Implemented SonarQube integration with Jenkins and automated security and vulnerability scans in Jenkins pipelines, enhancing the security posture of the development process.
Created Perl and UNIX scripts for performing build tasks in QA, Staging, and Production environments.
Configured and installed monitoring tools such as AWS CloudWatch, AWS X-Ray, and AWS CloudTrail for application and infrastructure monitoring.
Leveraged Grafana for real-time monitoring and visualization, utilizing features like dashboards, data sources, and alerting to gain insights and accurately track cloud infrastructure and application performance.
Worked with the load testing team and analyzed the data using Dynatrace as part of application tuning. Used different attributes in Dynatrace to tune the application.
Configured and administered agile tools such as JIRA and Rally for tasks like defect management, project management, bug tracking, and planning iterations.

Client: Uber Jun 2017 to Dec 2018
Role: Linux System Administrator Hyderabad, India

Responsibilities:
Managed Linux systems within a large team, overseeing RHEL, CentOS, Ubuntu, and SUSE 10/11, ensuring robust maintenance and support.
Oversaw creating and managing user accounts, security measures, Access Control Lists (ACLs), permissions, disk space, and process monitoring within RHEL.
Created SVN configuration record for builds using derived objects generated during build audit process.
Responsible for building and releasing packages for testing. Adding servers to domain and managing the groups and users in Active Directory.
Designed the deployment and migration plan for the Red Hat Enterprise Virtualization environment and Red Hat Enterprise OpenStack.
Troubleshooting any part of the lifecycle services within the OpenStack including log files, message queues, database, compute hardware, and network connectivity.
Oversaw package building, Active Directory integration, and Crontab task automation, enhancing domain management and operational efficiency.
Proficient in the creation of virtual machines for Red Hat Linux and Solaris on VMware ESX (Hypervisor), as well as skilled in their administration using the Virtual Infrastructure client.
Orchestrated RedHat Linux system setup for seamless development and production, including Apache/Tomcat servers, Mail servers, MySQL databases, and firewalls.
Utilized UNIX shell scripting and Python automation for compilation, deployment, and administrative tasks, improving accuracy and efficiency.
Developed Bash shell scripts for gathering information from Linux servers and regularly prepared Ruby code for web application programming and service testing.
Collaborated in Agile/Scrum teams, enabling continuous integration and deployment through Python, Perl, and Shell scripts, enhancing SDLC workflows.
Implemented Squid server and Java application deployment to Apache Tomcat, conducting rigorous Python Unit tests for software quality assurance.
Provided 24/7 Linux Production Servers support, enhancing RHEL security measures for uninterrupted operations.

EDUCATION:
Master’s degree in computer science
Contact this candidate