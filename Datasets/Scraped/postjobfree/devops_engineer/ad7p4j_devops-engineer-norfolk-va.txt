Nischitha Mandala

Phone: +1-202-***-****
Mail: ad7p4j@r.postjobfree.com

PROFESSIONAL SUMMARY:
Over 10+ years of results-driven and diversified IT industry experience, with a major focus on Cloud, DevOps Engineering, Cloud Infrastructure and Automation, Software Configuration, Build Engineering, and Release Engineering. Specialized in the Financial, Banking, and Healthcare industries.
Extensive experience in Private Cloud and Hybrid cloud configurations, patterns, and practices in Windows Azure and SQL Azure, including web and database deployments.
Implemented security in web applications using Azure and deployed web applications to Azure.
Familiar with using Dependency Visualization in Azure Migrate for deep analysis and identifying application dependencies.
Configured various Azure services including App Services, Application Insights, Application Gateway, DNS, Traffic Manager, Network Watcher, Site Recovery, Azure Stack, Backup, and Automation.
Experience in writing Infrastructure as Code (IaC) using Terraform and Azure Resource Management, creating reusable Terraform modules in both Azure and AWS cloud environments.
Migrated on-premises systems to Windows Azure using Azure Site Recovery and Azure Backups.
Created CI/CD pipelines in Azure DevOps environments by managing their dependencies and tasks.
Installed, configured, and maintained DNS, FTP, and TCP/IP on Red Hat Linux.
Automated the provisioning and management of Azure resources using Infrastructure as Code (IaC) tools such as Terraform and Azure Resource Manager (ARM) templates.
Utilized Puppet and Chef Automation tools for configuration management in various systems.
Designed, installed, and implemented Ansible configuration management systems.
Used Puppet to automate configuration management and describe the state of resources using Ruby language.
Developed Python, Shell/Perl Scripts, and PowerShell for automation purposes.
Designed and implemented fully automated server build management, monitoring, and deployment using Ansible playbooks and modules.
Managed and configured Azure subscriptions and resources, including virtual machines, storage accounts, and networking components, ensuring optimal performance and cost efficiency.
Extensively worked with Jenkins/Hudson for continuous integration (CI) and continuous delivery (CD).
Experienced in managing Jenkins and Bamboo for end-to-end automation of builds and deployments, including database CI/CD using Jenkins.
Managed artifacts using Nexus and Artifactory Repository Managers for Maven builds.
Proficient in using build tools like Maven, ANT, and Gradle, and conducting static code analysis with SonarQube.
Implemented and managed Databricks workspaces and clusters on cloud platforms such as Azure, ensuring optimal performance and cost-efficiency for data processing tasks.
Configured and managed Databricks clusters, including autoscaling and cluster policies, to support dynamic workloads and optimize resource utilization.
Version control expertise using Git, GitHub, Subversion (SVN), Perforce, and TFS across Linux and Windows platforms.
Skilled in using JIRA for ticketing, defect tracking, workflow configurations, customizations, and integrations with Jenkins, GitHub, and Maven.
Utilized Docker and Kubernetes for containerization and orchestration, including the deployment, scaling, and management of Docker containers.
Experience with Docker Hub, Docker Engine, Docker Images, Docker Weave, Docker Compose, Docker Swarm, and Docker Registry.
Managed Docker orchestration using Kubernetes, including setting up Kubernetes clusters for running microservices and pushing microservices into production with Kubernetes-backed infrastructure.
Development and automation of Kubernetes clusters using Ansible playbooks.
Wrote cookbooks for WebLogic, Tomcat, and JBoss deployment automation.
Expertise in using Docker for creating platform-independent applications and managing Docker orchestration with Kubernetes.
Proficiency in package management using Red Hat RPM, YUM, utilized in various Linux distributions such as Red Hat Enterprise Linux, SUSE Linux Enterprises, and Fedora.
Sound understanding of software configuration management (SCM) principles and best practices.
Worked with bug tracking software like JIRA and Bugzilla and possess a good understanding of programming languages such as Java and .NET.
Experience with Ansible to manage web applications, environment configuration files, users, mount points, and packages. Created playbooks in YAML to automate development processes.

TECHNICAL SKILLS:

Cloud
Microsoft Azure, Amazon Web Services
Container Orchestration Tools
Docker Swarm, EC2 Container Services, Azure Container Services
Configuration Management
Chef, Ansible, Puppet, Salt Stack
Version Control Tools
GIT, GITHUB, SVN, Perforce, Bitbucket
Web and Application Servers
JBoss, Apache Tomcat, Web Sphere, Web Logic, Nginx
Monitoring Tools
Nagios, Splunk, ELK, Datadog, Grafana, New Relic
Bug Tracking Tools
JIRA, ServiceNow, Confluence, Rally, IBM ClearQuest
Build Tools
Maven, Ant, Gradle
Continuous Integration
Jenkins
Scripting Languages
Shell, Ruby, Terraform, PowerShell, JSON, YAML
Database
MySQL, Oracle, Mongo DB, Cassandra
Repository Management
Nexus, JFrog, Artifactory
Virtualization
VMware ESX/ESXi, Windows Hyper-V, Power VM,
Operating System
Red Hat, Ubuntu, Debian, Fedora, CentOS, Windows, Solaris, Mac OS
Networking Protocols
TCP/IP, DNS, NFS, ICMP, SMTP, DHCP, BGP, UDP and RIP

WORK EXPERIENCE:

Delta Air lines - Atlanta, GA Oct 2022 - Present
SR. Azure DevOps Engineer
Responsibilities:
Designed, planned, and implemented migration for existing on-prem applications to Azure Cloud (ARM).
Configured and deployed Azure automation scripts utilizing Azure stack services (Compute, Web and Mobile, Blobs, ADF, Resource Groups, Azure Data Lake, HDInsight Clusters, Azure Data Factory, Azure SQL, Cloud Services, and ARM) focusing on automation.
Created Azure automation assets, graphical runbooks, and PowerShell runbooks for task automation.
Deployed Azure AD Connect, configured Active Directory Federation Service (AD FS) authentication flow, installed ADFS using Azure AD Connect, and handled build, design, and deployment of Azure environments.
Working with Windows Azure IaaS services including virtual networks, virtual machines, cloud services, resource groups, express route, traffic manager, VPN, load balancing, application gateways, and auto-scaling.
Deployed Azure IaaS virtual machines (VMs) and cloud services (PaaS role) in secure VNets and subnets.
Managed Azure infrastructure components such as Azure web roles, worker roles, VM roles, Azure SQL, Azure storage, Azure AD licenses, virtual machine backup, and recovery using Azure PowerShell and Azure portal.
Used Docker for setting up Azure Container Registry with Docker and Docker-compose. Actively involved in deployments on Docker using Kubernetes and developed test environments on Docker containers, configuring them with Kubernetes.
Deployed Windows Kubernetes (K8s) clusters with Azure Container Service (ACS) using Azure CLI.
Utilized Kubernetes and Docker for the CI/CD system runtime environment to build, test, and deploy with Octopus Deploy.
Installed and configured applications like Docker and Kubernetes for orchestration. Managed Kubernetes charts using Helm, created reproducible builds of Kubernetes applications, managed Kubernetes manifest files, and managed releases of Helm packages.
Set up monitoring and alerting for Unity Catalog operations using Databricksâ€™ native tools and Azure Monitor, providing visibility into catalog usage and performance.
Developed and maintained ADF pipelines to orchestrate complex data workflows, integrating various data sources such as Azure SQL Database, Azure Blob Storage, and Azure Data Lake Storage.
Designed and implemented CI/CD pipelines using GitHub Actions to automate the build, test, and deployment processes, ensuring efficient and reliable software delivery.
Created additional Docker slave nodes for Jenkins using custom Docker images and worked on all major Docker components like Docker Daemon, Hub, images, registry, and Swarm.
Worked on app containerization technology Docker, creating Docker images, containers, Docker registry to store images, cloud-based registry Docker Hub, and Docker Swarm to manage containers.
Virtualized servers using Docker for test environments and dev-environments, and automated configuration using Docker containers.
Integrated Jenkins CI/CD with GIT version control and implemented continuous builds based on check-ins for applications.
Managed and configured Azure subscriptions and resources, including virtual machines, storage accounts, and networking components, ensuring optimal performance and cost efficiency.
Created GitHub webhooks to set up triggers for commit, push, merge, and pull request events, driving builds to Docker registry and deploying to Kubernetes, creating pods using Kubernetes.
Created templates for Azure infrastructure as code using Terraform to build staging and production environments.
Integrated Azure Log Analytics with Azure VMs for monitoring log files, storing them, and tracking metrics. Used Terraform for managing cloud, VMware, and Docker container infrastructure resources.
Managed Azure infrastructure using Ansible configuration management.
Developed custom GitHub Actions to automate infrastructure provisioning and configuration management, enhancing deployment consistency and reducing manual errors.
Created Ansible manifests, profiles, and roles modules to automate system operations.
Automated configuration and centralized management with Ansible and Cobbler.
Implemented Ansible to manage existing servers and automate the build/configuration of new servers.
Developed Python scripts for administering GIT, using Jenkins as a full-cycle continuous delivery tool involving package creation, distribution, and deployment onto Tomcat application servers via shell scripts embedded into Jenkins jobs.
Configured and managed triggers and schedules in ADF to automate data pipeline execution, ensuring timely and reliable data updates.
Integrated GitHub Actions with various cloud platforms (AWS, Azure, Google Cloud) to automate the deployment of applications and infrastructure resources.
Automated various infrastructure activities like continuous deployment using Ansible playbooks and integrated Ansible with Jenkins on Azure.
Used Kubernetes during debugging, leading up to production when multiple application builds must be tested for stability.
Managed version control and automated deployment of ADF artifacts using Azure Repos and Azure Pipelines, ensuring robust CI/CD practices for data integration workflows.
Provided high availability for IaaS VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer.
Worked with Terraform templates to automate Azure IaaS virtual machines using Terraform modules and deployed virtual machine scale sets in production environments.
Designed a robust future-state ingestion framework solution leveraging Azure Data Factory, Azure SQL database, and Data Warehouse.
Created complex JIRA workflows including project workflows, screen schemes, permission schemes, and notification schemes.
Working with OpenShift, Kubernetes architecture and design, troubleshooting platform component issues on Azure, and developing global or multi-regional deployment models and patterns for large-scale developments and deployments on Cloud Foundry, OpenShift, and Kubernetes.
Managed servers on Azure Platform, Azure virtual machines instances using Ansible configuration management.
Designed and implemented automated workflows using Azure Logic Apps to streamline business processes and integrate various systems and services.
Installing and configuring NEXUS repository manager for artifact sharing within the company, and supporting and developing tools for integration, automated testing, and release management.
Environment: Azure Cloud (ARM), Azure Automation, PowerShell, Azure AD Connect, Active Directory Federation Service (AD FS), Azure ADLS, Databricks volumes, Windows Azure IaaS, Azure SQL, Azure Data Lake, Azure Logic apps, HDInsight Clusters, Azure Data Factory, Azure Blob, Docker, Azure admin, Kubernetes, Azure CLI, Octopus Deploy, Databrick Ext Volumes, Azure Key-vault, Helm, Jenkins, Git, Terraform, Azure Log Analytics, Ansible, Cobbler, Databricks Unity Catalog, Python, Azure Internal Load Balancer, Azure ADF, Databricks workspaces, OpenShift, Cloud Foundry, NEXUS repository manager.

Fidelity Investments - Westlake, TX June 2020 â€“ Dec 2021
Azure DevOps Engineer
Responsibilities:
Designing, planning, and implementing the migration of on-premises applications to Azure Cloud (ARM).
Configured and deployed Azure automation scripts utilizing Azure stack services and utilities with a focus on automation.
Configured and implemented storage blobs and Azure files, created storage accounts, configured the Content Delivery Network (CDN), custom domains, and managed access and storage access keys.
Experience in Windows Azure services such as PaaS and IaaS, and worked with storage solutions like Blob (Page and Block) and SQL Azure.
Automated testing frameworks and scripts using GitHub Actions to ensure continuous integration and delivery of high-quality code.
Used Docker for setting up Azure Container Registry with Docker and Docker-compose, and actively involved in deployments on Docker using Kubernetes.
Created CI/CD pipelines in Azure DevOps environments, managing their dependencies and tasks.
Developed and supported software release management procedures, and worked with Subversion, proposing and implementing branching strategies.
Created end-to-end automation with CI procedures using Jenkins and automated Maven builds by integrating them with Jenkins.
Used Azure Kubernetes Service (AKS) to deploy a managed Kubernetes cluster in Azure, created AKS clusters in the Azure portal and Azure CLI, and utilized template-driven deployment options such as Resource Manager templates and Terraform.
Configured servers to host Team Foundation Server (TFS) and set up and manage Continuous Integration (CI) using Team Foundation (TF) Build Service.
Administered and monitored Visual Studio Team System (VSTS), including taking backups and consolidating collections during migrations between VSTS versions.
Defined dependencies and plugins in Maven pom.xml for various activities and integrated Maven with GIT to manage and deploy project-related tags.
Automated various infrastructure activities like continuous deployment using Ansible playbooks, and integrated Ansible with Jenkins on Azure.
Designed and implemented fully automated server build management, monitoring, and deployment using technologies like Chef and Ansible.
Developed automation scripts in Python (core) using Puppet to deploy and manage Java applications across Linux servers.
Automated the provisioning and management of Azure resources using Infrastructure as Code (IaC) tools such as Terraform and Azure Resource Manager (ARM) templates.
Automated daily tasks using Python scripting.
Utilized GitHub Actions to manage and automate the deployment of containerized applications using Docker and Kubernetes, streamlining container orchestration.
Developed Python scripts for testing car functionality on different services.
Created users, managed user permissions, and maintained user and file system quotas on Red Hat Linux.
Used Docker in the build automation pipeline and production deployment, implemented a master-slave architecture to improve Jenkins performance, and used Jenkins for continuous integration and deployment into TomCat Application Server.
Responsible for designing and deploying best SCM processes and procedures with GitHub and GIT.
Familiar with analyzing and resolving conflicts related to merging source code in ClearCase.
Used Apache Kafka for importing real-time network log data into HDFS.
Improved the performance of SQL scripts by using Object Role Modelling methodology.
Expertise in using SCM tools like GIT, Subversion (SVN), and TFS on Linux platforms for maintaining, tagging, and branching versions in multiple environments.
Installed and configured the Nexus Repository Manager for sharing artifacts within the company.
Expertise in using JIRA for issue tracking and project management.
Supported and developed tools for integration, automated testing, and release management.
Involved in researching project application architecture to support and resolve build, compile, and test issues.
Environment: ANT, MAVEN, Databricks Volumes, Subversion (SVN), Azure Blob, CHEF, Github, Docker, Azure Logic apps, Vagrant, EC2, Ansible, JIRA, LINUX, RHEL, Databricks workspaces, SNS, SQS, Kubernetes, Azure admin, Shell/Perl Scripts, Bitbucket, Azure ADF, Databricks, Azure ADLS, Azure Key-vault, Python, Databricks Unity Catalog, TFS, SCM, API, GIT, Jenkins, Tomcat, Java, Azure TFS, Azure VSTS, Databrick Ext volumes, Visual Studio Code, Git Bash.

Chewy - Dania Beach, FL Oct 2019 â€“ May 2020
DevOps Engineer/Chef Automation
Responsibilities:
Worked with provisioning tools such as Terraform, CloudFormation, and Spinnaker. Utilized Docker, Kubernetes, and OpenShift to manage microservices for CI/CD development.
Configured Azure for Service Fabric Cluster installations and implemented and deployed on On-Premise environments. Responsible for managing AD, SQL, load balancing, NSG's, and VPN configurations for Azure.
Performed technical assessments for cross-platform application transformations to Pivotal Cloud Foundry (PCF) on Docker containers across LOBs. Implemented microservices in PCF.
Ensured successful architecture and deployment of enterprise-grade PaaS solutions using Pivotal Cloud Foundry (PCF) for initial application migration and new development.
Implemented continuous integration and deployment using VSTS (Visual Studio Team Services) to Azure.
Implemented CI/CD pipelines for deployment on multiple client Kubernetes/Azure environments.
Managed containerization using Docker by writing Docker files and setting up automated builds on Docker Hub. Installed and configured Kubernetes.
Worked with Docker Compose to schedule multiple containers, writing compose.yml files to configure and scale application services.
Designed distributed private cloud solutions using Kubernetes (Docker) on CoreOS.
Managed local deployments in Kubernetes, creating local clusters, and deploying application containers.
Utilized Rancher to provide a complete platform for operating Docker in production by creating necessary files and structures to run Docker images through a private Rancher Catalog.
Worked on deployment, configuration, monitoring, and maintenance of OpenShift Container Platform.
Used OpenShift to enhance application security by adding admin consoles on different Docker containers, accessible only from unusual port numbers.
Installed NFS servers as OpenShift storage backend and configured various storage claims for developers.
Part of a DevOps team responsible for containerization efforts and migration of Java applications to OpenShift.
Led integration efforts for building PaaS with Red Hat OpenShift and Docker, collaborating with developers on application containerization.
Integrated GitHub Actions with various cloud platforms (AWS, Azure, Google Cloud) to automate the deployment of applications and infrastructure resources.
Managed Maven project dependencies by creating parent-child relationships between projects. Used Jenkins for CI automation of daily processes, and worked with Jenkins pipelines.
Experienced in setting up upstream and downstream jobs in Jenkins and Hudson.
Maintained automated environments using Chef recipes, developing cookbooks from scratch, and writing recipes, scripts, and monitoring checks. Developed LWRPs for cookbooks.
Implemented Test-Driven Development (TDD) for writing Chef cookbooks using Test-Kitchen, BerkShelf, FoodCritic, and ChefSpec.
Created PowerShell scripts to patch DLLs across servers and automate database deployments using SSDT. Wrote shell scripts, PL/SQL stored procedures, functions, triggers, and packages.
Extensive involvement in Infrastructure as Code (IAC) using Terraform for execution plans, resource graph, and change automation.
Deployed JAVA/J2EE applications through WebLogic/WebSphere application servers in multi-clustered, high-availability environments.
Developed custom GitHub Actions to automate infrastructure provisioning and configuration management, enhancing deployment consistency and reducing manual errors.
Assisted with development using Java/JEE technologies like Spring and Hibernate as needed.
Partially involved in deploying WARs/EARs through WebLogic Application Server console.
Knowledgeable in using remote gateway tools like Citrix XA/XD, NetScaler, and NFS.
Comfortable and flexible with installing, updating, and configuring various UNIX and Windows flavors.
Implemented test-driven development and executed JUnit test plans using the Icarus Gallio platform.
Worked with Zabbix monitoring tool for monitoring applications and Linux VMs. Checked Splunk and Grafana logs on cluster servers for monitoring.
Familiar with in-house monitoring tools like VCMS, and experienced with Splunk and Zabbix for resource monitoring, network monitoring, and log trace monitoring.
Working with version control systems like Visual Studio, Subversion, and GIT. Utilized source code management tools such as Visual SVN, Tortoise SVN, SVN X, Uber SVN, Stash, Source Tree, GIT Bash, GitHub, GIT GUI, and other command line applications.
Designed and implemented CI/CD pipelines using GitHub Actions to automate the build, test, and deployment processes, ensuring efficient and reliable software delivery.
Environment: Azure, PCF, Jenkins, GIT, Docker, Kubernetes, OpenShift, Puppet, Databricks workspaces, Maven, Chef, WebLogic, WebSphere, Databricks volumes, Apache, VMware ESXi, VCAC, VMware View, Azure services, Databricks Unity Catalog, NSX, Azure admin, NetScaler, VMware Lab Manager, Databricks Ext volumes, VMware converter, P2V, V2V, VMotion, Splunk, Zabbix, RHEL.

DXC Technology - Topeka, KS March 2018 â€“ Sept 2019
DevOps Engineer
Responsibilities:
Collaborated in an operations team to implement and streamline security measures across Azure cloud environments.
Introduced and enforced best practices for security remediation, ensuring compliance with organizational security guidelines.
Analyzed Azure subscriptions across various business cases to enforce organization-specific security policies.
Gathered client requirements for existing applications and applied tailored security measures to safeguard data and resources.
Stayed updated on Microsoft Azure features, including Azure DevOps, OMS, and NSG Rules, to leverage new capabilities for operational improvements.
Utilized Azure DevOps and PowerShell scripts for automation, enhancing efficiency in managing and remediating Azure services.
Developed automation systems with PowerShell scripts and JSON templates to migrate workloads from classic to ARM-based Azure environments.
Utilized tools such as Visual Studio Community Edition, Visual Studio Code, PowerShell ISE, and SQL Server Management Studio for development and administration tasks.
Contributed to CI/CD automation using Agile methodologies in XL Deploy and XL Release, integrating Docker and Openshift into deployment workflows.
Built and implemented a CI stack using Terraform and Chef in AWS, migrating from a Puppet stack in a colocation facility.
Configured Jenkins for continuous integration and deployment to application servers like Tomcat and WebLogic.
Developed shell scripts to manage server processes and facilitated migration of applications from .Net to Python.
Monitored application performance using Splunk and Jenkins, ensuring system reliability and performance optimization.
Collaborated with development and operations teams to design and implement CI/CD pipelines for Logic Apps using Azure Pipelines, enhancing deployment automation and reducing manual intervention.
Conducted a Proof of Concept for continuous deployment pipelines using Jenkins and Jenkins Workflow on Kubernetes, evaluating deployment efficiencies.
Configured Cloud Compute systems using OpenStack on Ubuntu, collaborating with Keystone and Kubernetes for orchestration and management.
Configured Kafka metrics for monitoring Kafka system performance and managed automated build plans for delivery to non-production and production environments.
Created Azure services using ARM templates (JSON), ensuring structured and efficient deployment processes.
Configured XL Deploy and XL Release for application deployments, ensuring smooth and reliable deployment processes.
Managed RBAC policies at group and user levels based on Logical Technical Architecture (LTA) guidelines, ensuring secure access management.
Utilized Service-Now for incident and change management, facilitating efficient resolution and change request handling.
Provided status reports to business-level management and technical teams, ensuring transparency and alignment on project progress.
Troubleshooted SQL Server connection issues during incremental deployments, ensuring seamless application continuity and data integrity.
Managed source code using Git and GitHub, ensuring version control and collaboration on codebases.
Created build and release pipelines in VSTS (Azure DevOps) to implement CI/CD practices, automating deployment processes.
Implemented CI/CD pipelines with Azure DevOps to automate the provisioning and configuration of Blob Storage resources, ensuring consistent and repeatable deployments.
Implemented deployment automation using YAML scripts, optimizing efficiency for large-scale builds and releases.
Environment: .Net, Databricks Ext volumes, Azure, PowerShell, XL Release, XL Deploy, Github, Kubernetes, Kafka, GIT, Python, Redis, VMware, Jenkins, Azure admin, Databricks workspaces, Terraform, Ansible, Azure ADF, SVN, Databricks volumes, Puppet, Azure Logic apps, Databricks, Open Stack, Azure Blob, Docker, Jira, Databricks Unity Catalog, Maven, VSTS, Azure ADLF, Azure key-vault, Apache Tomcat Application Server, Salt stack

BigStep Technologies â€“ Haryana, India Jan 2016 â€“ Sept 2017
Cloud Automation Engineer
Responsibilities:
Expert in various Azure services like Compute (Web Roles, Worker Roles), Caching, Azure SQL, NoSQL, Storage, and Network services, Active Directory (AD), API Management, Scheduling, Azure Auto Scaling, and PowerShell Automation.
Migrated virtual environments from VMWare to Azure cloud using ASR.
Configured VMs in availability sets using ARM templates to provide resiliency for IaaS-based solutions and scale sets using Azure Resource Manager to manage network traffic.
Worked on Azure Storage, Network services, Traffic Manager, Scheduling, Auto Scaling, and PowerShell Automation.
Integrated Azure Key Vault with CI/CD pipelines using Azure DevOps, ensuring secure and automated handling of secrets and credentials during deployments.
Integrated Blob Storage with other Azure services, including Azure Data Factory, Azure Functions, and Azure Logic Apps, to enable seamless data processing and automation workflows.
Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets.
Utilized ARM template building for SQL Server with High-Availability for an application backend infrastructure and Virtual Machine Scale sets for the front end along with multiple servers such as reporting, scripting, and scheduling servers.
Created performance measurements to monitor resources across Azure using Azure native monitoring tools utilizing ARM templates.
Provided high availability for IaaS VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer.
Drove end-to-end deployment of various components on the Azure Platform.
Created and assigned an initiative definition to track compliance for multiple resources and resolved non-compliant or denied resources.
Automated Microsoft .NET software build, packaging, and deployment processes using TFS and VSTS.
Scripted, debugged, and automated PowerShell scripts to reduce manual administration tasks and cloud deployments.
Built Docker container scaling functionality utilizing custom scripts to analyze metrics and trigger scaling operations.
Wrote Docker files to build/push new images to the repository and pull those to run as containers.
Created continuous integration systems using SVN, Ant, Jenkins, Chef, Puppet for full automation.
Configured Continuous Integration environment using Jenkins to kickoff daily builds and automation suites with Jenkins, Maven, and GitHub.
Configured Key Vault to support integration with various Azure services, such as Azure App Service, Azure Functions, and Azure Kubernetes Service (AKS), for seamless and secure secret management.
Worked on creating Azure Blob for storing unstructured data in the cloud as blobs.
VSTS environment setup, configuration, customization of VSTS work items, and customization on VSTS process templates.
Automated the deployment and management of Unity Catalog configurations using Infrastructure as Code (IaC) tools, ensuring reproducibility and consistency across environments.
Implemented VSTS branching and merging processes for process streamlining.
Managed Windows servers, troubleshooting IP issues, and working with different support teams.
Worked on cloud platforms including PCF, AWS, Digital Ocean, IBM SoftLayer, and Google Cloud Platform.
Created and tracked tasks in Pivotal Tracker (PCF).
Contact this candidate