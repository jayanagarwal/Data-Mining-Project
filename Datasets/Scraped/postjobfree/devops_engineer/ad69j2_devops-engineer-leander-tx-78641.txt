Professional Summary:
Over *+ Years of experience in the IT industry as DevOps Engineer, Build/Release Management, Linux Administrator and Cloud Services like Amazon Web Services (AWS), Google Cloud Platform (GCP), Microsoft Azure and on DevOps life cycle such as Continuous Integration, Continuous Deployment, Configuration Management and Containerization.
• Conversant in all phases of SDLC like Analysis, Design, Development, Deploying, Testing and implemented the principles of Software Configuration Management in Agile, Scrum Kanban and Waterfall methodologies.
• Competence in designing AWS cloud models for Infrastructure as a Service (IAAS), Platform as a Service
(PAAS) and Software as a Service (SAAS).
• Experience in working with Amazon Web Services (AWS) cloud administration which includes services like EC2, VPC, ELB, S3,Lambda EBS, Elastic Beanstalk, AMI, SNS, RDS, DynamoDB, IAM, Route53, Auto scaling, CloudFront, CloudWatch, CloudTrail, CloudFormation and Security Groups.
• Experience in implementing Data warehouse solutions in AWS Redshift worked on various projects to migrate data from an on-premises database to AWS Redshift, RDS, S3 and performed folder management in S3 buckets.
• Extensively worked with AWS for deploying EC2 instances consisting of various flavors like Ubuntu server, Amazon Linux AMI, SUSE Linux, Red Hat Linux Enterprise, Microsoft Windows Server.
• Meticulously worked in configuring Azure web apps, Azure App Services, Azure Application Insights, Azure Data Factory, Application gateway, Azure DNS, Azure Traffic Manager, App services, Azure Site Recovery, key vault, Azure Resource Manager (ARM), AKS, ACR, Azure Backup and Azure Automation, VMs, App Service, Azure SQL, Blob Storage, Cosmos DB, Network Services, Subnets, VNets, Load Balancer,
• Handled Azure Content Delivery Network (CDN) configuration, and load balancers to manage data and experience in using Active Directory to manage users by providing single sign-on with a key vault.
• Created pipelines with related services, data sets, pipes in ADF to Extract, Transform, and load data from different sources such as Azure SQL, Blob storage, Azure SQL data warehouse, delayed write tools.
• Worked on Google Cloud Platform (GCP) services like Compute Engine, Cloud CDN, Google Container Registry, Google Kubernetes Engine, Cloud Load Balancing, Cloud Storage, Cloud SQL, Database Migration Service, Cloud SDK, Anthos.
• Setup GCP Cloud CDN from GCP cache locations to deliver content and drastically improve user experience by reducing latency and integrating with Cloud Monitoring and Cloud Logging for getting latency metrics.
• Expertise in using Terraform key features such as Infrastructure as a code (IAC), Execution plans, Resource Graphs, Change Automation, written new plugins to support new functionality and written Terraform templates to deploy infrastructure on multiple cloud platforms.
• Experienced with installing, executing, and working with Docker containerization tool and used Docker to run different software packages on containers to improve the Continuous Delivery framework.
• Exposed to various components of Docker like Docker Engine, Docker Hub, create images and pushed those images to the registry, and set up a registry for handling multiple images for domain configurations.
• Exposure to Mesos, Marathon environment for application deployments. Proficient knowledge with Helm charts to manage and release of helm packages
• Expertise in Kubernetes to automate the operations of application containers across clusters of hosts and scheduled, deployed, and managed Kubernetes objects and controllers onto cluster nodes.
• Experienced in Azure Kubernetes service to produce production-grade Kubernetes that allow enterprises to reliably deploy and run containerized workloads across private and public clouds.
• Experienced in Kubernetes to deploy, scale, and manage Docker containers with multiple namespaces versions and a good understanding of OpenShift Platform in managing Docker Containers and Kubernetes Clusters.
• Skilled in Kubernetes to orchestrate deployment, scaling, clustering, and management of containerized Docker applications as Pods and used Kubernetes Clusters to support automatic high availability, load balancing, health checking and failover.
Sameera F
Sr. DevOps/Cloud Engineer
Sameera F
+1-936-***-****
ad69j2@r.postjobfree.com
• Experience working with Node.js to setup Web API’s using JavaScript, Used deploying applications on Node JS
• Experienced in writing Ansible playbooks using YAML for provisioning virtual and physical instances, configuration management, patching and software deployment on cloud environments and to provision the infrastructure and used Ansible Control server to deploy playbooks to the target machines to reduce the downtime
• Experience in setting up the Chef Workstation, Chef Repo as well as Chef Nodes, created multi-tiered, scalable, and stable chef cookbooks to solve current and future requirements.
• Knowledge of puppet as a Configuration Management tool, automating repetitive tasks, quickly deploy critical applications, proactively managing change ERB templates.
• Set up Jenkins, GitLab CI, GitHub actions, Bamboo for Continuous Integration, and for end-to-end automation for all build and deployments by setting up various pipeline jobs for the various test environment. Configured and Managed Jenkins for running the automated Builds and Deployments to CI Dev Servers
• Proficiency in developing the Pom.xml, Gradle.xml, Build.xml files for Maven, Gradle, and ANT projects by integrating with the CI dashboard and managing the Nexus and JFrog artifactory for build artifacts.
• Hands-on Experience in using SonarQube and Selenium for code quality inspection and Junit for unit testing and integrating with Jenkins to run unit tests and to review the code and analyze it.
• Setup code repositories like SVN, GitHub, Bitbucket for performing various build and release management activities like Merging, Branching, Tagging and managed plug-ins in Jenkins for automatic code checkout.
• Installed, Configured, Managed Monitoring Tools such as Splunk, AppDynamics, Prometheus, Dynatrace, and Grafana to collect the system metrics and log tools like Kibana and Log DNA for application-level logs.
• Worked on setting up Splunk to capture and analyze data from various layers Load Balancers, Web servers and application servers and built custom dashboards to view the logs and metrics.
• In-Depth experience in configuring and querying the database PostgreSQL, Oracle, MySQL, and MS SQL, Cassandra, MongoDB, Cosmos DB, Snowflake Server Database.
• Extensive experience in the deployment of applications on servers like JBoss, WebLogic, and WebSphere. Also, used Tomcat, Wildfly, and IIS for web application deployment.
• Skilled with Python, Bash/Shell, PowerShell, Ruby, Perl, PowerShell, JSON, YAML, Groovy. Developed Shell and Python Scripts to automate day-to-day administrative tasks & automation of the build and release.
• Experienced in using Bug tracking tools like Jira, Bugzilla, Remedy and ServiceNow to track all issues related to the software development lifecycle.
Technical Skills:
AWS Cloud Services EC2, VPC, S3, Route53, SNS, IAM, CloudFront, EBS, ELB, ECS, EKS, Lambda, CloudFormation, CloudFront, CloudWatch, Auto Scaling, SQS, Elastic Beanstalk, etc.
Microsoft Azure VM, Active Directory, ARM, App Service, AKS, ACR, Blob storage, Azure SQL, Azure Monitor, Azure Functions, Cosmos DB, etc. Google Cloud Platform Compute Engine, Cloud Functions, BigQuery, GCR, GKE, Data Proc, DataFlow, App Engine, Knative, Cloud storage, Cloud Datastore, etc. Infrastructure as a Code (IaaC) CloudFormation, ARM, Terraform Containerization Tools Docker, Kubernetes, OpenShift Configuration Management Tools Chef, Ansible, Puppet Build Tools Maven, Ant, Gradle
Continuous Integration Tools Jenkins, Bamboo, GitLab CI, GitHub Actions, TeamCity SCM/Version Control Tools GitHub, SVN, Bitbucket
Artifactory Repositories Sonatype Nexus, JFrog
Logging and Monitoring Tools Splunk, Prometheus, Grafana, Log DNA, ELK, AppDynamics, Dynatrace, Data Dog, Sysdig
Databases Oracle, MongoDB, SQL Server, MS SQL, MySQL, NoSQL, Cosmos DB, PostgreSQL, Cassandra, Snowflake
Scripts/ Languages HTML, Bash, Shell Scripting, Ruby, Groovy, YAML, Python, Java, Perl, PL/SQL
Bug Tracking Tools Jira, Bugzilla, HP-ALM, Remedy, ServiceNow Virtualization Tools Oracle VM Virtual Box, VMware, Vagrant Servers Apache Tomcat, WebLogic, WebSphere, Jboss, Wildfly, IIS, and Nginx Operating System UNIX, Linux (Ubuntu, RHEL, Centos), Windows, MacOS Professional Experience:
PapaJohns, KY March 2022-Present
Sr. DevOps Engineer
Description: I am responsible for infrastructure creation to deploy micro services hosted on the Google Cloud. My day-to-day responsibilities include developing Terraform modules to support IaC, Troubleshooting Build and Deployment issues, monitoring the deployments and providing support to the existing infrastructure. Responsibilities:
• Used Google stack driver for monitoring the logs of both Google Kubernetes Engine (GKE) and GCP instances and configured alerts from Stack driver also setting up VPN and configured Network Access for firewalls, routing and network tags for migrating Google Compute Engines.
• Set up auto scaling of the instance group for DEV/QA environments using GCP CLI (Command line tools) and GCP cloud environments and provided proof of concept (POC) on creating server-less architecture with GCP.
• Designed and developed event triggered data pipeline based on Cloud Pub/Sub for ingestion of the PII and non-PII data to the landing area on the Google Cloud Storage (GCS) buckets
• Worked on Azure (IaaS) by creating Azure Virtual Machines, storage accounts, VHDs, storage pools, migrating on-premise servers to Azure and creating availability sets in Azure.
• Worked on Azure Fabric, Microservices and Docker containers which involves in setting up Terraform CircleCI build used Azure Internal Load Balancer to provide high availability for IaaS VMs and PaaS role instances.
• Worked on developing Terraform templates to automate the Azure IaaS infrastructure using Terraform modules and deployed virtual machine scale sets in production environment.
• Used Terraform to build staging, production environments and integrated Azure Log Analytics with Azure VMs for monitoring the log files, store them and track metrics.
• Worked on Containerization of applications with Kubernetes cluster and played a key role in building Platform- as-a -Service (PaaS) environment for web servers and automated Kubernetes cluster for Ansible Tower.
• Worked on Kubernetes and Docker for build, test, deploy and containerizing the CI/CD application to deploy on cloud and managed container replicas on node clusters using Kubernetes.
• Responsible for installation and configuration of latest Docker version to Datacenter including universal control plane (UCP) and Docker trusted registry (DTR) on a cluster of host’s environments.
• Developed Azure Devops pipelines to drive all microservices builds out to the Docker registry and deployed on Kubernetes, created pods, and accelerated using Kubernetes.
• Created Web-Apps (PaaS solutions) on Azure portal for deploying web applications using Azure DevOps pipelines.
• Implemented Azure DevOps Pipelines for CI/CD setup, deployed applications automatically by enabling the triggers to deploy and automated the Azure DevOps pipelines from building the packages to deployments by archiving, zipping, pushing to Azure artifacts and cutting a release in GitHub.
• Involved in creating the customized Agents for building the pipelines with various depended packages and integrated with the dev portal and created the firewall rules in azure for deploying the applications from Azure DevOps.
• Deployed and configured Ansible Server, experience in writing Ansible Modules to automate repetitive tasks, deploying critical applications, managing the changes in instances, and managing multiple nodes.
• Worked on managing Ansible Centralized Server and created playbooks to support various middleware application servers and configuring the Ansible tower as a configuration management tool to automate repetitive tasks.
• Automated weekly releases with Maven scripting for Compiling Jar/War/Rar files by Debugging and placing builds into Maven Repository. Utilized maven plug-in to execute Python Scripts.
• Containerized services in Docker for Confidential environment by installing and configured the JFrog repository manager for sharing the artifacts within the company.
• Configured the monitoring solutions for the project using New Relic for application performance monitoring. Also developed and maintain New Relic scripts for API and scripted browser monitors.
• Wrote customized deployment process templates for deploying source bits to Dev/QA/UAT/PROD Environments by developing PowerShell scripts to automate the Azure cloud creation including end-to-end infrastructure and VMs.
• Imported and managed with various corporate applications into GitHub code administration repo and Managed GIT.
• Implemented protected branching policy on different branches and integrated CI tool with GitHub to automate build process. Experience working with inventory management system Github to orchestrate various codes.
• Involved in server-side administration by deploying Web servers like Microsoft IIS, Apache HTTP, Nginx and Httpd on-to the cloud-based servers.
• Installation, configuration and monitoring of servers, databases by Oracle Enterprise Manager and Wrote Oracle Stored Procedures, functions, Triggers using optimizing techniques to reduce load on database.
• Deployed Prometheus with Grafana to monitor the Infrastructure and Kubernetes cluster and configured alerts firing when different conditions met.
• Developed metrics dashboards and advanced filters in JIRA to provide end-users and business leadership with performance metrics and status report.
Environment: GCP, Azure, Terraform, Kubernetes, Docker, Azure DevOps, VSTS, Git, Ansible, Maven, Python, Git, New Relic PowerShell, Nginx, Apache, Oracle, Prometheus, Grafana, Jira. CarMax, VA July 2021-March 2022
Sr. DevOps Engineer
Description: CarMax is a used vehicle retailer based in the United States. As a Sr. Cloud DevOps Engineer for CarMax Auto Finance (CAF) Technology, I’m a part of their customer data management team and I am responsible for migrating the on-premises infrastructure and web applications to multi-cloud environments and managing the cloud infrastructure for maintaining the billing and payments process along with building pipelines for automated build and deployments and monitor the infrastructure and applications.
Responsibilities
• Configured and managed various AWS IaaS offerings including EC2 instance creations using AMIs in a VPC, RDS, S3 buckets, Glacier, CloudWatch, CloudTrail, CloudFront, SQS, SNS, and Route 53.
• Designed roles and policies for new users using AWS Identity and Access Management (IAM) and utilized special Security groups, IAM roles and edited policies for Dev and Prod users to manage access to resources.
• Worked in the Billing and Payments team to set up live alert systems using messaging queue tools such as Kafka, as well as providing streams API for real-time and Connectors API for easy integration within AWS.
• Implement Re-platform migration strategy to migrate applications from on-premise infrastructure to AWS using Server Migration Service, created CloudFormation templates for provisioning of the resources.
• Created Amazon machine images (AMIs) using Packer and took EBS volume snapshots at regular intervals to store the files in S3 buckets using AWS Lambda functions which provide a serverless environment.
• Used Amazon RDS to perform basic Database Administration and managed networks using Security Groups for instance and worked on AWS lifecycle management of data stored and later pushed it to Glacier.
• Worked on Auto Scaling for EC2 instances to provide high availability at the lowest feasible cost, creating scaling plans based on application load, metrics, and events using CloudWatch.
• Created Terraform templates to automate the Azure IaaS virtual machines using terraform modules and deployed virtual machine scale sets in a production environment.
• Manage Azure Infrastructure with Web roles, Worker roles, VM, Azure SQL, Azure Storage, Azure AD Licenses, VM Backup and recovery from recovery services vault using Azur PowerShell and Azure portal.
• Configured Azure VNets, subnets, DHCP address blocks, network settings, DNS, security policies, routing and deployed Azure IaaS VMs and cloud services (PaaS role instances) into secure VNets and subnets.
• Extensively used Docker for containerization, running, shipping, and deploying the application securely to speed up the build and release processes and automated docker image build by creating Dockerfiles.
• Implemented build stage to build the microservices and push the docker container image to the private docker registry and worked on Docker containers to create images of the applications.
• Used Labels, Selectors, ConfigMaps and Secrets to set up communication between Kubernetes objects and ReplicaSets for the pods to maintain a high availability and used Kustomize to customize the k8s objects.
• Managed Kubernetes charts using Helm and created reproducible builds of the Kubernetes applications, templatize Kubernetes manifests, provide a set of configuration parameters to customize the deployments.
• Manage local deployments in Kubernetes, create local clusters and orchestrate the deployment, load balancing and management of Docker Containers with multiple namespace versions.
• Created CloudFormation templates to implement EKS cluster in AWS using Kubernetes modules and uploaded the templates into an S3 bucket and created GitLab CI pipelines to drive all microservices builds out to images stored in ECR and then deployed on EKS configuring security groups to allow traffic to pass to EKS.
• Automated various infrastructure activities like configuring resources, application server setup, Stack monitoring using Ansible Playbooks and integrated Ansible with GitLab CI for Continuous Deployment.
• Implemented Ansible Tower for complex network deployments by adding control and triggered Ansible playbooks from the Terraform instance.tf file as a local-exec call.
• Wrote Ansible Playbooks using Python SSH as a wrapper for managing configurations of servers, Nodes, Test Playbooks on Azure VMs using Python and written Ansible roles to deploy an Elastic Beanstalk application.
• Configure GitLab masters and slaves on multiple machines and integrated Git with GitLab pipelines to automate builds using triggers such as pull requests, tags and commits for building CI/CD pipelines.
• Set up SCM polling for scheduled builds with GitLab CI and Maven as a built tool and used Selenium for running unit tests of the code and maintained JFrog Artifactory to store binary Jar, War files.
• Worked on Bitbucket and Git for managing, hosting the source code to private Git/Bitbucket Repositories, and worked with merging, Branching, Rebasing and Configuration Management of SCM.
• Set up CloudWatch to monitor the cloud infrastructure and used the generated metrics for analyzing the performance of the applications and configured SNS for alerting the users on crossing the metric thresholds.
• Deployed and Configured ELK stack (Elasticsearch, Logstash and Kibana) for log analytics and log management within EC2/ELB to monitor server logs, application logs and clickstreams.
• Used monitoring tool AppDynamics to improve performance, which helps to get the visibility and business context to meet business demands and implemented Spark communication tool chatbot for the triggering alerts.
• Worked on shell scripts for loading data from Oracle to Cassandra, and configured performance tuning and monitoring for Cassandra Read and Write processes for fast I/O operations and low latency time.
• Configure and deploy Java and J2EE applications into application servers such as WebLogic and Apache Tomcat and troubleshoot issues encountered during production.
• Composed Groovy scripts for setting up LDAP configuration for GitLab CI using security matrix and developed automated scripts and frameworks using Java, Groovy script.
• Written Bash, Python, and Shell scripts to automate application and system management activities. Scripts provided functionality such as application startup and shutdown, health checks, and website management.
• Used Jira as a bug tracking tool by triggering the issues and distributing the issues to developers to fix them. Created workflows, custom screens and custom fields. Environments: AWS, Azure, Kafka, Terraform, Docker, Kubernetes, Ansible, GitLab CI, Maven, Git, Selenium, JFrog, Bitbucket, NodeJS, AppDynamics, Spark, Oracle, Cassandra, WebLogic, Apache Tomcat, Groovy, Java, Bash, Python, Shell, Jira.
Capital One, TX Dec 2020-July 2021
Cloud\DevOps Engineer
Description: Capital One Financial Corporation is an American bank holding company specializing in credit cards, auto loans, banking, and savings accounts. As a DevOps/Cloud engineer, I was involved in providing support to resolve issues pertaining to an online web application that tracks the Rewards for customers. I created and automated infrastructure on the cloud and was responsible for building, maintaining, monitoring web applications when new updates/microservices are added using various DevOps tools in CI/CD. Responsibilities
• Managing AWS infrastructure and configuration, designing, cloud-hosted solutions, specific AWS product suite experience and hands-on experience in designing and deploying AWS solutions using EC2, S3, EBS, storage blocks, Elastic Load Balancer (ELB), VPCs, subnets, Auto scaling groups, AMIs.
• Configuration of secure-cloud configuration, CloudTrail, AWS Configuration, Cloud security Technologies like VPC, Security Groups and cloud-permission systems (IAM) while application logs to S3 and created alarms based on applications exception using cloud watch logs and deployed AWS resources by writing cloud formation templates.
• Implemented and maintained production and corporate servers/storage using AWS CloudWatch and Splunk and assigned AWS elastic IP addresses, provisioned the highly available EC2 Instances using Terraform and cloud formation to support new functionality in Terraform using python.
• Used AWS Beanstalk for deploying and scaling web applications and services developed with Java, PHP, Node.js, Python, Ruby, and Docker on familiar servers such as Apache, and IIS
• Implemented GCP services like compute engine, cloud load balancing, cloud storage, Persistent Disk, Cloud Filestore, Cloud Bigtable, Datastore, Cloud SQL, stack driver and maintaining the user accounts
(IAM), Cloud SQL, Cloud DNS, VPC, RDB, Cloud Datastore, Cloud Bigtable, Cloud Pub/Sub.
• Setup GCP Firewall rules to allow or deny traffic to and from the VM's instances based on configuration and used GCP cloud CDN to deliver content from GCP cache locations, drastically improving latency, and troubleshooting Linux Systems identifying Hardware, software (both OS and Application level), and networking Issues
• Worked on GKE Topology Diagram including masters, slave, RBAC, helm, kubectl, ingress controllers GKE Diagram including masters, slave, RBAC, helm, kubectl, ingress controllers
• Created Dockerfile for building Docker Images, script to build and push Docker images in Docker Hub, Docker- compose.yaml file templates to deploy images in Docker containers managed by Kubernetes
• Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins, also used Docker containers for eliminating a source of friction between development and operations.
• Worked on Jenkins file with multiple stages like checkout a branch, building the application, testing, pushing the image into GCR, deploying to QA, Acceptance testing, saving build artifacts to Jfrog and finally Deploying.
• Implemented load-balanced, auto-scaling container platform service using Kubernetes in Google Cloud Platform infrastructure, microservices container orchestration while Managing Kubernetes charts using Helm and Created builds of the Kubernetes applications, managed Kubernetes manifest files and releases of Helm packages.
• Configured applications that run multi-container Docker by using Docker-Compose using YAML script and used Kubernetes to manage containerized applications using its node, Config Maps, selector
• Experience in managing Ansible Playbooks with Ansible roles, used file module in the playbook to manage files on remote systems and created inventory in Ansible for automating the continuous deployment.
• Implemented and designed Google-cloud virtual servers by Ansible roles to ensure deployment of web apps, used file module in Ansible to edit files on remote systems and used Ansible Tower for running playbook streams.
• Creating templates and jobs in the Ansible tower required for the deployment of java applications to the servers in different environments (Dev, QA, Stage and Production) and automating them for the periodic releases.
• Deployed and monitored scalable infrastructure on AWS & configuration management using Ansible, also worked on Installation and configure Mongo DB Cluster nodes on different AWS EC2 instances.
• Configured Jenkins, used as a Continuous Integration (CI) tool for Installing and configuring Jenkins Master and different build slaves and Automatized Java application builds using Maven.
• Created a Continuous Delivery (CD) framework using Jenkins, Maven in multiple environments and coordinated developers with establishing and applying appropriate branching, naming conventions using GIT SCM.
• Installed, Configured, Managed Monitoring Tools such as Splunk, AppDynamics and forwarded system stats to Splunk indexer, also centralized monitoring and logging for the systems that are running on the cloud(s) and on- premises, using tools such as AppDynamics and Splunk and Installed monitoring tools AppDynamics and Splunk.
• Responsible for writing, executing shell scripts, building scripts and automated solutions using scripting languages such as Groovy, Perl, Python, JSON, Ansible to configure various DevOps tools.
• Implemented open-source Testing tools like NodeJS, Protractor, Selenium Web driver and Source Tree and worked on SonarQube and created custom code quality rules using XPATH query for PLSQL scripts.
• Involved in setting up JIRA as a defect tracking system, creating complex JIRA workflows including project workflows, field configurations, screen schemes, permission schemes and notification schemes. Environment: AWS, GCP, VMware, CloudFormation, Maven, Jenkins, Terraform, Kubernetes, Docker, Ansible, Linux, Unix, Apache Tomcat, AppDynamics, Splunk, GIT, GitHub, Groovy Bash, Python, Selenium, Jira. Citibank, Bangalore, India August2016-Nov2019
Build and Release Engineer
Description: Citibank Financial Services is a multinational bank holding company specializing in credit cards, auto loans, banking, and savings accounts with operations primarily in the United States. I was part of the Analytics team, and I was responsible for the build and automation process for continuous deployment. Maintaining web server, integrating source, control systems, and building software with open-source components and dependencies. Responsibilities
• Involved in Data Architecture and Application Design using Cloud and Big Data solutions on AWS, Azure.
• Leading the effort for migration of Legacy-system to Microsoft Azure cloud-based solution. Re-designing the Legacy Application solutions with minimal changes to run on the cloud platform.
• Built the data pipeline using Azure Service like Data Factory to load the data from Legacy SQL server to Azure DataBase using Data Factories, API Gateway Services, SSIS Packages, custom .Net and Python codes.
• involved in projects that move to production and work closely with the Development, Quality Assurance and Management teams to ensure cross-communication and confirmed approval of all production changes.
• Built end-to-end CI/CD Pipelines in Jenkins to retrieve code, compile applications, perform tests and push build artifacts to Nexus.
• Created, Designed, and developed container-based deployments using Docker images containing Middleware and Applications together and evaluated Kubernetes clusters for Docker container orchestration.
• Troubleshoot the build issue during the Jenkins build process and resolve system issues and inconsistencies in coordination with quality assurance and engineering teams.
• Implemented automation of Builds and Release management using Jenkins to achieve CI/CD in a project.
• Created Puppet automation with multiple modules like MySQL, HTTP collectors and Schema registry to install and configure EC2 instances to implement release schedules, created Rollout Plans, tracked the Project Milestones.
• Worked on Installing, configuring, upgrading, and managing Puppet Master, Agents and Databases. Integration of Puppet with Apache and Passenger and experience in working with Puppet Enterprise and Puppet Open Source.
• Experienced in authoring pom.xml files, performing releases with the Maven release plugin, and managing artifacts in the Sona type NEXUS repository.
• Solid experience in developing and deploying the applications on Tomcat Apache servers and maintaining Load balancing, High availability, and Failover.
• Written Bash shell scripts for getting information about various Linux servers and prepared Ruby codes, programming of web applications and testing services on daily basis.
•
Contact this candidate