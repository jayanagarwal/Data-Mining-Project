NADEEM.SHAIK
Sr. Cloud DevOps Engineer Sr. Systems Analyst Release Engineer Automation Engineer
Email: ad5w37@r.postjobfree.com
Phone: +1-918-***-****
Location:Wichita, KS

With 7+ years of experience in the IT sector, my expertise spans a variety of cloud technologies such as Azure, AWS, and GCP. Additionally, I have substantial skills in DevOps, Site Reliability Engineering (SRE), release management, and managing Linux systems. I am well-versed in the principles of CI/CD, including Continuous Integration, Continuous Delivery, and Continuous Deployment.

●Accomplished in managing multi-cloud environments, ensuring redundancy and failover capabilities across AWS, Azure, and Google Cloud.
●Extensive expertise in DevOps tools such as Git, Jenkins, Ansible, Chef, Puppet, Ant, Maven, Gradle, Artifactory, Docker, and Kubernetes.
●Hands-on experience with AWS services including EC2, ELB, VPC, Route 53, RDS, S3, IAM, and CloudWatch. Skilled in implementing AWS Lambda workflows using Python for interaction with EC2 instances and S3 buckets.
●Architecting and configuring public/private cloud infrastructures on AWS, utilizing services like EC2, Elastic Load Balancers, Elastic Container Service (Docker Containers), S3, RDS, DynamoDB, VPC, Direct-Connect, Route53, CloudWatch, CloudFormation, and IAM.
●Strong background in cloud security practices to ensure compliance with industry standards and regulations.
●Expertise in Azure cloud services including IIS, Azure Active Directory (AD), Azure Resource Manager (ARM), Azure Storage, Blob Storage, Azure VMs, SQL Database, Azure Functions, Azure Service Fabric, Azure Monitor, and Azure Service Bus.
●Proficient in integrating applications with Azure AD, designing multi-site and hybrid networks, setting up Site-to-Site and Point-to-Site VPNs, and utilizing Azure Site Recovery and Azure Backup.
●Deployment and management of VMs on Azure, including virtual networks, Azure AD, and SQL.
●Extensive track record in Azure Cloud Services (PaaS & IaaS), Azure Synapse Analytics, SQL Azure, Data Factory, Azure Analysis Services, Application Insights, Azure Monitoring, Key Vault, and Azure Data Lake over 4+ years.
●Utilization of Google Cloud Platform (GCP) services including Compute Engine, Cloud Functions, Cloud DNS, Cloud Storage, and Cloud Deployment Manager, with expertise in SaaS, PaaS, and IaaS concepts.
●Specialized in employing Terraform for Infrastructure as Code (IaC) to construct and manage multi-cloud setups across AWS and Azure, with a focus on creating reusable modules and templates for effective cross-cloud dependency management.
●Integrated Terraform with Python scripting to introduce new features and manage a wide range of resources, including physical machines, virtual machines, and containers, while also improving infrastructure reliability and scalability through innovative AWS resource deployments such as EMR clusters, S3, and ECS.
●Terraform CLI proficiency for creating and managing Terraform configurations and state files.
●Managed Docker container clusters on GCP, utilizing Kubernetes for scalable application management.
●Proficient in Kubernetes for orchestrating applications, managing resources like Pods and Nodes, and leveraging Helm for application deployment.
●Experienced in microservice architecture, utilizing Docker and Kubernetes across cloud platforms (AWS EKS, Azure AKS, GCP GKE) for robust application deployment and management, ensuring scalability, load-balancing, and self-healing systems.
●Designed, implemented, and maintained Docker-based containerization strategies for microservices and monolithic applications, developing Docker files and Docker Compose configurations to define container images and multi-container applications.
●Proficient in CI/CD integrations, employing Jenkins and GitHub Actions for automated workflows, and utilizing advanced Kubernetes features for comprehensive application deployments.
●Orchestrated containerized workloads on Databricks using Kubernetes or Docker Swarm for streamlined deployment and scalability.
●Expertise in writing custom Ansible modules and plugins to extend automation capabilities, tailored to specific infrastructure and application requirements, fostering adaptability and versatility in automation tasks.
●Worked with Ansible and Ansible Tower as Configuration management (CM) tools, to automate repetitive tasks, and quickly deploy critical applications.
●Proficient with Ansible Playbooks, modules, and roles. Wrote playbooks with Python SSH as the wrapper to manage AWS nodes.
●Implementing Infrastructure as Code (IaC) principles using Chef to manage infrastructure through code, along with expertise in Chef resources for system components management.
●In-depth understanding of Chef's RBAC system for user access control within the Chef organization. Helm expertise, including the customization of chart configurations and parameterizing deployments.
●Specialized in the deployment and management of a wide range of monitoring tools, including Datadog, Nagios, Splunk, ELK (Elasticsearch, Logstash, Kibana), CloudWatch, Prometheus, Grafana, and Dynatrace, to monitor infrastructure health, detect network outages, and protocol failures.
●Implemented Kafka-based solutions for log aggregation, metrics collection, and distributed tracing, enabling comprehensive monitoring and analysis of system behavior.
●Developed and maintained Datadog monitoring for Kubernetes clusters, ensuring real-time visibility into container performance and health.
●Proficient in Linux server installation, configuration, maintenance, and troubleshooting across various distributions including CentOS, Ubuntu, and Red Hat.
●Experience in managing and securing Linux-based infrastructure in cloud environments such as AWS, Azure, and Google Cloud Platform.
●Hands-on experience with SQL and NoSQL databases, including MongoDB, Cassandra, and Redis
●Led implementation and management of JFrog Artifactory and Sona type Nexus, crucial components in modern DevOps workflows.
●Proficient in Go programming language, leveraging its efficiency and concurrency features to develop robust and scalable microservices and backend systems.
●Developed custom tooling and automation scripts in Go to streamline deployment processes, reducing manual intervention and increasing deployment frequency.
●Showcased adeptness in configuring Jenkins for multi-system environments and Groovy scripting for tailored pipeline processes.
●Experience with Build Management Tools Ant and Maven for writing builds. XML and pom. XM.
●Knowledge in using Build automation tools like MAVEN, Bamboo, Gradle, and ANT for the building of deployable artifacts such as war & ear from source code.
●Expertise in virtualization technologies such as VMware vSphere and KVM/QEMU, including installation, configuration, and administration of virtual machines and hypervisors.
●Utilized Microsoft System Center Configuration Manager (SCCM) in conjunction with PowerShell scripting to streamline deployment and updating processes for various applications, systems, and tools.
●Advanced proficiency in automating and optimizing DevOps workflows using a diverse set of scripting and programming languages, including C, C++, Perl, Shell scripting, Bash, Groovy, Python, Golang, Ruby, Java, and, across Linux, Mac, and Windows systems.
●Mastered CI/CD automation and security practices using GitHub Actions, GitLab CI/CD, Hashicorp Vault, and Azure Key Vault, significantly enhancing software deployment, secret management, and compliance across Linux environments.

EDUCATION,
●MASTERS IN COMPUTER SCIENCE - Wichita state university, wichita - KS - 2023

TECHNICAL SKILLS:
Cloud Environment
Amazon Web Services (AWS), Azure, Google Cloud Platform (GCP)
Platforms
C, C++, Java/J2EE
Scripting
Shell, Python, Ruby, PowerShell, YAML, Groovy, Bash
Web Technologies/Frameworks
HTML, JSP, JSTL, JavaScript, CSS, Servlets
Version Control Tools
SVN (Subversion), Git, CVS, GitLab, GitHub, BitBucket
Build Tools
Ant, Maven
Configuration Management
Chef, Puppet, Ansible, Terraform
Continuous Integration Tools
Jenkins, UDeploy, Azure-Devops
Containerization Tools:
Docker, Docker Swarm, Kubernetes, AWS ECS, Apache Mesos, OpenShift
Monitoring Tools
Nagios, Splunk, Cloud Watch, ELK Stack
Artifactory Repositories
Nexus, JFrog, SonarQube
Methodologies
Agile, Scrum, Waterfall
Operating Systems
Unix/Linux (Red Hat, CentOS, SUSE), Ubuntu, Windows (All Major Versions)
Databases
Oracle, MS SQL Server, MySQL, DynamoDB, MongoDB, NoSQL, PostgreSQL
Virtualization
Virtual Box, VMWare, Windows Hyper-V
Ticketing Tools
JIRA, Bugzilla, and Confluence

PROFESSIONAL SUMMARY:
FISERV SOLUTIONS, Atlanta, GA JULY 2023- PRESENT Sr. Cloud DevOps Engineer/Platform Engineer
Roles and Responsibilities:
●Designed and deployed numerous apps that use practically the entire AWS stack, such as EC2, Route53, S3, RDS, DynamoDB, SNS, SQS, LAMBDA, and REDSHIFT, with a focus on high availability, fault tolerance, and auto-scaling in AWS cloud formation.
●Enhanced login authentication by configuring AWS Identity and Access Management (IAM) Groups and Users. Using a policy generator, I provided policies to groups and assigned various permissions in accordance with the needs and also provided an Amazon Resource Name (ARN).
●Experienced in Linux system administration, including installation, configuration, and maintenance of servers in AWS environments, ensuring optimal performance, security, and reliability.
●Worked on AWS CloudWatch, CloudFormation, Cloud Trail services and CloudFront to setup and manage cached content delivery.
●Familiar with blue-green deployment strategies on AWS to minimize application downtime during updates & Worked on several projects to migrate data from one database to AWS Redshift, RDS, ELB, EMR, DynamoDB, and S3.
●Implemented AWS Code Pipeline and created Terraform CloudFormation JSON templates for infrastructure as code.
●Used Terraform and Python, a Docker container, and Service Orchestration, and automated provisioning and repetitive activities.
●Worked on Terraform for building and versioning of Infrastructure. Worked with Terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation to build staging and production environments.
●Provisioning servers/instances using Terraform. Written Terraform code to build Development and Production environment in AWS Cloud.
●Used Terraform to deploy the infrastructure necessary to create development, test, and production environments for a software development project. Reduced deployment times by 8% by automating resource provisioning and configuration.
●Worked on Container Orchestration tools like Docker & Kubernetes, in-order to build docker images from docker files and run the containers in the docker engine, whereas these clusters are securely managed by Kubernetes.
●Build Docker Images and run containers in the testing Environment Experience with Docker Swarm for orchestration of Docker containers.
●Utilized GitHub Actions to build and push Docker images to container registries, and deploy containers to Kubernetes clusters, streamlining container management and deployment workflows.
●Developed custom Kubernetes controllers in Go to automate resource provisioning and configuration management tasks, streamlining the deployment process.
●Designed and integrated Kafka into the distributed messaging system, ensuring seamless real-time communication between microservices deployed on Kubernetes clusters.
●Configured custom dashboards in Datadog to visualize key performance metrics for microservices, improving observability and troubleshooting efficiency.
●Integrated Datadog with AWS CloudWatch to centralize monitoring and alerting, resulting in a 25% reduction in monitoring tool sprawl.
●Familiarity with monitoring and logging solutions such as CloudWatch, ELK stack, or Prometheus/Grafana for proactive monitoring, troubleshooting, and performance optimization.
●Ability to troubleshoot and resolve issues related to AWS infrastructure, applications, and services, leveraging AWS support resources, documentation, and community forums.
●Used databases such as MYSQL DynamoDB, IBM DB2 and Elasticache to orchestrate and manage database administration for various applications.
●Automated deployment processes using Linux scripting languages like Bash and AWS services such as CloudFormation and CodePipeline, streamlining the provisioning and configuration of cloud resources.
●Utilized Go's built-in support for concurrency to develop highly scalable and responsive APIs for managing cloud resources.
●Implemented CI/CD pipelines with Jenkins/GitLab CI for automated Databricks cluster and application deployment, enhancing agility and reducing manual errors.
●Integrated Ant and Maven with Jenkins to run to automate the build process as a part of continuous delivery.
●Integrating Defect tracking tool JIRA with Confluence and Jenkins CI server for identifying, logging and, tracking and documenting defects/issues in real-time.
●Proficient in setting up, configuring, and utilizing GitHub Actions to automate various aspects of the software development lifecycle.Proficiency in deploying applications to various platforms and cloud services, such as AWS, Azure, and Heroku, using GitHub Actions.
●Integrated Maven into the CI/CD pipeline, improving build efficiency and ensuring consistent and reproducible builds.
●Effective collaboration and communication skills, working closely with cross-functional teams to design, deploy, and maintain cloud infrastructure that meets business requirements and supports agile development processes.

COLLEGE BOARDS, Overland park, MO MAY 2022 - JUNE 2023
DevOps Cloud Engineer / Automation Engineer
Roles & responsibilities:
●Developed, executed, and supervised cloud infrastructure that is extremely adaptable and accessible on Azure Cloud and Google Cloud Platform (GCP), ensuring optimal use of resources and low expenses.
●Supervised the migration of an outdated web application to Azure, leveraging Azure RDS for database services, Azure Blob storage for storage, and Azure virtual Machine(VMs) for processing, resulting in improved operational efficiency.
●Passionate on google cloud platform (GCP) services like compute engine, cloud load balancing, cloud storage, cloud SQL, stack driver monitoring and cloud deployment manager.
●Led and orchestrated the comprehensive migration initiative from Google Cloud Platform (GCP) to Microsoft Azure, overseeing the intricate transition of infrastructure, applications, and services to the Azure cloud environment.
●Conducted post-migration reviews and optimizations to fine-tune Azure resources and configurations, ensuring cost-efficiency, scalability, and resilience in the migrated environment.
●Led the assessment and analysis of existing Linux-based infrastructure on Google Cloud Platform (GCP), evaluating dependencies and compatibility for migration to Microsoft Azure..
●Integrated Terraform with version control systems such as Git for managing infrastructure code, enabling versioning, collaboration, and auditability throughout the migration project.
●Employed Terraform modules adeptly to architect Azure infrastructure as code (IaC), ensuring meticulous control over deployments and facilitating seamless adaptation to Azure's dynamic ecosystem.
●Leveraged Terraforms multi-provider capabilities to seamlessly transition infrastructure components from GCP to Azure while ensuring compatibility and minimizing disruptions.
●Optimized Docker files and to enhance performance and minimize image size, ensuring efficient deployment across GCP and Azure environments.
●Implemented a multi-cloud containerization strategy using Docker, enabling consistent application delivery across multiple cloud environments such as Google Cloud Platform (GCP) and Microsoft Azure.
●Dedicated to delivering excellent Docker orchestration and Docker containerization using Kubernetes . Worked on setting up Docker containers & deployed through Jenkins.
●Demonstrated prowess in Kubernetes, configuring it as the premier solution for container orchestration on Azure. Employed Kubernetes deployment strategies to engineer resilient, auto-scalable architectures, thus guaranteeing uninterrupted service availability throughout the migration process from GCP to Azure.
●Experienced and accomplished in container-based deployments using Docker and Kubernetes and developing CI/CD systems with Jenkins on Google's Kubernetes container environment.
●Configured and provisioned Linux-based virtual machines (VMs) and containers on Azure, ensuring seamless transition and optimal resource utilization.
●Setup Datadog's Kubernetes integration to automatically detect and monitor new Docker containers, enabling flexible scaling and control of containerized applications.
●Automated alerting in Datadog using machine learning-based anomaly detection, enhancing proactive identification of potential issues.
●Integrated Prometheus with Kubernetes service discovery techniques to dynamically identify and monitor new services, pods, and endpoints launched or scaled in clusters. and made Prometheus integration to Grafana for visualization of queue query.
●Integrated SonarQube into CI/CD pipelines for code quality assessment and coding standards enforcement, coupled with Nagios for comprehensive monitoring and alerting, facilitating consistent, reliable code and swift problem resolution during migration.
●Experience in deploying and configuring Chef server in an Azure, including bootstrapping of Chef-Client nodes for provisioning. Created roles, recipes, cookbooks, and uploaded them to Chef server.
●Collaborated with cross-functional teams to develop a comprehensive migration strategy, outlining the rehosting, refactoring, and rearchitecting of Linux workloads for optimal performance on Azure.
●Managed the migration of databases from GCP Cloud SQL to Azure SQL Database and other Azure database services, overseeing schema conversion and minimizing downtime during the transition
●Automated the creation of Bitbucket release branches and daily integrations using Jenkins pipelines and Groovy scripting, enhancing efficiency in development workflows.
●Utilized Maven as a build automation tool to manage project dependencies and streamline the development lifecycle of the migration process.
●Engineered and fine-tuned end-to-end CI/CD pipelines using Azure DevOps, Git, Github, and Jenkins, engineering an automated release pipeline that ensured the seamless build, test, and deployment of migrated applications and services.
●Documented configurations, processes, and troubleshooting procedures throughout the migration process, facilitating knowledge transfer and enabling effective post-migration support.
●Deployed Atlassian JIRA to enhance project management and streamline agile workflows, thereby promoting teamwork and involving stakeholders during the migration phase.

EVOKE TECHNOLOGIES, Sydney, AUS(offshore - Hyd) SEP 2020 - NOV 2021
DevOps Release Engineer
Roles and responsibilities:
●AWS expert skilled in designing, deploying, and optimizing cloud solutions, leveraging services like EC2, S3, Lambda, and RDS to automate infrastructure tasks and ensure high availability and security standards. Developed and deployed serverless applications using AWS Lambda and API Gateway, reducing operational overhead and costs.
●Applied Google Cloud Platform (GCP) Services Like Compute Engine, Cloud Functions, Cloud DNS, Cloud Storage and Cloud Deployment Manager, and SaaS, PaaS, and IaaS concepts of Cloud computing architecture and Implementation using GCP.
●Administered cloud-native Linux services such as AWS EC2, GCP Compute Engine, and Azure Virtual Machines, ensuring scalability, availability, and security.
●Specialized in employing Terraform for Infrastructure as Code (IaC) to construct and manage multi-cloud setups across AWS and GCP, with a focus on creating reusable modules and templates for effective cross-cloud dependency management.
●Experienced in migrating legacy data-center infrastructure into AWS infrastructure using Terraform, AWS-CLI, and Cloud formation.
●Designed, implemented, and maintained Docker-based containerization strategies for microservices and monolithic applications, developing Docker files and Docker Compose configurations to define container images and multi-container applications.
●Experience in creating Docker containers leveraging existing Linux Containers and AMI in addition to creating Docker containers from scratch.
●Used Kubernetes for automated deployments, scaling, and management of containerized applications across clusters of hosts.
●Building/Maintaining Docker container clusters managed by Kubernetes Linux, Bash, GIT, and Docker, on GCP. Implemented a production-ready, load-balanced, highly available, fault-tolerant Kubernetes infrastructure.
●Implemented performance monitoring and analysis for web applications using tools like SPLUNK, SCOM, Dynatrace, and Application Insights, while also establishing comprehensive alerting systems.
●Set up Datadog integrations with third-party services (Slack, PagerDuty) for streamlined alert management and incident communication.
●Leveraged Datadog’s network performance monitoring to troubleshoot and resolve network-related issues, improving application uptime.
●Automated the cloud deployment using Chef, Python, and AWS Cloud Formation Templates. Used Chef for unattended bootstrapping in AWS.
●Skilled at seamlessly connecting Python applications with a range of databases including PostgreSQL, MySQL, MongoDB, and SQLite, enabling efficient storage and retrieval of data.
●Expertise in shell and python scripting with a focus on DevOps tools, CI/CD, and AWS Cloud Architecture and Google Cloud Architecture.
●Integrated Go with cloud services like AWS or Google Cloud Platform to deploy and manage real-time applications, ensuring seamless scalability and reliability.
●Implemented new project builds framework using Jenkins, Maven, Gradle, and SonarQube as build framework tools.
●Developed build and deployment scripts using MAVEN as a build tool and automated the build and deploy processes using Jenkins to move from one environment to other environments and Used GIT as a Source code repository.
●Utilized Git branches and pull requests to facilitate integration testing, running automated tests against proposed changes before merging into the main codebase.
●Collaborated with cross-functional teams to gather requirements, design solutions, and troubleshoot issues in AWS environments and GCP environments.
HIDDEN BRAINS, hyd, India( UK PROJECT) MARCH 2019 -AUGUST 2020
Build and Release/ Devops Engineer

Roles & Responsibilities:

●Accountable for overseeing all software build processes, encompassing continuous integration builds, nightly builds, and release builds.
●Utilized Jenkins for build automation, incorporating Maven and Gradle as build tools, resulting in a 30% reduction in build times and increased code reliability.
●Implemented and maintained Jenkins CI/CD pipelines, integrated with Git for version control, to automate code integration and testing, ensuring consistent and efficient software delivery.
●Managed Git repositories (GitLab, GitHub, or Bitbucket), including branching and merging strategies, to facilitate collaboration among development teams and ensure code version consistency.
●Orchestrated and automated application deployments using Ansible for configuration management and Docker containers for packaging, reducing deployment errors by 40% and minimizing downtime.
●Managed artifact repositories using tools such as JFrog Artifactory or Sonatype Nexus to streamline the storage and retrieval of build artifacts and dependencies.
●Coordinated release cycles using tools like Jenkins and Ansible for deployment, ensuring smooth transitions between development, testing, and production environments, resulting in fewer post-release issues.
●Created functions and assigned roles in AWS Lambda to run python scripts, and AWS Lambda using java to perform event-driven processing. Created Lambda jobs and configured Roles using AWS CLI
●Responsible for automation and orchestration of cloud services offerings on AWS.
●Managing AWS platform services which include managing EC2 resources, and fixing infrastructure, platform, and network-related issues.
●Involved in setting up Auto scaling of instance groups using AWS CLI (command line interface) and implemented for AWS cloud environments such as Production/Development/Testing environments.
●Created AWS Route53 to route traffic between different regions. Involved in reviewing and assessing current infrastructure to be migrated to the AWS cloud platform.
●Utilized Datadog integrations with popular CI/CD tools (Jenkins, GitHub Actions) to monitor deployment health and detect issues early in the pipeline.
●Created and maintained runbooks with Datadog alerts and notifications to standardize incident response procedures.
●Employed Puppet and Ansible for configuration management, ensuring consistent and reliable server configurations across environments.
●Integrated security scanning tools such as SonarQube and OWASP ZAP into the CI/CD pipelines to identify and mitigate security vulnerabilities in code.
●Utilized scripting languages such as Bash, PowerShell, and Python to automate repetitive tasks, improving workflow efficiency.

GSS INFOTECH, madhapur, IND AUG 2016 - FEB 2019
Sr. Systems Analyst

Roles & responsibilities:

●Led the creation and refinement of complex system requirement specifications (SRS) as a Senior Systems Analyst, employing deep technical expertise and stakeholder collaboration to drive precision in project planning and development lifecycles."
●Effectively administered a range of Linux distributions, including Ubuntu, CentOS, and Red Hat Enterprise Linux
●(RHEL),as it is a critical skill set requirement to maintain enterprise environments.
●Created SVN configuration records for builds, utilizing derived objects from build audits to maintain version control and traceability.
●Built and released packages for testing, ensuring consistency and reliability across different environments.
●Responsible for creating and managing user accounts, security rights, and disk space in Centos Linux.
●Employed a test-driven approach and implemented unit tests using Python Unit Test framework, enhancing the quality of software deployments.
●Configured and maintained Red hat Linux systems over the network, utilizing Crontab for automated task scheduling and resolution of tickets based on priority.
●Administered servers for various functions including Apache/Tomcat, Mail, MySQL, and firewalls, ensuring seamless operation in development and production environments.
●Developed Python, Perl, and Shell scripts for compilation, deployment, and automation of administrative tasks, reducing manual effort and minimizing errors.
●Collaborated within Agile/Scrum development teams to achieve end-to-end continuous integration and deployment in SDLC, facilitating faster and more reliable software delivery.
●Provided 24/7 on-call support for Linux Production Servers, ensuring high availability and prompt resolution of issues.
●Maintained security on RHEL systems, implementing necessary measures to safeguard against threats and vulnerabilities.
Contact this candidate