CHAKRADHAR YADAV
SR. DEVOPS CLOUD ENGINEER
PHONE: +1-346-***-****
EMAIL: ad29h9@r.postjobfree.com

Professional Summary:
Around 9 years of IT Professional Experience as SRE, Cloud/DevOps Engineer, Build and Release Engineer and Systems Administrator with major focus on Microsoft Azure, AWS, GCP, Open Stack, Continuous Integration, Continuous Deployment, Configuration Management, Build/release on each packaging Quality Control and which also includes Trouble shooting and performance issues.
Expertise in Microsoft Azure PaaS and IAAS services such as Azure Kubernetes Service AKS, Azure Container Registry ACR, Azure DevOps pipelines, Virtual Networks, Virtual Machines, Blob storage, Data Factory, Cloud Services, Resource Groups, Express Route, Traffic Manager, VPN, Load Balancing, Application Gateways, Auto-Scaling, deploying Web Apps, monitoring by Application Insights and creating Web-Jobs. Azure Storage, Azure Active Directory and Azure Service Bus.
Ardent acquaintance on working with Azure compute services, Azure Web apps, Azure Data Factory & Storage, Azure Resource Manager (ARM), Azure Identity & Access Management, Azure AD, Azure SQL/Cosmos DB, Azure Multi-Factor Authentic.
Hands on experience in GCP services including GKE Google Kubernetes Engine, GCR Google container Registry, Cloud Build, Google Cloud Storage GCS, Cloud SQL, Google Compute Engine, VPC, Cloud Load Balancing, Stack Driver, Cloud Identity & Access Management IAM, Big Query, Spinnaker.
Strong Windows Azure experience in a .NET stack of technologies, proficient in Windows Azure deployments, incident management, production support for Azure components, IIS/SQL server, IT administration and maintenance, Project Management, PowerShell scripting, live site incident management.
Experience in integrating applications with databases using Entity Framework, ADO.NET, or other data access technologies.
Expertise on AWS Cloud-Specific services which include EC2, VPC, IAM, RDS, ELB, EMR, ECS, Autoscaling, S3, Cloud Front, Glacier, Elastic Beanstalk, Lambda, Elastic Cache, Route53, Ops Works, Cloud Watch, Cloud Formation, RedShift, DynamoDB, SNS, SQS, SES.
Profound Experience in setting up databases in using AWS, RDS, DynamoDB, Oracle, MySQL, storage using S3 bucket and configuring instance backups to S3 bucket along with creating and managing AWS IAM role and Policy and User and Active directory, Inbound and Outbound rules.
Knowledge on SaaS, PaaS and IaaS concepts of cloud computing architecture and Implementation using Azure, GCP, AWS, OpenStack, OpenShift, Pivotal Cloud Foundry (PCF).
Experienced in Setup Splunk and developed multiple reports, alerts and dashboards that actively monitor all the systems. Designed Splunk Architecture, Queries and created Applications on Splunk to analyze Data.
Unique experience with Pivotal Cloud Foundry (PCF) architecture and design, troubleshooting issues with platform components, and developing global/multi-regional deployment models and patterns for large scale developments/deployments on Cloud Foundry and AWS. Managed and Configured environments DEV, QA, UAT and PROD on Pivotal Cloud Foundry and OpenStack for various releases and designed instance strategies.
Experienced in both Cloud Formation and Terraform to automate Cloud Infrastructure provisioning on GCP, Azure and AWS. Environment creation along with the ability to deployment on all public and Private cloud provides like GCP, Azure, AWS using various native and third-party opensource CI/CD tools, build scripts (Boto3 and AWS CLI) and automate solutions using Python, Shell, Bash, Ruby and Perl Scripting languages.
Configured and managed Elastic Load Balancing (ELB) to implement fault tolerance and avoid single point of failure of applications, thus providing high reliability and efficient usage and Auto Scaling which allows for automated Scalability and Disaster Recovery.
Designed AWS Cloud Formation templates to create custom sized VPC, to setup IAM policies for users, subnets, NAT to ensure successful deployment of Web applications, database templates and Security groups.
Experience with PCF Blob store for storing and managing Application code packages & Build packs and used PCF CLI for deploying applications and other CF management activities. Expertise in building Private Cloud Infrastructure of OpenStack and deployed Nagios to monitor and alert the health checks for Nova, Neutron, Keystone, Swift, Glance.
Hands-on in using OpenShift for container orchestration with Kubernetes, container storage, automation, to enhance container platform multi-tenancy. Experience with PCF, OpenShift, Kubernetes architecture and design, troubleshooting issues and multi-regional deployment models and patterns for large-scale applications.
Provisioning highly available EC2 Instances using Terraform and Cloud Formation Templets, added new plugins to support new functionality in Terraform and involved in using Terraform for migrate legacy and monolithic systems to amazon web services
Expertise in setting up CI/CD using Azure DevOps, Jenkins, Spinnaker Pipelines along with the setting integration for Artifactory repository (Nexus, JFrog Artifactoryâ€™s) and resolved update, merge & password authentication issues in AWS, Azure, and GCP.
Expertise in using Chef with knife commands to manage nodes, Cookbooks, Chef open source, Chef recipes, Chef attributes, Chef Templates, run-lists in AWS cloud environment.
Vigorously worked on Ansible playbooks, inventories, created custom playbooks written in YAML language, encrypted the data using Ansible Vault and maintained role-based access control by using Ansible Tower. Created Ansible supported YAML Scripts to restart JBoss, Tomcat and Jetty servers through GUI.
Experienced working on several Docker components like Docker images, containers, Docker-Hub, Docker Registry as well as familiar with advanced technologies like Docker Compose, Docker Swarm and Docker Weave.
Experience in Vagrant and Docker based container deployments to create self-environments for dev teams and managed the clusters using Kubernetes. Evaluated Kubernetes for Docker Container Orchestration.
Knowledge on various Puppet components like manifests, modules, resource, mCollective Factor, Catalogs and rewrote many Puppet modules to modern code-quality standards.
Worked on Integrating various tools and services like Visual Studio, Azure, Jenkins, Docker, and more. Utilizing Azure DevOps Server for defining and managing infrastructure through code using technologies like ARM templates or terraform.
Profusely worked on Version control tools like Subversion, GIT, clear case to track changes made by different people in source code and configured GIT with Jenkins and schedule jobs using POLL SCM.
Responsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins, Hudson and Bamboo along with Shell (Unix) and Python Scripts to automate routine Jobs.
Set up and managed ELK (Elastic Search, Log Stash & Kibana) Stack to collect, search and analyze logfiles across servers, log monitoring and created geo-mapping visualizations using Kibana in integration with AWS Cloud watch and Lambda.
Skilled in monitoring could Infrastructure, web application servers, Database using Nagios, Splunk, Dynatrace, Datadog, New Relic, ELK (Elasticsearch, Logstash, Kibana), Prometheus, Cloud Watch and Zabbix for Resource Monitoring, Network Monitoring and Log Trace Monitoring. RPM, Sumologic, APM.
Experience in using ELK (Elastic Search, Log Stash, and Kibana) stack for network and server monitoring, storing the logs and visualizing them using Nginx.
Worked on creating the Modules driven AWS Infrastructure with Terraform. Created Infrastructure Git repositories for Terraform to launch the stacks.
Extensively experienced in using build automation tools like Maven and ANT for the building of deployable artifacts such as jar, war and ear from source code to write Pom.xml and Build.xml respectively.
Experience in Issue Tracking tools JIRA, Remedy, Service Now. Involved in JIRA as defect tracking system and configure various workflows, customizations and plugins for JIRA bug/issue tracker, integrated Jenkins with JIRA, GitHub.
Expertise in installation, configuration and management of relational databases such as Oracle, MySQL, MS SQL Server and PostgreSQL. Excellent knowledge in working with NOSQL databases like MongoDB, DynamoDB, Couchbase and Cassandra.
In-depth knowledge of Couchbase architecture, including nodes, clusters, buckets, and indexes.
Administered various flavors of Linux (RHEL, CentOS, Solaris, Ubuntu, Fedora) and worked on Logical Volume Manager (LVM), Veritas Volume Manager, Kickstart, Bonding, LAMP and LDAP.
Experience Connecting Crystal Reports to various data sources such as SQL databases (e.g., SQL Server, Oracle, MySQL), Excel files, ODBC connections, or XML data.

Technical Skills:

Cloud Platform:
Amazon Web Services, Azure, OpenStack, PCF and Google Cloud Platform.
Application Servers:
Web Logic Application Server 9.x, 10.x, Apache Tomcat 2.0.x, JBOSS 4.x/5.x, Red Hat, WebSphere 6.x/7.x/8.x
Automation Tools:
Puppet, Chef, Docker, Ansible, TeamCity, Jenkins, Kickstart, Jumpstart, Terraform, Azure DevOps, Spinnaker, Git Actions, Cloud Build, Code Deploy.
Virtualization:
VMware Client, Windows Hyper-V, vSphere 5.x, Datacentre Virtualization, Virtual Box, KVM, Power VM
Volume Manager:
Logical Volume Manager, VERITAS Volume Manager, Solaris Volume Manager
Version Control Tool:
Git, SVN, Bitbucket, CVS, Azure Repos.
Database Technologies:

Oracle, SQL Server, MySQL, NoSQL, MongoDB, Cassandra, Document DB, DynamoDB, Couchbase.
Scripting:
Perl, Python, Ruby, Bourne, Korn and Bash Shell scripting, PowerShell, YAML format, JSON format.
Monitoring tools:
Splunk, Nagios, ELK, App dynamic, Cacti, sentry, Datadog, CloudWatch, Grafana, Dynatrace, New Relic, Cloud Monitoring, Prometheus.

Networking Protocol:
TCP/IP, NIS, NFS, DNS, DHCP, SMTP, FTP/SFTP, HTTP/HTTPS, NDS, Cisco Routers/Switches, WAN, LAN
Operating Systems:
Linux (Red Hat 4/5/6/7, CENTOS & SUSE), Red Hat Linux 4/5/6/7, Windows servers [2003, 2008, 2008 R2, 2012, 2012R2], Windows 2000, XP, Windows 7, Ubuntu 12/13/14, Solaris 11/10/9/8.
Methodology
V-model, Agile â€“ Scrum and Kanban

CERTIFICATIONS:

AWS Certified Developer Associate.
Chef Fluency Badge.

EDUCATION:

Masters Information Technology Management (Valparaiso University, IN, USA)
Bachelors in Business Management (Kakatiya University, India)

Professional Experience:

Equifax, Atlanta, GA. April 2021 - Present
Role: Site Reliability Engineer.

Responsibilities:

Worked on Azure AD connect to sync on-premise user Data, Groups and organizations to Azure AD and troubleshoot Azure services sync with on premise AD. Used various Azure tools like Azure DevOps, Azure Kubernetes Service AKS, Azure ACS Storage, Data Factory, Data Lake, Multi Factor Authentication, Azure VPN-Point to Site, Azure Custom security, Endpoint security and firewall.
Created, Configured and Managed a cluster of VMs that are preconfigured to run containerized applications using Azure container services, Azure Kubernetes Service AKS and worked on Azure Web Roles, Worker Roles, SQL Azure, Azure Storage, Azure Virtual Networks, subnets, network settings and Azure AD Licenses.
Lead Application Migration project from on-prem, PCF to Azure Cloud Services. Evaluating the existing PCF environment, identifying applications suitable for migration based on dependencies, compatibility, and business priorities. Setting up and configuring Azure cloud infrastructure, networks, and services required to support the migrated applications.
Created and configured the AKS environment in Azure, including setting up clusters, nodes, networking, storage, and security configurations. Containerized applications using technologies like Docker if they are not already containerized. Built Docker images for applications that conform to AKS specifications
Implementing and managing global intranet project using Scrum (Agile framework), Office 365, Microsoft Azure, Hybrid Active Directory, CSOM, PowerShell and SharePoint Infrastructure Management tools.
Automated VSTS (Visual Studio Team Services) build and deployment to IAAS and PAAS environment in Azure and developed build support utilities in PowerShell and Go lang. Integrated TFS with third party tools like Octopus Deploy for release process.
Designed and Implemented Disaster Recovery Scenario and migrated the workloads from On-Premise to Azure and built data sync jobs on Windows Azure to synchronize the data from SQL 2012 databases to SQL Azure.
Implemented CI/CD pipelines for automated testing, building, and deployment of Couchbase applications, integrating Couchbase into CI/CD workflows for seamless code delivery.
Implementation of monitoring solutions to track Couchbase performance metrics.
Responsible for Writing, maintaining, and versioning infrastructure as code (IaC) using Terraform to define VMs, networks, storage accounts, databases in a consistent and automated manner. Managed infrastructure changes by applying Terraform plans, ensuring consistent deployments and rollback mechanisms for reliability. Integrated Terraform scripts into CI/CD pipelines like Azure DevOps, Jenkins for automated provisioning, testing, and deployment of infrastructure changes.
Worked on Terraform to create modules and workspaces to automate the infrastructure provisioning process in Azure Cloud and created development, test, and production AKS environments for the necessary software development project.
Worked on Magnum Container Service for container orchestration, enabling the management of containerized applications in OpenStack.
Implemented Ceilometer Telemetry Service for Collecting and managing metering and monitoring data, providing usage statistics for various OpenStack services
Integrated Splunk with Azure Cloud Infrastructure using Ansible to collect logging data from all the Services in Azure including AKS, Web Application Servers, DBs, VM Systems into Splunk. This has enabled minimal sharing of private keys on Azure infrastructure across application teams since they no longer had to rely on direct logging to systems.
Involved in setting up Azure Kubernetes Service (AKS) clusters & orchestrate Docker containers for running microservices by creating Pods. Took several microservices into production with Azure Kubernetes Service AKS backed Infrastructure.
Configured AKS Replication controllers to allow multiple pods such as Jenkins master server in multiple minions. Managed Kubernetes Deployments using Helm Charts, managed Kubernetes manifest files and created reproducible builds of the Kubernetes application.
Worked on creating Azure DevOps Pipelines for Continuous Deployment in AKS Clusters located in multi-region, Integrating with Azure Container Registry and Azure DevOps to access the Build file and Latest Docker Images. Container Storage, automation, to enhance container platform multi-tenancy.
Designed strategies for optimizing all aspect of the continuous integration, release and deployment process using container and virtualization techniques like Docker and Kubernetes. Built Docker containers for deploying Microservices project and deployed to Dev.
Used cloud automation tools such as Ansible and Terraform to research, develop, maintain, scale and grow hybrid application environments. Remote server management and deployment exposure in Ansible.
Created Ansible playbook files for windows server builds, configuration, and application installation. And wrote Ansible playbooks, inventories, created custom playbooks written in YAML language, encrypted the data using Ansible Vault and maintained role-based access control by using Ansible Tower.
Created playbooks for deployments and bug fixes with Ansible. Deployed and tested playbooks in Docker containers before pushing changes in Git.
Used Ansible Playbooks to manage Web applications, environment configuration files, Users, Mount points, and Packages. Customized Ansible modules for finding facts about Azure Monitor alarms and taking actions to manage those alarms during deployments.
Developed PowerShell scripts to automate the project creation, setting permissions for users, groups in TFS. Developed automation scripting in PowerShell using Ansible to deploy & manage Java .Net applications across Linux/Windows servers.
Leveraged tools like Azure DevOps, Octopus Deploy, or other CI/CD platforms to automate deployments and manage infrastructure.
Integrated TeamCity integrates with various version control systems such as Git, Subversion
Used Trigger function in TeamCity and set up triggers to start builds automatically based on various events, including code commits, scheduled times, and dependencies on other builds.
Good at Installation and Configuration of Nexus repository manager for sharing the artifacts within the company and efficient in using Nexus and Artifact Repository managers for Maven builds.
Experience in JIRA for ticketing and as well as defect tracking system and configure various workflows, customizations and plug-ins for JIRA bug/issue tracker, integrated Jenkins with JIRA, GitHub, Maven.
Updated MongoDB profile to address the startup warnings and to restore the logging support in MySQL/MongoDB profile by performing some operational routines and security measures as well.
Experience Managing source code repositories using Git or Team Foundation Version Control (TFVC) within Azure DevOps Server. Implementing branching strategies, code reviews, and ensuring version control best practices.
Worked on setting up monitoring tools and configuring alerts within Azure DevOps Server to track system health, application performance, and deployment statuses.
Extensively worked on report design and development utilizing Crystal Reports' design features to arrange data, format visuals, and add elements like tables, charts, graphs, and formulas. Creating and designing reports that visualize data fetched from diverse sources, including databases, spreadsheets, or custom data structures.

Environment: Azure, Azure AKS, Azure DevOps, Azure Container Registry, Azure AD, Azure SQL, Azure Network, PCF, ARM, Kubernetes, Docker, Ansible, Jenkins, Maven, GIT, Terraform, PowerShell script, Python script, Java script, Bash, Ruby, Nagios, Elasticsearch, Splunk, Jira, Linux, MongoDB, Nginx, JIRA, Visual Studio, SQL server.

TELUS, Atlanta, USA. Aug 2020 â€“ April 2021
Role: Cloud/DevOps Engineer

Responsibilities:
Involved in Architect, build and maintain Highly Available secure multi-zone GCP Cloud infrastructure utilizing Chef and Ansible along with Terraform. Jenkins & Spinnaker for CI/CD. Cloud Build for building Docker Images and storing in GCR, which later used for GKE Deployments. Maintained roles and groups using GCP Identity Access Management (IAM).
maintained user accounts, RDS, Route 53, VPC, RDB, Document DB, Dynamo DB, KMS, Code Commit, SES, SQS & SNS services in AWS. Used Cloud watch for monitor resources.
Managed data warehouse using Amazon RedShift to analyze all data using SQL & existing business intelligence tools. Converted existing AWS infrastructure to serverless architecture (AWS Lambda, Kinesis) deployed via Terraform & AWS Cloud Formation.
Integrated AWS Dynamo DB using AWS lambda to store the values the items and backup the Dynamo DB streams and implemented Terraform modules for deployment of applications across multiple cloud providers.
Written Cloud Formation Templates (CFT) in JSON and YAML forgo lmat to build the AWS services with the paradigm of Infrastructure as a Code, and created custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.
Used AWS CloudFormation to create an EKS cluster. Specify the VPC, subnets, and other relevant settings during cluster creation.
Used Terraform to provision an GKE cluster in multi-region environment for High Availability and Disaster Recovery. Built a CI/CD pipeline for this multi-region GKE cluster using Spinnaker as Deployment tool.
Configured GKE cluster for high availability and scaling, depending on your application's requirements. Continuously monitor and optimize the cost of running your GKE cluster and application, making use of GCP Cost Explorer and other cost management tools.
Manage AWS EC2 instances utilizing Auto Scaling, Elastic Load Balancing and Glacier for our QA and UAT environments as well as infrastructure servers for GIT and Chef.
Created deployment scripts or templates that utilize NuGet packages for deploying ASP.NET MVC applications to various environments (e.g., development, staging, production).
Collaborating with development teams to define and implement effective branching strategies within version control systems (such as Git or TFVC).
Created custom build tasks or extensions within Azure DevOps Server to enhance build pipelines with additional functionalities. Writing scripts (e.g., PowerShell, Bash) to automate build tasks, perform deployments, and manage build infrastructure.
Experience in setting up and managing ELK (Elastic Search, Log Stash, Kibana) Stack to collect, search and analyze logfiles across servers, log monitoring and created geo-mapping visualizations using Kibana in integration with AWS CloudWatch and Lambda.
Worked on Nagios and ELK for server monitoring, also used Net Scalar and monitoring tools like Nagios for Load Balancing and Controlling Flow of Traffic, log aggregation and analysis for debugging and troubleshooting Kafka-related issues
Experienced working with Ansible tower. Integrating Ansible tower with Jenkins to deploy code to different servers. Played a key role in converting 200+ existing Jenkins Jobs into the new pipeline process. Prepared document on the process of migrating Jenkins Jobs from development environment to production server.
Deployed & configured Chef server & Chef solo including bootstrapping of client nodes for provisioning, Managed & configured hundreds of servers using Chef. Written several Chef Cookbooks & Recipes with Ruby scripting to automate the installation of WebLogic domain & JDK & customized Recipes from Chef Supermarket to align.
Created Docker Swarm using Docker CLI to Orchestrate, schedule and deploy the services to Swarm and managed the behavior and created virtual networks to connect Docker Containers across multiple hosts using Docker weave.
Created additional Docker Slave Nodes for Jenkins using custom Docker Images and pulled them to Cloud. Worked on all major components of Docker like Docker Daemon, Hub, Images, Registry, Swarm.
Managed artifacts generated by Jenkins & configured jobs with the Maven for various deployments of .Net enterprise applications in Agile environment, automated solutions using Python & managed JFrog Artifacts in SonarQube NEXUS repository.
Migration of the Source Code from TFS to GIT-HUB, Responsible for design and maintenance of the GIT Repositories, views, access control strategies Used sub modules in GIT and trained the new users on working with sub modules in GIT.
Configured and deployed ELK stack on to monitor Kafka Logs, worked on Installing plugins and troubleshooting HTTPS support with SSL certificates.
Experienced in writing Python scripts that can calculate the performance parameters in Linux environments. Implementation and automation of Shell and Python scripts for release and Build Automation.
Created Shell and Python Scripts to automate creation of AMIâ€™s through Preboot and Bootstrapping techniques. Developed automated processes that run daily to check disk usage and perform cleanup of file systems on LINUX environments using shell scripting.
Wrote Terraform modules to setup a Kubernetes cluster for entire GCP cloud Infrastructure to help support the Ping ID application migration from on-prem to GKE environment. Developed best practice to manage Infrastructure as code IAC using Terraform.
Worked on Integrating Crystal Reports into existing applications or systems, allowing users to access and generate reports seamlessly within those applications. Providing maintenance, support, and troubleshooting for Crystal Reports, addressing issues related to report design, data connectivity, or runtime errors.
Created CI/CD pipelines using Spinnaker which is hosted on its own GKE Cluster with in GCP cloud to deploy Ping ID application in both Staging and Production GKE Environment. Created multi regional GKE Cluster deployment pipeline, leveraging GCP Cloud build.

Environment: AWS (EC2, EBS, S3, VPC, Code Deploy, Code Commit, Elastic search, Lambda, API Gateway, Route53 (DNS), ECS, KMS, CloudFormation, RDS, DocumentDB, Dynamo DB, SNS, SES, SQS, IAM, Kafka, RedShift, Ops Works), Maven, Chef, Ansible, Docker, Kubernetes, OpenStack (kilo/ Juno), Jenkins, GIT, Bit-Bucket, ELK, Python, Jira, Terraform, GCP, Cloud Build, Spinnaker, GKE, Google Cloud Deploy, Artifact Repository.

Venmo/PayPal, NY, USA. Nov2018 â€“ Aug 2020
Role: Site Reliability Engineer

Responsibilities:

Responsible for Reliability, Scalability while solving complex systems problems on the diverse and highly distributed cloud microservice architecture focusing on automation.
Worked as part of SRE team which is focused for Implementing Incident Management process across the organization by creating on-call procedure and no blame post mortem for all the functional team.
Designed highly available, cost effective and fault tolerant systems using multiple EC2 instances, Auto Scaling, Elastic Load Balancer and AMIs. Created S3 buckets and managed policies for S3 buckets and Utilized S3 bucket and Glacier for Archival storage and backup on AWS.
Tested Chef Cookbook modifications on cloud instances in AWS and using Test Kitchen and Chef Spec and used Ohai to collect attributes on node. Worked on Chef DK which takes of care creating cookbooks and recipes.
Developed cookbooks using Chef for Deploying services on Hybrid Environments, both Windows and Linux. Managed Ubuntu Linux and Windows virtual servers on AWS EC2 using Open-Source Chef Server.
Created several Pods and services using Master and Minion architecture of Kubernetes (KOPS) and developed microservice onboarding tools leveraging HELM charts allowing for easy creation and maintenance of Build Jobs and Kubernetes deployment and service yamls.
Involved in setting up Chef Server, Chef Workstations and Chef Nodes. Developed Chef Cookbooks for Tomcat, MySQL, windows applications and versioned them on GIT repositories and Chef Server.
Worked on building infrastructure using Puppet automation and install SSL certs through secure https port on Red hat Linux servers.
Managed central repositories. Implemented Atlassian Stash along with GIT to host GIT central repositories for source code across products & login audits for Security Compliance. Performed code line GIT pushes (releases) to production and customer servers and developed and improved GIT push scripts.
Maintained build related scripts developed in ANT, Python and shell modified build configuration files including Ant's build.xml.
Support the applications on Java, build and deploy Java/J2EE applications using ANT and trouble shoot the issues.
Implemented a CI/CD (Continuous Integration /Continuous Delivery) framework using Bamboo, Maven &Nexus in Linux environment and Integration of Maven, Nexus, Bamboo, Bitbucket, Confluence, Jira and Cloud Foundry.
Extensively worked on Jenkins by installing, configuring and maintaining for continuous integration (CI) and for End-to-End automation for all build and deployments. Knowledge on creating jobs, pipelines in Jenkins also worked with different Jenkins plugins to integrate with different services/tools.
Developed Shell Scripts and Perl for automation of the build and release process. Developed custom solutions in C# and PowerShell to validate availability, consistency, and compliance with environments.
Good hands-on experience in using build tools like MAVEN for the building of deployable Artifacts such as War & Jar from Source Code.
Created Docker images using a docker file, worked on Docker Container snapshots, removing images and managing Docker volumes. Expertise in setting up Docker Host, Docker Registry, RHEL/ Centos Atomic Host. Handled multiple images for middleware installations and domain configurations. Virtualized the servers using the Docker for the test environments and dev-environments needs, also configuration automation using Docker containers.
Working on Multi-region micro-service architecture running on Kubernetes Cluster within the AWS Stack. Implementing Incident Management and SLA, SLO based monitoring and alerting configurations while administrating monitoring resources including Datadog for Infrastructure and Database monitoring, New Relic and Grafana for Application and Endpoint visualization and alerting, Sumo Logic and ELK for log collection.
Involved in build and maintain Highly Available secure multi-zone AWS Cloud infrastructure utilizing Ansible with AWS Cloud Formation/Terraform and Jenkins for continuous integration. Maintained roles and groups using AWS Identity Access Management (IAM), also maintained user accounts, RDS, Route 53, VPC, RDB, Dynamo DB, Code Commit, SES, SQS & SNS services in AWS. Used CloudWatch for monitor resources.
Worked on Building/Maintaining docker containers managed by Kubernetes and deployed Kubernetes applications using Helm Charts. Built Helm Charts for Sentry an python application monitoring tool and deployed in Kubernetes Cluster.
Working with functional teams to improve alerting and monitoring by setting up integration to both PagerDuty Event API, creating custom webhooks to create JIRA tickets and Incident Reports and setting up
Contact this candidate