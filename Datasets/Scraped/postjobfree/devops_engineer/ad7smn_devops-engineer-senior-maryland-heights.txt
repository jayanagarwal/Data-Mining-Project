LAKSHMI KALYANI CH
505-***-****
ad7smn@r.postjobfree.com

PROFESSIONAL SUMMARY
Around 9 Years of IT experience as an Senior DevOps Engineer supporting, automating, and optimizing mission-critical deployments in AWS and Azure, leveraging configuration management, CI/CD, Infrastructure as Code, Containerization and Container Orchestration Build/Release management.
Expertise in AWS services such as EC2, S3, EBS, VPC, ELB, RDS, Route 53, Lambda, Cloud watch, Cloud Trial, Auto scaling, Security Groups, Redshift, and Directory Services, and Azure services such as Azure VM, Azure Storage, Azure Networking, and Azure DevOps.
Designed customized infrastructure in AWS and Azure with Terraform scripts to create custom sized VPC, Subnets, NAT to ensure successful deployment of web applications and database templates and expertise in architecting secure VPC Solutions in AWS and Azure with the help of Network ACLs, Security groups, and public and private network configurations.
Strong experience in CI/CD software development pipeline stages like Commit Build, Automated Tests, and Deploy in multiple environments like Dev, QA, and Pre-Prod & Prod.
Played a key role in automating the deployments on AWS/Azure using GitHub, Terraform, Ansible, and Jenkins.
Hands-on experience in Ansible as Configuration management tool to automate repetitive tasks, quickly deploy critical applications and proactively manage change.
Experience in assigning the azure services on locations specific to integrate with web-apps and key-vaults.
Expertise in writing Ansible Playbooks from scratch using YAML functions and utilizing setup and automate the CI/CD pipeline and deploy Microservices.
Experience in VMware Tanzu products, including Tanzu Application Services (PCF) and RabbitMQ.
Expereince in using VMware like Tanzu, oracle, AWS.
Provisioned load balancer, auto-scaling group and launch configuration for Microservices using Ansible.
Experience with container-based deployments using Docker working with Docker images, Docker Hub, Docker registries, and Kubernetes.
Experience in writing custom Docker images and have hands-on experience with Docker components.
Worked on creating, maintaining, and upgrading Kubernetes EKS and AKS clusters.
Handled application deployments and production issues in Kubernetes clusters.
Extensively worked on Jenkins for continuous integration and for the end-to-end automation for all build and deployments including setting up pipeline jobs and upstream/downstream job configurations in Jenkins.
Strong experience in using build management tools like Maven for the building of deployable artifacts (JAR, WAR, and EAR) from source code and used artifacts repository managers like Nexus for Maven builds.
Experience in using bug tracking tools like JIRA and Service Desk.
Implementation of JIRA to implement agile, to track all issues pertaining to the SDLC and Integration of JIRA with Git to track all code changes.
Managing services, maintaining, and managing log files, monitoring event, logs, and troubleshooting system problems using tools like Nagios, Splunk, ELK, and Cloud Watch and resolve for any reported issues.
Expert in network services which include VPC, Subnet, SSH, DNS, VPN, NACL, Security group.
Excellent communication, interpersonal, intuitive, and analytical and leadership skills with ability to work efficiently in both independent and teamwork environments.

TECHNICAL SKILL-SET
CLOUD
AWS, Microsoft Azure
Azure Tools
Azure Storage Explorer, Visual Studio, VS Code, GitHub, Docker, Kubernetes, Service
Bus, ARM Templates, Azure Key Vault, Vnet, NSG.
CI/CD TOOLS, BUILD TOOLS
Jenkins, Terraform, Azure DevOps (formerly VSTS)
VERSION CONTROL TOOLS
GIT, SVN, Bitbucket, Azure Repos (formerly TFS)
CONFIGURATION MANAGEMENT
Chef, Ansible, Puppet
MONITORING TOOLS
Nagios, Splunk, ELK, Cloud Watch, Azure Monitor
CONTAINER TOOLS
Kubernetes, Docker, Azure Container Instances (ACI)
SCRIPTING
Bash/Shell, Python, JSON, YAML, PowerShell
DATABASES
My SQL, Red shift, Mongo DB, AWS RDS, PostgreSQL
APPLICATION SERVERS
IIS, JBoss, Apache Tomcat, Web Sphere, Web Logic
WEB SERVERS
Apache HTTP, Nginx, Apache TOMCAT
OPERATING SYSTEMS
Red Hat Linux 7/6/5/4, Unix, Ubuntu 16/14/13/12, Debian, CentOS, Windows, Mac OS.

PROFESSIONAL EXPERIENCE

Global Payments, Remote March’2021 - Present
Senior Cloud/Azure DevOps Engineer

Roles & Responsibilities:
Developed and implemented an automated Linux infrastructure using Puppet, creating Puppet models to install and manage Java versions, and writing Python plugins to collect and write metrics to state.
Developed automation system using PowerShell scripts and JSON templates to remediate the Azure services.
Developed microservices onboarding tools using Python and Jenkins on AWS, enabling easy creation and maintenance of build jobs and Kubernetes deployment and services.
Automate various administrative tasks on multiple servers using Puppet.
Achieved Infrastructure as Code for deploying and updating production Tanzu Application Services (PCF) Foundations through Concourse CI server and pipelines
Written Templates for Azure Infrastructure as code using Terraform to build staging and production environments.
Created scripts for system administration using languages such as PowerShell and Python, including Azure Functions to upload code and check changes in Azure Blob Storage and Table Storage.
Created Azure services using ARM templates (JSON) and ensured no changes in the present infrastructure while doing incremental deployment.
Implemented a CI/CD pipeline using Azure DevOps(VSTS,TFS) in both cloud and on-premises with GIT, MS Build, Docker, Maven along with Jenkins plugins.
Implemented a Continuous Delivery pipeline with Docker, Jenkins, GitHub, and AWS AMIs and automated AWS components such as EC2 instances, Security Groups, ELB, RDS, and IAM through AWS CloudFormation templates.
Installed Splunk in production servers for logging purpose. Built Splunk dashboards for application monitoring and configured alerts for operational purpose.
Used Bash and Python, including Azure CLI, to supplement automation provided by Ansible and Terraform for tasks such as encrypting disks and scheduling Azure Functions for routine Azure tasks.
Demonstrated end to end troubleshooting skills by leading complex support calls with vendors (JFrog, VMwareTanzu)to improve the overall performance of CI/CD tools
Debug build failures and work with developers and QA personnel to resolve related issues.
Deployed and designed pipelines through Azure data factory and debugged the process for errors.
Designed and deployed AWS solutions using EC2, S3, EBS, Elastic Load Balancer (ELB), auto-scaling groups, and OpsWorks.
Managed and administer Apache, Tomcat, WebLogic, WebSphere, and JBoss.
Designed and worked with team to implement ELK (search, logstash and Kibana) Stack.
Worked with Docker for creating various containers with different distribution in integration with Puppet.
Configured Nagios to monitor Azure VMs with puppet automation.
Configured vSphere 7.0 with Tanzu. Enabled Kubernetes (k8s) data domain.
Worked on NoSQL DBs MongoDB, Cassandra for relational database purposes.
Created Python Scripts to automate Azure services, including VMs, Azure Functions, Azure Load Balancer, Blob Storage, Table Storage, and Application Configuration. This Script creates stacks, single servers or joins web servers to stacks.
Create a Virtual Network on Windows Azure to connect all the servers.
Assisted the Splunk Architect with designing the Splunk infrastructure and implemented the design including configuring clustered Indexers and Search Heads, setting up Deployment Server, and installing Universal Forwarders on servers and network devices.
Created alarms and notifications for EC2 instances using CloudWatch and utilized Lambda functions to automate snapshot back up on AWS and set up scheduled backups.
Used VMware like Tanzu, oracle, AWS.
Used Kubernetes as an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts, providing container-centric infrastructure.
Good experience in working with SNMP traps and Syslog NG in onboarding the security devices on Splunk
Worked directly with the Azure Product team to track and resolve defects in the Azure IaaS offering.
Create GIT repositories and give access rights to authorized developers and workers.
Environment: Puppet, PowerShell, Python, Docker, Nagios, MongoDB, Cassandra, Kubernetes, Azure Functions, Azure Load Balancer, Blob Storage, Table Storage, Azure cloud platform, Linux.

Magellan Health, St. Louis, MO July’2019 – Feb’2021
DevOps / Cloud Engineer

Roles & Responsibilities:
Developed micro service onboarding tools using Python and Jenkins on AWS, enabling easy creation and maintenance of build jobs and Kubernetes deployment and services.
Implemented reproducible builds of Kubernetes applications, managed Kubernetes manifest files and Helm packages, and used Kubernetes to deploy, scale, load balance, and manage Docker containers across multiple namespace versions.
Deployed Kubernetes-based container environments for dev teams and containerized environments for releases using Docker and Kubernetes.
Created Docker containers and consoles to manage the application lifecycle, using Docker Engine, Hub, Machine, Compose, and Docker Registry.
Created certificates using AWS certificate manager and applied them across ELBs and EC2s.
Focused on containerization and immutable infrastructure using Docker and Kubernetes, including using Docker Swarm to deploy spring boot applications and deploying Docker Engines in Virtualized Platforms for containerization of multiple apps.
Created Docker images from scratch and customized and modified base images from existing environment configurations, maintaining the image repository for development teams.
Created Ansible roles in YAML, defined tasks, variables, files, handlers, and templates, and configured the Ansible files for parallel deployment to automate the Continuous Delivery process.
Managed Ansible Playbooks with Ansible roles, using the file module in Ansible playbook to copy and remove files on remote systems and creating inventory in Ansible for automating continuous deployment.
Integrated Jenkins with AWS plugin so that the Jenkins slaves are online only when called, resulting in cost savings to the customer.
Used Ansible as a configuration management tool to automate repetitive tasks, quickly deploy critical applications, and proactively manage change.
Worked with Operations Management Suite, PowerShell scripts, and ARM templates.
Wrote Ansible Playbooks and Roles to provision machines in different environments and convert static playbooks into roles, using Ansible Tower to provide an easy-to-use dashboard and role-based access control for individual teams.
Configured and optimized code scanning in Sonatype and Veracode.
Integrated automated build with deployment pipeline, using Jenkins to pick up the build and deploy it in target environments (Integration, QA, and Production).
Used Terraform to manage different infrastructure resources, including Cloud, VMware, Bare Metal Servers, and Docker containers, as well as to configure RDS instances and map more complex dependencies and identify network issues.
Used Terraform to build, change, and version infrastructure and collaborate on automation with Jenkins.
Built the process by automating JSON Templates and deploying them using the build and release pipeline in VSTS.
Set up Splunk to capture and analyze logs from various layers, such as Load Balancers, Web servers, and application servers.
Monitored system logs using Splunk and notified the incident management system upon exceeding thresholds.
Coordinated and assisted developers with establishing and applying appropriate branching, labeling/naming conventions using GIT source control, and analyzed and resolved conflicts related to merging of source code for GIT.
Had extensive exposure to configuration management policies and automated scripting using Bash/Shell scripting.
Maintained JIRA for tracking and updating project defects and tasks, ensuring the successful completion of tasks in sprint.

Environment: AWS, Kubernetes, Docker, Terraform, Jenkins, Git, Ansible, Maven, Nginx, Sonarqube, Elk, Apache Tomcat, Python, PowerShell, Windows/Linux.

Rackspace Technology, San Antonio, TX Jan’2018 – June’2019
DevOps /AWS Engineer

Responsibilities
Hands on experience with AWS Cloud services like EC2, VPC, S3, IAM, Route 53 and Lambda.
Created multi branch pipelines and automated build and deploys using Jenkins and Ansible.
Integrated Git, Junit Testing and Selenium in continuous deployment.
Automated creation of immutable infrastructure (EC2, VPC, ELB, Auto-Scaling etc.) using Terraform.
Built and tested .Net code using msbuild and mstest.
Created NuGet packages for the application teams to reference them across multiple code repositories.
Created certificates using AWS certificate manager and applied them across ELBs and EC2s.
Set up both classic and application load balancers as per the requirements of the application teams.
Used shared libraries across multiple Jenkins files to create re-usable codes.
Integrated build/deploy pipelines with emails/Slack/MS Teams so that appropriate teams are notified on status.
Created PowerShell and Linux shell scripts to automate the housekeeping of the servers.
Promoted builds across various environments such as sandbox, dev, sat, prod and DR.
Maintained and managed Jenkins in terms of plugin management, user access, and configuration management.
Integrated Jenkins with AWS plugin so that the Jenkins slaves are online only when called, resulting in cost savings to the customer.
Wrote docker files to automate database deployments on oracle Linux containers.
Modeled and automated the End-to-End Continuous Integration/Deployment/Delivery pipeline which included building a Continuous Integration server utilizing tools like Jenkins, Nexus Artifactory, GIT.
Used Nexus Artifactory as our external repository manager to store and retrieve the build artifacts.
Coordinating the resources by working closely with Project Manager's for the release and Project Manager for all the Operational Projects. Coordinate with the Development, QA and IT Operations teams during deployments to ensure there are no Conflicts.
Environment: Terraform, Docker, Jenkins, Ansible, Maven, GIT, Nexus, PowerShell, Linux/Windows.

Whatfix, India Sept’2015 – Dec’2017
Software Engineer

Roles & Responsibilities
Installed and administered various tools like Jenkins, Gitlab, Chef, Jfrog Artifactory and executed maintenance tasks such as creating users and groups.
Experience in creating the company's DevOps strategy in a mix environment of Linux (RHEL, Ubuntu) servers along with creating and implementing a cloud strategy based on Amazon Web Services.
Implemented a CI/CD pipeline involving GitLab, Jenkins, Chef, and Selenium to complete the automation from commit to Deployment.
Created and Implemented branching & merging strategy with multiple branches.
Participation and Contribution in periodic archiving and storage of the source code for disaster recovery.
Integrated GIT into Jenkins to automate the code check-out process.
Automated the build and release management process including monitoring changes between releases.
Hands on experience on JIRA for creating bug tickets, workflows, pulling reports from dashboard, creating and planning sprints.
Worked closely with developers to pinpoint and provide early warnings of common build failures.
Provided periodic feedback of status and scheduling issues to the management.

Environment: AWS, Jenkins, Chef, Docker, Gitlab, Jfrog Artifactory, Jira, Hip chat, Selenium, Windows, Linux.

--
Thank you
Contact this candidate