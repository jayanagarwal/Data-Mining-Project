Kiran***

Phone: 531-***-****
Email: ad5mc2@r.postjobfree.com
Linkedin URL: https://www.linkedin.com/in/sreeja-reddy-122736175/

Professional Summary:

Overall 10+ years of experience in IT industry in that as a DevOps Engineer having 6+ years of professional Experience with Azure and AWS cloud services. 4 years of experience Linux admin role.
Expertise in DevOps tools such as GIT, Jenkins, Maven, Ansible, Docker, Kubernetes, AWS, Azure, and Terraform, Splunk, Nagios.
Experienced in Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins and Azure pipelines.
Worked on Configuration Management Tools Ansible, and Automated Linux production serverâ€™s setup using the Ansible playbooks.
Experience in deploying Azure Laas, PaaS Services using ARM Templates and Azure DevOps.
Experienced in Configuring, Automating and Deployment using Chef and Ansible for configuration management to existing Infrastructure. Implemented Ansible to manage all existing servers and automate the build/configuration of new servers.
Experienced with Docker containerized environment, hosting web servers on containers, building Docker images using Docker.
Expertise in working with Kubernetes to automate deployment, scaling and management of web Containerized applications.
Worked on Kubernetes to orchestrate Docker containers of new and existing applications as well as deployment and management of complex run time environment.
Proficient in the AWS Cloud platform and its features, which include EC2, VPC, EBS, Cloud Watch, Cloud Trail, Cloud Formation, Cloud Front, IAM, S3, Route 53, SNS, SQS.
Experienced in working on both On-Premise and Cloud (AWS) platforms utilizing DevOps/Agile operational processes.
Hands-on experience in Azure compute services, Azure Web apps, Azure Storage, Azure Networking, and Azure Identity & Access Management.
Built and configured a virtual data center in the AWS cloud to support Enterprise Data Warehouse hosting including (VPC), Public & Private Subnets, inbound & outbound Security Groups, Route Tables, and Elastic Load Balancer.
Used AWS lambda to run servers without managing them and configured to trigger, to run code using S3.
Designing and implementing disaster recovery and business continuity plans for containerized applications on AKS, ensuring high availability and minimal downtime.
Designed highly available, cost effective and fault tolerant systems using multiple EC2 instances, Auto Scaling, Elastic Load Balance and AMIs and Glacier for QA and UAT environments.
Written reusable and modular Terraform code to provide and manage resources on AWS and Azure.
Provisioned azure SQL databases and managed server resources using Terraform by defining database properties, and firewall rules.
Designed and managed Snowflake data warehouses, including user management, access control, and security configurations.
Experience on Azure Site Recovery and Backup Installed and Configured the Azure Backup agent and virtual machine backup, Enabled Azure Virtual machine backup from the Vault and configured the Azure Site Recovery (ASR).
Proficient in using AWS RDS features such as multi-AZ deployment, scaling, security, and monitoring to ensure high availability, performance, and security of the databases.
Expertise in working with diverse Database platforms for Installing, Configuring and Managing NoSQL, RDBMS tools like MYSQL, Oracle, and Mongo DB.
Skilled in containerizing Java apps with Docker and Kubernetes and monitored Java app performance using Prometheus and Grafana.
Strong exposure in utilizing Jenkins, GitHub Actions and Bamboo as the CI/CD tool and built the code integration, code
delivery and release pipelines.
Designed, implemented, and managed containerized application platforms using OpenShift, including cluster setup, deployment, and maintenance.
Experienced with handling production incidents, queries, problems through remedy ticketing system and non -production issues/tasks/incidents through JIRA ticketing system.
Worked on Integration of servicenow with HP Service Management both Incident and Change management modules.
Worked on Web Services using SOAP Messages and called third party. Good understanding of XML.
Good understanding of web and application servers like Apache Tomcat, WebSphere, Nginx.
Used build tools like Maven, ANT, and Gradle for the building of deployable artifacts from source code.
Implemented network policies to restrict access to Azure resources via private endpoints.
Proficient with Terraform Configuration files to spin up the infrastructure very easily and efficiently.
Proficient in monitoring and logging tools such as Azure Monitor, Prometheus, and Grafana to provide real-time visibility into application performance and health.
Highly proficient in writing lambda functions to automate tasks on AWS using CloudWatch triggers, S3 events as well as
DynamoDB streams and kinesis streams.
Experienced using different log monitoring tools like Splunk, Nagios, ELK (Elastic search, Logstash, Kibana) for to see logs information, monitor, get the health & security notifications from nodes.
Extensive experience designing and implementing AWS IAM policies for large-scale cloud infrastructure.
Expert in writing scripts like Power Shell, YAML, Bash/Shell, Python for automating the build and release process.

Certifications:

Certified by AWS associate developer.
Certified by Kubernetes Administrator.
Certified by Azure Administrator.
Technical Skills:

AWS Services
RDS, EC2, IAM, Cloud Formation, ASG, EBS, S3, ELB, Auto Scaling, Cloud Trial, SQS, SNS, SWF, Cloud Watch, VPC, VPN.
CI/CD
Jenkins, Azure Pipelines, Github.
Artifactory
JFrog and Nexus.
Web Servers
Nginx, Tomcat.
Code Scanning
SonarQube.
Databases
RDS, Postgres, Cosmos DB, My SQL DB.
Logging
Cloud Watch, Cloud Trail, Azure App Insights, Azure Monitor.
Configuration& Automation Tools
Ansible, Puppet, Chef and Terraform.
Container Platforms
Docker, Kubernetes, Open Shift.
Monitoring Tools
Nagios, Splunk, Prometheus and Grafana
Languages
Python, Shell scripting.
Cloud Platforms
Microsoft Azure Aws Cloud and GCP.
Azure Services
App Services, Key vault, function app, Blob storage, Azure Active Directory (Azure AD), Service Bus, Azure Container Registry (ACR) and Azure Kubernetes service (AKS), Azure SQL, Azure data Factory.
Version Control Tools
GitHub and Bit Bucket.
Build tools
Maven, Graddle.
IAC tools
Terraform, ARM templates, Cloud formation templates and Bicep.

Employment History:

Client: Home Depot
Location: Atlanta, GA. Nov 2022- Present
Role: Sr. Azure DevOps Engineer.

Responsibilities:

Designing Inbound and Outbound traffic rules and linking them with Subnets and Network Interfaces to filter traffic to and from Azure Resources.
Well-versed in automating Infrastructure using Azure CLI, monitoring and troubleshooting Azure resources with Azure App Insights, and accessing subscriptions with PowerShell.
Involved in creating Azure Key Vaults to hold Certificates, Keys and Secrets.
Created and deployed python Azure Function App and integrated with azure API management.
Configured and maintained Azure Storage Firewalls and Virtual Networks, which use virtual Network Service Endpoints to allow administrators to define network rules that only allow traffic from specific V-Nets and subnets.
Planning and implementation of data and storage account solutions for azure files, Queue storage and blob storage.
Worked on Azure DevOps services such as Azure Repos, Azure Boards, and Azure Test Plans to plan work and collaborate on code development, built and deployed application.
Have good experience working with Azure BLOB and Data Lake storage and loading data into Azure SQL Synapse analytics (DW).
Created AD pipelines to extract data from on premises source systems to azure cloud data lake storage.
Extensively worked on copy activities and implemented copy behaviors such as flatten hierarchy, preserve hierarchy and Merge hierarchy. Implemented Error Handling concept through copy activity.
Extensively worked on Azure Data Lake Analytics with the help of Azure Data bricks to implement SCD-1, SCD-2 approaches.
Designed and implemented database schema, created tables and indexes, and configured security settings for Azure SQL DB.
Configuring database-level security settings, creating users and roles, and implementing access controls to ensure that only authorized users have access to correct schema.
Designed and implemented Terraform scripts to automate SQL DB Instances creation.
Managing and monitoring Azure SQL DB instances troubleshooting issues and optimizing performance of SQL Managed Instances.
Create puppet scripts to install stack like LX containers, Docker, apache, postgres, PHP, Python virtual envs, sonarqube nexus 2/3, wildfly/boss applications.
Developed automation scripting in Python (core) using Puppet to deploy and manage Java applications across Linux servers.
Worked with Terraform for automating VNET, NSG, AKS, ACR, VMs, and Storage accounts to replace the rest of our infrastructure.
Managed servers on the Microsoft Azure Platform, Azure Virtual Machines instances using Ansible Configuration Management and created Ansible Playbooks, tasks, and roles to automate system operations.
Designed and implemented CI/CD pipeline for Azure app services and responsible for monitoring the performance and availability of Azure App Services and troubleshooting any issues that arise.
Developed and maintained Continuous Integration (CI) using tools in Azure DevOps (spin) spanning multiple environments, enabling teams to safely deploy code in Azure Kubernetes Services (AKS) using YAML scripts and HELM charts.
Experience using Nagios monitoring system and different Bug Tracking Tools like Remedy, Jira, ServiceNow and Clear Quest. Designed, deployed, and coordinated with different teams to enhance ELK platform and took ownership of new technologies.
Created pipelines for deploying code from GitHub to Kubernetes (K8s) clustering form of Docker containers using Spinnaker platform.
Worked on creating, configuring, and managing AKS clusters in Azure, including managing node pools, configuring networking, and setting up load balancing.
Managing the Azure Kubernetes Services (AKS) policies, providing access to different Azure resources and developing and improving the workflows that govern access.
Configured and installed Prometheus and Grafana using HELM charts within an AKS cluster for monitoring and visualization of Kubernetes workloads.
Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and
Monitoring.
Integrated Azure Storage Accounts with Azure Functions, Azure Databricks and AKS cluster.
Developed continuous integration and deployment pipelines that automated builds and deployments to many environments using VSTS/TFS in the Azure DevOps Project.
Configured private endpoints for Azure services, such as Azure Storage and Azure SQL Database, to restrict access to resources from within the virtual network only.
Ownership for Azure SQL server DB deployment & managed the continues integration & continues deployment.
Configured applications that run multi-container Docker applications by utilizing the Docker-Compose tool which uses a file configured in YAML format.
Used Kubernetes to manage containerized applications using its nodes, Config-Maps, selector, Services, and deployed application containers as Pods.
Utilized Jira for agile project management in an Azure DevOps environment.
Created and managed Jira boards to track user stories, tasks, and bugs within the Azure project and Collaborated with the development team by using Jira to assign and prioritize work items.
Designed, implemented, and managed containerized application platforms using OpenShift, including cluster setup, deployment, and maintenance.
Configured and managed the New Relic monitoring agents, setting up custom dashboards and alerts, and monitoring application performance metrics to ensure application availability.
Managed and maintained multiple GitHub repositories and responsible for managing Pull requests.
Developed and implemented access controls in GitHub to ensure that only authorized users have access to sensitive data and repositories.
Extensive involvement in Azure Backup, Azure Policies, Azure Key Vault.
Developed and implemented processes and procedures for Linux OS patching.
Environment: Powershell, Nagios, Terraform Azure, AKS, Ansible, Docker, Git, Azure DevOps, Maven, ARM Templates, Bicep, Python, bash/Shell Scripting, postgres, Docker Compose, Kubernetes, Ansible tower.

Client: Convera
Location: Denver, CO. June 2020 â€“ Oct 2022
Role: Sr. DevOps Engineer.

Responsibilities:

Designing, deploying, and maintaining the application servers on AWS infrastructure, using services like AWS EC2, S3, Glacier, VPC, Lambda, Route53, SQS, IAM, Cloud Front, DynamoDB and RDS.
Automated Build and Deployment process-setup Continuous Integration and Continuous Deployment of applications onto different environments like Dev, QA, and Production using Jenkins.
Worked with the different instances of AWS EC2, AWS AMIâ€™s creation, managing the volumes and configuring the security groups.
Worked on Cloud automation using AWS Cloud Formation template.
Automated the cloud deployments using CHEF, PYTHON (boto & fabric) and AWS Cloud Formation Templates.
Designed and developed AWS Cloud Formation templates to create custom VPC, Subnets, NAT to ensure deployment of web applications.
Created AWS VPC network for the installed instances and configured AWS Security groups, NACLâ€™S and Elastic IPâ€™S installing load balancers and VPC with public and private subnets.
Responsible for user access and permissions for AWS services and resources using IAM roles, groups, and policies.
Integrated IAM policies with AWS services such as EC2, S3, and RDS to achieve secure access controls.
Created Chef Cookbooks for automation purposes like file copy, permission changes, configuration changes, path specific folder creation, etc. Wrote Cookbooks for provisioning, orchestration, packages, services, configuration, and deployments.
Involved writing terraform modules for automation the Creation of different environments.
Implemented a â€˜server lessâ€™ architecture using API Gateway, Lambda, and Dynamo DB and deployed AWS Lambda code from Amazon S3 buckets.
Responsible for setting up databases in AWS using RDS, storage using S3 buckets and configuring instance backups to S3 bucket.
Highly proficient in writing lambda functions to automate tasks on AWS using CloudWatch triggers, S3 events as well as DynamoDB streams and kinesis streams.
Worked on ServiceNow Cloud Management to optimize cloud operations and extend the power of the Now Platform to
accelerate the cloud strategy in the enterprise.
Worked on creating AMI (AWS Machine Images) that utilizes ELB (Elastic Load Balancer) and Auto Scaling.
Integrated Jenkins with Nexus, SonarQube, and Chef and used CI/CD within Jenkins on Docker container environment, utilizing Docker for the runtime environment for the CI/CD system to build, test and deploy in AWS EKS clusters.
Developed and configured Jenkins pipeline for EKS cluster deployment for various environments DEV, QA, UAT and PROD.
Responsible for ensuring security and compliance of the EKS clusters, by enforcing security policies, performing vulnerability scans, and configuring Kubernetes RBAC.
Managed Kubernetes charts using Helm, and Created reproducible builds of the Kubernetes applications, managed
Kubernetes deployment and service files and managed releases of Helm packages.
Created custom alerts and notifications in Elasticsearch and Kibana based CPU or memory usage thresholds, error rates, and latency for AWS EKS clusters.
Administered and Engineered Jenkins for managing weekly Build, Test and Deploy chain as a CI/CD process, GIT with Development/Test/Prod Branching Model for weekly releases.
Implemented automation of AWS infrastructure via Terraform.
Worked on the Cloud Watch to monitor the performance environment instances for operational and performance metrics during the load testing.
Worked with the AWS S3 services in creating the buckets and configuring them with the logging, tagging and versioning.
Configured Cloud Watch metrics and alarms to monitor S3 bucket performance and usage.
Created the trigger points and alarms in Cloud Watch based on thresholds and monitored logs via metric filters.
Used Nexus Artifactory to store and maintain the artifacts in the binary repositories and push new artifacts by configuring the Jenkins project.
Database management and administration using Amazon RDS PostgreSQL, Amazon DynamoDB and MSSOL on Docker and Windows Server clusters.
Created and Configured the CI/CD pipeline for deploying ELK - Services and Lambda functions using Jenkins.
Worked on ServiceNow Cloud Management to optimize cloud operations and extend the power of the Now Platform to accelerate the cloud strategy in the enterprise.
Worked on CI/CD for PostgreSQL and MySQL Applications and Installed MYSQL on Cassandra and enabled MongoDB to read from Mysql Tables.
Also worked on Apache Hadoop and used Kafka for messaging system and spark for processing large sets of data.
Worked with logging/monitoring tools such as CloudWatch, Nagios and Nexus.
Involved in designing, deploying, and managing AWS RDS database instances for various applications and environments.
Trouble shooting and debugging performance issues with Elastic Beanstalk environments, including diagnosing issues related to application code, infrastructure, and networking.
Extensively worked on GitHub for creating repositories, branching, merging, and resolving merge conflicts, setting up GitHub webhooks to trigger Jenkins builds automatically.
Wrote shell scripts to archive old logs.
Configured and maintained GitHub organizations, teams, to enable effective collaboration between multiple teams while ensuring security and compliance.
Supporting 24x7 production on-call and weekend support computing environments.
Environments: Maven, DynamoDB, WebLogic, Nexus, EC2, Git, Chef, SNS, Redis, Ansible, shell/Perl, Jenkins, Cloud formation, Kubernetes, Bash, bitbucket, Python, Pom.Xml, Linux, Windows, OpenShift, Confluence, Cloud watch, Ansible, Docker, RDS, Grafana, Apache Tomcat, Amazon VPC, Json, PostgreSql.

Client: Bofa
Location: Charlotte, NC. March 2018-2020
Role: DevOps Engineer.

Responsibilities:

Experience in Software Integration, Configuration, building, automating, managing and releasing code from one environment to another environment and deploying to servers.
Worked in AWS environment, instrumental in utilizing Compute Services (EC2, ELB), Storage Services (S3, Glacier, Block Storage, and Lifecycle Management policies), Cloud Formation, Lambda, VPC, RDS and Cloud Watch.
Migrated Linux environment to AWS by creating and executing a migration plan, deployed EC2 instances in VPC, configured security groups &NACL's, attached profiles and roles using AWS Cloud Formation templates.
Used Amazon Route53 to manage DNS zones globally & to give public DNS names to ELB's and Cloud Front for Content Delivery.
Written Templates for AWS infrastructure as a code using Terraform to build staging and production environments and defined Terraform modules such as Compute, Network, Operations, and Users to reuse in different environments.
Wrote Groovy scripts for setting up LDAP configuration for Jenkins using security matrix.
Experience in implementing AWS lambda to run servers without managing them and to trigger run code by S3 and SNS.
Responsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins along with PowerShell to automate routine jobs.
Developed shell scripts for automation of the build and release process, developed Custom Scripts to monitor repositories, Server storage.
Developed Groovy scripts for automation of build and deployment using Jenkins multibranch pipelines.
Created Ansible playbooks to automatically install packages from a repository, to change the configuration of remotely configured machines and to deploy new builds and various automation purpose, file copy, permission changes, configuration changes, path specific folder creation.
Used Ticketing tool JIRA to track defects and changes for change management, monitoring tools like New Relic and CloudWatch in different work environments in real and container workspace.
Design enterprise patterns that are repeatable and consistent with regards to deployment and configuration of their respective systems.

Implemented Highly-Available ELK (Elasticsearch / Logst & sh / Kibana) stack for log management and Troubleshooting any build issue with ELK (Elasticsearch, Log stash, Kibana) and work towards the solution.
Experience in using Git web hooks and Poll SCM with Jenkins to automate Jenkins tasks and responsible for writing groovy scripts for Jenkins pipelines.
Responsible for installing Jenkins master and slave nodes. Configured Git with Jenkins and schedule jobs using POLL SCM option.

Client: Extra marks Education Pvt. Ltd.,
Location: Hyderabad, India. Sep 2015 â€“ May 2017
Role: Linux Administrator.

Responsibilities:

Installation, configuration, backup, recovery, maintenance, and support of RedHat Linux and Solaris.
User account management worked with shell scripting (bash) to automate administration tasks.
Responsible for installing, upgrading, and managing packages via RPM and YUM.
Logged events from forced crash dumps and troubleshoot server issues.
Configured Yum repository server for installing packages from centralized server.
Installed Fuse to mount the keys on every Debian Production Server for Password-less authentication.
Installed and Configured DCHP server to give IP leases to production servers.
Applied the clustering Topology that meets High Availability and Failover requirements for performance and functionality.
Installation, Configuration and administration of DNS, LDAP, NFS, NIS and send mail on Red Hat Linux/Debian Servers.
Troubleshooting Day-to-Day issues with various Servers on different platforms.
File system Administration, Setting up Disk Quota, solutions on SAN/NAS storage.
Configuration and administration of Clustered servers on SUSE Linux environment.
Configuring backups on newly built servers and monitoring failed backups.
Install and configure Ubuntu, Centos on remote servers and Desktop servers.
Installation of patches and packages using RPM and YUM in Red hat Linux.
Installed and configured Apache/Tomcat web server.
Regularly manage backup process for server and client data.
Administered Linux servers for several functions including managing Apache/Tomcat server, mail server, MySQL database, SVN.
Installed new servers using kick-start installation, lockdown the servers and perform performance tuning for database installation and configuration.

Client: Zensar Technologies
Location: Pune, India. June 2013 â€“ Aug2015
Role: Linux Administrator.

Responsibilities:

Worked on variety of Linux platforms (Ubuntu, Red hat) which includes installation, configuring and maintenance of applications on this environment.
Performed Data Migration from AIX LINUX to Redhat Linux.
Created the CRON jobs for file backups.
Configured and Monitored JBOSS instances.
Troubleshoot complex issues ranging from system resources to application stack traces.
Installed, configured and updated LDAP, DNS, DHCP, NFS, NIS+ on Red Hat Linux and IBM AIX servers.
Involved in support databases and performed MS SQL upgrades running on Windows servers.
Code compilation and moving to test environment by automated process.
Installation, configuration and administration of Linux (Red hat, CentOS).
Remotely copying files using SFTP, FTP, SCP and FileZilla.
Wrote UNIX shell scripts for automated installations, to extract logs using C, Bash, Perl and Python.
Set up and configure Network, switches, routers, WAN and Firewall.
Extensive knowledge of Linux/Windows based system including hardware, software and applications.
Experience in development with Perl, Python, Power Shell or other scripting languages.
Project Management for various UNIX/Linux/Windows system integration projects.

Sreeja Reddy Deshireddy
(Sr.DevOps Engineer Cloud Engineer)
Contact this candidate