Name: Sanjana
Email: ad390f@r.postjobfree.com
Phone: +1-901-***-****

8+ years of Strong Experience as a DevOps Engineer in comprising of Automating, configuring and deploying instances on cloud environments and Data Centers and mostly involved in the areas of DevOps, AWS/Azure, CI/CD pipeline, Build and release management, and Linux/Windows Administration.

Professional Summary
Worked with AWS Cloud services like EC2, VPC, IAM, RDS, ELB, EMR, ECS, Auto-Scaling, S3, Cloud Front, Lambda, Elastic Cache, Route53, Ops Work, Cloud Watch, Cloud Formation, DynamoDB, SNS, SQS, SES, Lambda, IAM, (ELBs).
Mastery in virtualization of servers utilizing Docker, worked with Docker Engine and Docker Machine, to send the miniature administrations arranged conditions, design mechanization utilizing Docker containers.
Experience as Lead for building backend infrastructure from scratch using core cloud services (AWS - Developer Tools, IAM, CFT, R53, VPC, S3, EC2, ELB, EBS, Lambda, Auto-Scaling, Cloud Watch & Cloud Trail, Azure- Repo, Pipeline, Artifacts, AD, VNet & ARM).
Experience in changing over existing AWS infrastructure to Serverless architecture (AWS Lambda) through the creation of a Serverless Architecture using Lambda, API gateway, Route53, and S3 buckets.
Expertise in DevOps, Release engineering, Configuration Management, Deployment Automation, Cloud Infrastructure, and Automation with Agile methodologies which incorporates Azure, AWS, Bitbucket, Jenkins, Nexus, JFrog, SonarQube, Ansible, Chef, Tomcat, JBOSS, WebLogic, Linux, Python & Shell Scripting.
Experience in using containerization and container management tools like Docker, Docker Compose, and Kubernetes, for Orchestration, deploying the services related to the Containers and with container-based deployments using Docker.
Strong experience in Orchestration of Docker Container Deployments with Kubernetes and highly experienced on OpenShift K8s Platform.
Expertise in writing Ansible Playbooks from scratch using YAML functions and utilizing setup and automating the CI/CD pipeline and deploying microservices. Provisioned load balancer, auto-scaling group, and launch configuration for microservices using Ansible.
Highly Proficient in developing Puppet modules for Automation using a combination of Puppet Master, R10K Wrapper, Git Enterprise, Vagrant, and Simple UI.
Excellent Hands-on experience in using Jenkins modules such as Build Complete Action, Build Plan, definition, and Administration configuration. Set up Continuous Deployment for the various test environments utilizing Jenkins.
Strong experience in using build management tools like Maven, Ant, and Gradle for the building of deployable artifacts (jar, war, and ear) from source code and used artifacts repository managers like Nexus, JFrog for Maven builds.
Experience in branching, tagging, develop, manage Pre-commit, Post-commit hook scripts and maintaining the versions across different Source Code Management (SCM) tools like GIT, Subversion (SVN) on Linux and Windows platforms and SCM client tools like GitLab, GitHub, GitGUI, and BitBucket.
Experience in automation of Environment Builds (provision and configuration management) by developing the Ansible playbooks and roles in YAML code by integrating with Github, Jenkins and AWS.
Configuring and managing both on-cloud and on-premises Git-Hub repositories and administration of user accounts and ensuring proper sink of local as well as remote repositories.
Experience in Virtualization technologies VMWare, Virtual box, for creating virtual machines and provisioning environments and in using Tomcat and Apache web servers for deployment and for hosting tools.
Experience in keeping up and looking at log archives using monitoring tools like Splunk, Nagios, CloudWatch, ELK (Elasticsearch, Logstash, Kibana), and App Dynamics.
Expertise in working with different Bug Tracking Tools like JIRA, Clear Quest, and Quality center.

Technical Skills:
Linux Distributions
RedHat, Ubuntu, CentOS 6.x,7.x
Operating Systems
Windows 2003/2008, UNIX, Linux, Ubuntu, RHEL, Debian
CI/CD Tools
Build Master Jenkins, Jenkins
Configuration Management Tools
Ansible, Chef, Puppet,
Containerization Tools
Docker, Kubernetes, Docker Swarm
Version Control Tools
Subversion(SVN),GitHub,CVS, GitLab, Bitbucket
Build Tools
Maven
Databases
MSSQLSSQLservers,MySQL
Bug/ Ticket Tracking Tools
JIRA, Servicenow
Cloud Platform
AWS, MS Azure, Google cloud(GCE)
Testing Tools
Selenium, Junit
Repository Management tools
Artifactory, Nexus, Docker Hub
Monitoring Tools
Nagios, ELK Stack, Datadog, Splunk, New Relic.
Application Server
Apache HTTPD, Apache Tomcat, Web Sphere, Web Logic, JBoss EAP 6.x/7.x, JBoss Fuse 6.x, JBoss AMQ 6.x, 7
Programming Languages
Python, Java
Scripting Languages
Shell scripting, Perl, PHP
Web Technologies
HTML, CSS, HTTP, Bootstrap, Xml and PHP

Role: AWS/DevOps Engineer March 2019 – Present
Client: Administration of Courts (AOC), Louisville, KY.

Responsibilities:

Automating the build and deployments for different platform specific applications from end-to-end on AWS EC2, EBS, S3, IAM, Route53, Lambda, SNS to reduce manual interventions for application teams in agile environment using DevOps strategies.
Designed and built AWS Infrastructure using various resources scubas, VPC, EC2, S3, IAM, EBS, Security Groups, Auto Scaling, Transfer for SFTP, CloudFront, VPC, Cloudwatch, Lambda, Lambda, RDS, and AWS CLI.
Building and managing applications on multi-tier architecture hosted on Azure (Repo, Pipeline, VM, VNet, Artifacts) and orchestrating the services with auto-scaling technique using Terraform.
Highly experienced working with Docker and used to implement among the ECS service in AWS, Validating the count of containers and health check of specific containers by observing their CPU, memory Utilization.
Involved in AWS CloudWatch, CloudFormation, Cloud Trail services and CloudFront to setup and manage cached content delivery. Created Elastic load balancers (ELB) and used Route53 with failover and latency options for high availability and fault tolerance.
Managed all the required change orders using ServiceNow before the prod-deployments and utilized several tools for deployments and managing the environment rigorously.
Extensive experience in setting up the CI/CD pipelines using Jenkins, Maven, Nexus, GitHub, Chef and AWS.
Worked with Kubernetes to provide a platform for automating deployment, scaling, and operations of application containers across clusters of hosts and managed containerized applications using its nodes.
Create Docker images using a Dockerfile and work on Docker container snapshots, remove images, manage Docker volumes as well as set up Docker Host.
Worked on creating the Docker containers and Docker consoles for managing the application life cycle.
Create Ansible playbooks to automatically install packages from a repository to change the configuration of remotely configures machines and to deploy new builds.
Involved in source control management with GitHub and GitLab enterprise level repositories. Regular activities include configuring user’s access levels, monitor logs, identifying merge conflicts and managing master repository.
Branch, tagging, and maintain the version across the environments using SCM tools like GIT, Subversion (SVN) and TFS.
Highly experienced using PGAdmin 4 (Postgresql) to customer’s data using DDL, DML statements. Familiarized with different databases like SQL, RDS.
Defined dependencies and plugins in Maven POM.XML for various activities and integrated Maven with GIT to manage and deploy project related tags.
Installed and managed Nexus repository to deploy the Maven artifacts and to save the dependent jars which are used during the build.
Developed build and deployment scripts using Maven. Automated the process using plugins available Jenkins and move from one environment to another throughout the build pipeline.
Configuring Autoscaling groups and attaching required scaling policies if required. Additionally applying the robo-hydration tag’s in Non-Prod environment which requires no AMI-rehydration.
Experienced in creating s3 buckets, SNS topic and subscription, IAM roles, updating the security groups, Route53. Utilizing them used to spin up the infrastructure or application.
Experience using Source code, SVN, Git-hub, Git to store all the files in the private repository which can be re-usable for any deployments or any happening amendments.
Configuring 7PS tests to validate the performance test of the precise-application status by swagger and graphana dashboard.
Worked with Apache Tomcat Application Server and experience in creating users, groups and roles Apache HTTP Server.
Expertise in creating new app, creating the splunk dashboards and setting up the alerts and integrating the alerts to trigger with pagerduty Monitoring tool.
Experienced in Routing traffic to the new infrastructure which got created and monitored them with various tools known Graphana, Splunk, New Relic, Data Dog.
Anonymous in testing the ELB’s or ALB’s to receive the success response from Soap UI/POSTMAN, and validating through Splunk Logs and Used to pass Soap requests to retrieve the results.
Monitor entire API’s using Pagerduty alerts which supports in triggering the incidents when the application health is going down or if any instance got terminated.
Integrating pagerduty with different services suchas, AWS, Splunk, DataDog, New relic, and Slack to receive the alerts as per the escalation Policies.
Created Shell scripts for scheduling automated backups from a file system (mounted as a local mount point) to a local disk using rsync and sent email upon completion.
Experience with RHEL6, RHEL7 Linux machines, deploying and monitoring the infrastructure in different environments DEV, IT, PROD.
Customized Splunk dashboards, visualizations, configurations using customized Splunk queries.

Environment: AWS - EC2, S3, VPC, IAM, RDS, R53, Lambda, Azure - Repo, Pipeline, Artifacts, Maven,Jenkins, Nexus, JFrog, Terraform, Ansible, Docker, Kubernetes, Service Now, Splunk, JIRA, Confluence, Shell Scripting, Python, JBOSS, Tomcat.

Role: DevOps Engineer Jun2018 – Feb 2019
Client: Midwest tapes, Toledo, Ohio.

Responsibilities:

Experienced in designing and deploying several applications utilizing almost all the AWS stack (Including EC2, Route53, S3, RDS, Dynamo DB, SNS, SQS, IAM) focusing upon high-availability, fault tolerance, and auto-scaling in AWS Cloud Formation.
Managed the AWS VPC network for the Launched Instances and configured the Security Groups and Elastic IP's accordingly. Worked with Cloud Trail, Cloud Passage, Check Marx, Qualys Scan tools for AWS security and scanning.
Provided automation, scalability, and reliability testing for services and infrastructure components in AWS and Developed automated scripts to deploy services and infrastructure components in AWS.
Created Python Scripts to Automate AWS services, include web servers, ELB, Cloud front Distribution, database, EC2 and database security groups, S3 bucket also the application configuration, this Script creates like stacks, single servers or joins web servers to stacks.
Creating the automated build and deployment process for application, re-engineering setup for better user experience, and leading up to building a continuous integration system for all our products.
Modified AWS Cloud Formation templates to design custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.
Proficient in Python, Shell Scripting, SQL, build utilities like open make, ANT and Cruise Control.
Involved in designing and deploying various applications utilizing almost the entire AWS stack (Including EC2, Route53, S3, RDS, Dynamo DB, SNS, SQS, IAM) focusing on high-availability, fault tolerance, and auto-scaling.
Managed migration on premises applications to cloud, and created resources in cloud to enable this. Worked with all critical AWS tools, used ELBs and Auto-Scaling policies for scalability, availability and elasticity.
Configured with Red Hat OpenShift Container Platform for Docker and Kubernetes. Used Kubernetes to manage containerized applications using its nodes, ConfigMaps, selector, Services and deployed application containers as Pods.
Integrated Docker container orchestration framework with Kubernetes by creating pods, config Maps, deployments, Replica sets, nodes etc.
Deployed multiple databases and applications using Kubernetes cluster management, some of the services are Redis, Nginx etc and maintained Kubernetes to manage Containerized applications.
Worked on Kubernetes for creating new Projects, Services for load balancing and adding. them to Routes to be accessible from outside, Creation of Pods through new application.
Managed Kubernetes and Docker for the runtime environment of the CI/CD system to build, test scaling of pods, troubleshooting pods through SSH and logs, writing/modification of Buildconfigs, templates, Imagestreams etc.
Building/Maintaining Docker container clusters managed by Kubernetes, and Orchestration of Docker images and Containers using Kubernetes by creating entire master and node.
Designed, managed and performed container-based deployments using Docker images containing Middleware and Applications together and evaluated Kubernetes for Docker container orchestration.
Configured container based on deployments using Docker, working with Docker images, Docker Hub and Docker-registries and Kubernetes.
Configuration Automation using Ansible and Docker Containers. Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications. Automation of various administrative tasks on multiple servers using Ansible. Demonstrated on Ansible along with Ansible Tower can be used to automate different software development processes all over the team organization.
Using Ansible with AWS allowed me to reduce costs for the department and eliminate unwarranted resources.
Managing AWS infrastructure and automation with CLI and API and working on Inbound and Outbound services with automation Ansible.
Integrated Jenkins with various DevOps tools such as Nexus, SonarQube and used CI/CD system of Jenkins on Kubernetes container environment, utilizing Kubernetes and Docker for the runtime environment for the CI/CD system to build and test and deploy.
Built scripts using MAVEN build tools in Jenkins to move from one environment to other environments and made some changes in the POM.xml file.
Managed the Maven Repository using Nexus tool and used the same to share the snapshots and releases of internal projects.
Worked with Version control tools GIT Branching, Merge Strategies, migrated projects from Subversion repositories to GitHub Enterprise repositories through Team Foundation server (TFS).
Install and configured Jenkins by the level 0 on AWS and migrated jobs from old Jenkins server to the latest server authenticated Jenkins to use GitHub credentials created a mechanism to run Jenkins jobs when changes are pushed into GitHub.
Maintained GitHub and helped set up GitHub accounts for new employees. Configured and integrated Jenkins using Git-Hub repositories using webhooks
Working on DevOps platform and have gained experience in specialized areas related to Ansible for Cloud Automation
Experience in working with Red Hat Linux machine, and worked with installation, deployment and maintenance of middleware application servers to RHEL Dev and Test environments.

Environment: AWS Architecture, AWS Infrastructure, VPC Design, Transit VPC, VPC flow logs, Docker, ECS, EKS, Clusters, Jenkins, AWS Lambda, AWS CloudFormation, Terraform, SQL, MYSQL, PostgreSQL, Datadog, Jira, Confluence.

Role: Build and Release Engineer Aug2014 – Dec 2016
Client: Infor Global Solutions, India

Responsibilities:

Installed and configured Jenkins as a continuous integration tool and built multiple jobs using Maven clean, test, package.
Installed and configured SVN and GIT and cloning, pull requests and pushing repositories into GitHub where source code is used in Jenkins for build configurations.
Jenkins is used as a continuous integration tool for automation of daily process and built Jenkins jobs using GitHub repos for managing weekly Builds too.
Expertise in Building Automation scripts such as Maven, ANT, for deploying the artifacts (JAR, WAR) using source code from GIT.
Expertise in creating GIT repositories and creating the pull requests and Merging pull request and also pushing new projects to GitHub.
Performed SVN to GIT migration and implemented & maintained the branching and build/release strategies utilizing GIT.
Configured Sonarqube scanner for code analysis, code smell, finding bugs and checking the quality levels of particular code.
Installed Nexus repository tool to maintain the artifacts/dependencies jars using Git repository deployed all the artifacts into Nexus working with Jenkins.
Expertise in using Ansible to manage Web Applications, Config Files, Data Base, Commands, Users Mount Points, and Packages. Ansible to assist in building automation purposes.
Expertise in implementing Software Release Management strategies for multiple applications according to the DevOps process.
Strong experience in setting up project baselines, branching, merging and taking regular backups of the source in Clear Case, Subversion (SVN), GIT and Performance.
Enable customers to better manage software development, deployments and infrastructure with tools such as Ansible, GITHub and Jenkins.
Integrated Eclipse IDE with different versioning tools like Clear Case, SVN, CVS, and GIT and configured respective Maven Projects.
Proposed branching strategies for version control tools like GIT, Stash, GitHub and creating files and pushing into the GitHub, Modifying.

Environment: GIT, Maven, Docker, Jenkins, Apache Webserver, JIRA, Windows, Python, Perl, PowerShell, Ansible, uDeploy, Splunk.
Contact this candidate