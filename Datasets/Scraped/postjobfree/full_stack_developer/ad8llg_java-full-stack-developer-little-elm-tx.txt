AISHWARYA MAROJU
Sr. Java Full Stack Developer
Contact: 469-***-****
E-mail: ad8llg@r.postjobfree.com
Linked In: https://www.linkedin.com/in/aishwarya-maroju-250a071a2/
PROFESSIONAL SUMMARY

Expertise in analyzing, designing, developing, testing, and deploying Web and Enterprise Applications using Java/J2EE technologies.
Highly expertise in building Restful Web API with Spring, Spring Boot, and testing APIs using Postman.
Extensively worked on Spring JDBC, Spring Hibernate ORM, Docker containers, and JPA.
Experience in producing and consuming Web Services technologies like Restful (JAX-RS), SOAP (JAX-WS), JAX-RPC and JAXR (Java API for XML Registries).
Highly expertise in building and developing Web and Enterprise applications using technologies like JDBC, Servlets, Web Sockets, JSP, EJB, Java Server Faces (JSF), Java Persistence API (JPA), JNDI and JMS.
Proficient on implementation of frameworks like Struts, spring, JSF, AJAX frameworks (Rich Faces, My Faces) and ORM frameworks like Hibernate.
Proficient in React for building dynamic user interfaces and working with Docker containers and Kubernetes for containerization and deployment.
Expertise in designing and implementing scalable and secure Amazon EC2, ECS, S3, EMR, VPC, VPN, Lambda, IAM, Load Balancing, optimizing system performance, and driving cost-effective solutions.
Expert in Azure cloud technologies VM’s, AKS, ACI, CDN Proficient in designing and implementing scalable Azure solutions, optimizing application performance, and ensuring secure, cost-effective cloud environments.
Strong programming abilities in web-based technologies such as Spring Boot for the design and implementation of multi-tier systems, as well as proficiency with Spring Core features like Annotations, Configurations, and Dependency Injection.
Expertise in designing and implementing RESTful APIs using Node.js, including authentication, authorization, and data validation.
Engineered custom Camel components to encapsulate complex business logic, enhancing the reusability of integration patterns and reducing development time by 25%.
Experience in Installing, Configuring, Deploying, and maintaining Application and web Servers such as Oracle Web Logic, Red Hat, JBoss Enterprise Application platform (EAP), Apache Tomcat Server, IBM Web Sphere.
Have used Apache Camel, Apache CXF, Apache Kafka, RabbitMQ, Service Mix and JBoss Fuse Enterprise Service Bus (ESB) for integrating and deploying the applications.
Experience in Developing Application using frameworks Spring Dependency Injection (DI), IOC, Aspect oriented Programming (AOP), Instrumentation, Integration, Security, Boot, Struts, IBatis and Hibernate.
Good expertise in Core Java Such as OOPs, Collections, Exceptions Handling, Input/output (I/O) System, Swing, Annotations, Enums, Concurrency, Multi-Threading, Lambda and Generics.
Knowledge and proficiency with the Factory, Observer, Singleton, Prototype, and Facade Design Patterns.
experience with HTML5, CSS3 for designing and creating interactive front-end applications.
Experience with Angular, React, Backbone.js, TypeScript, Express.js, Bootstrap, Node.js, and JavaScript in the design and development of dynamic, user-interactive websites.
Experienced in using JAVA Spring JPA with Hibernate to integration MySQL, or SQL Server into back-end web applications and performing CRUD and aggregation operations on a database.
Developed backend logic using Core Java, Micro services, REST API including Collections and multithreading involved in writing backend Packages extensively in PLSQL.
Actively involved in all phases of the Software Development Life Cycle (SDLC), working in a development environment based on Agile methodologies, and attending SCRUM and spring/iterations meetings.
Experience with major relational databases - Oracle 9i, 10g, SQL Server,Postgre SQL, DB2, and My SQL.
Proficiency with Continuous Deployment (CD) tools such as Elastic cloud and Continuous Integration (CI) tools like Jenkins, Hudson, Travis, and Bamboo.
A great deal of expertise creating UML modeling diagrams, including class, sequence, and use case diagrams.
Possessing excellent interpersonal skills, the capacity to work both individually and collaboratively, and the ability to pick things up fast and adjust to new situations with ease in the workplace.
Has experience working with clients and resolving issues with the application environment. Ability to communicate well with individuals at all levels, including senior management, internal teams, and stakeholders.

EDUCATION
Bachelors in Computer Science and Engineering, Jawaharlal Nehru Technological University, India. May, 2012

TECHNICAL SKILLS
Programming
Java 8/11/17, Python, Java script, SQL, PL/SQL
Java Frameworks
Spring, Spring Cloud, Spring MVC, Spring Web, DI, Spring AOP, GWT, Spring Boot, Spring Batch, Spring Security, Spring Data, Struts 1.2, Struts 2.1, Hibernate, JPA
Scripting Languages
JavaScript, Type Script, Bash, Perl, UNIX Shell Script
Web Development
jQuery, Dojo, Ext JS, Angular 14/11, JavaScript, CSS2, CSS3, HTML4, HTML5, Node JS, Angular 16, React, Express JS
Databases
Oracle, MySQL, MongoDB, Dynamo DB, SSIS Server, DB2, Cassandra and MS Access 2000
Cloud Technologies
AWS (EC2, S3, Lambda, EKS, ECS, AWS code Pipeline, EFS, IAM)
Azure (VMs, AKS, ACI, Azure Functions, Storage (File, Blob, Table), CDN, VPN), Terraform
Version Control
Git, Tortoise SVN, Rational ClearCase, GitHub, CVS
Tools
IntelliJ, V S Code, MySQL Workbench, Eclipse3.0, Net Beans5.0, Dream weaver 2000, Tableau, JUnit, J meter, Maven, Gradle.
Build Tools
Maven, Gradle, ANT
DevOps Tools
Jenkins, GitHub, GitLab, Docker, Kubernetes, Splunk Cloud,
XML Technologies
XSLT, JAXP, JDOM, SAX, DOM, XPATH, XPOINTER, XML, XSD, DTD
Web Services Tools
RESTful, JAX-RS, JAX-WS, JAX-B, Apache CFX, WSDL, SoapUI 4.0,5.1, UDDI
Message Brokers
Apache Kafka, Amazon Kinesis, RabbitMQ, Apache Active MQ
Web Servers
JBoss, WebLogic, Web Sphere, Glassfish, Oracle WebLogic 10.x/9.x, IBM WebSphere 8.x/6.x, Apache Tomcat 8.0/7.x/6.x.
Methodologies
Agile (XP, Scrum), Rational Unified Process (RUP), Waterfall, Kanban

WORK EXPERIENCE:

Client: Barclays, Whippany, NJ Jul 2022 – Present
Role: Sr Java Full Stack Developer

Responsibilities:
Proficient in AGILE methodology (SCRUM) for efficient project management, including requirements gathering, analysis, design, development, and testing.
Developed and maintained LoanIQ-based applications utilizing Spring Boot for backend services, ensuring seamless integration with AWS cloud infrastructure for scalable and secure financial solutions.
Designed and implemented front-end components using Angular 14, delivering responsive and intuitive user interfaces for LoanIQ applications, enhancing user experience and efficiency.
Implemented RESTful APIs in Spring Boot to enable seamless data exchange between LoanIQ applications and other financial systems, ensuring data integrity and security across platforms.
Utilized Java 17 version, object-oriented programming (OOPS), and advanced features like Lambdas, Streams, Observables, and Completable Futures.
Enhanced application security by integrating AWS Identity and Access Management (IAM) into the LoanIQ system, ensuring secure and compliant access controls.
Developed RESTful APIs using Spring Boot and Spring MVC to handle payment processing, transaction management, and integration with external payment gateways, ensuring robust and scalable service endpoints.
Implemented data persistence layers with Spring Data JPA and Hibernate for storing and retrieving payment transactions and user information, ensuring data consistency and high performance.
Secured the payment platform with Spring Security, implementing OAuth2 and JWT-based authentication mechanisms to protect sensitive financial data and ensure secure transactions.
Enabled asynchronous processing of payment transactions using Spring Boot’s @Async and Spring Integration, improving the platform’s performance by offloading time-consuming tasks to background processes.
Designed and configured microservices architecture using Spring Cloud components, such as Eureka for service discovery and Zuul as an API gateway, enabling seamless communication and load balancing across payment services.
Implemented Core Java concepts like Multithreading, Concurrency, Exception Handling and Collections wherever necessary in the application.
Experienced in setting up, configuring, and managing Kafka clusters, including cluster sizing, deployment, and monitoring.
Experienced OPA that allows you to write policies as code. Policies are expressed in a high-level declarative language called Rego.
Skilled in HTML5, CSS3, Media Queries, and Bootstrap for responsive web design, along with JavaScript for DOM manipulation and tested Angular applications using testing frameworks such as Jasmine and Karma.
Integrated Open stack API with Amazon EC2 cloud-based architecture in AWS. Developed AWS S3 to copy project artifact into S3 bucket.
Designed and implemented NoSQL data models in MongoDB, ensuring that the database schema aligns with the application's data requirements.
Proficient in optimizing MongoDB queries and aggregations for improved performance, allowing for quick access to data for various features and functionalities.
Implemented MongoDB replication for data redundancy and sharding for horizontal scaling to handle large volumes of data effectively.
Successfully migrated data from existing data sources (MySQL & Postgres) to MongoDB, ensuring seamless data transfer and compatibility with the new data storage solution.
Strong understanding of Hibernate and its various components, including HQL, Hibernate Criteria, and Hibernate Caching, for efficient data access and manipulation.
Implemented responsive and dynamic user interfaces utilizing Angular 14 CLI and Angular 14 Material components. Utilizing Angular 14, integrated with RESTful services written in Java, which increased customer engagement by 40% through an improved user interface and user experience.
Developed CI/CD system with Jenkins on Kubernetes environment, utilized Kubernetes and Docker for the runtime environment for the CI/CD system to build, Test and Deploy.
Utilized advanced Java 17 features including Local-Variable Type Inference, Sealed Classes, New String Methods, and more to enhance code quality and maintainability.
Expertise in developing microservices using Spring Boot, along with unit testing using JUnit and mocking using Mockito.
Proficient in containerization technologies like Docker, and REST Microservices for scalable deployment.
Integrated GraphQL with backend systems and databases, allowing seamless data exchange and integration.
Integrated Lambda functions with AWS event sources like Amazon S3, Amazon DynamoDB, AWS API Gateway, AWS SNS, and AWS CloudWatch Events.
Developed Python scripts to automate routine administrative tasks, such as database backups, log rotations, and system health checks, reducing manual intervention by 50%.
Implemented Python-based data extraction and transformation scripts to integrate with third-party APIs, ensuring seamless data flow into the system.
Utilized Python for batch processing of large datasets, optimizing performance and ensuring timely data availability for analytics.
Integrated Python with AWS Lambda for serverless execution of data processing tasks, improving scalability and reducing operational costs.
Performed container orchestration using Kubernetes and API testing using POSTMAN.
Experienced in WebSocket communication using Spring WebSocket for real-time data transfer.
Proficient in Jenkins, Git, and Maven for continuous integration and version control, along with JIRA Issue Tracker for efficient project tracking and collaboration.
Ability to unit test Java 17 applications using JUnit or TestNG. Experienced in Test-driven development (TDD) and Agile estimation and planning to ensure high-quality code and effective project timelines.
Skilled in various reporting frameworks such as Jasper Reports, Crystal Reports, and BIRT for generating comprehensive reports and dashboards.
Skilled in Power Apps for building customized applications, Apache log4j for logging and SonarQube/SonarLint for code quality analysis.
Designed and implemented Terraform configurations to define and deploy cloud resources, including virtual machines, storage, networking, and security components.
Experienced in following Agile/Scrum methodology to ensure effective project management and delivery.

Environment: Java 17, JSP, Core Java, Servlets, Spring, Angular 14, GraphQL Hibernate, XML Web service, SOAP, JAX-WS, Unix, JavaScript, JQuery, XML, XSLT, Eclipse IDE, AJAX, JavaScript, JDBC, Windows XP, JUnit4, Log4j, CSS, Query DSL, SQL, PL/SQL, MongoDB, HTML, Bootstrap, JSON, Elastic Search, H2 and MySQL Database, AWS lambda, Junit, Mockito, UNIX, WebSphere, Jetty, Jenkins, GIT, Log4j, SonarQube/SonarLint, Postman, HTTP4E, JFrog.

Client: Walmart, Dallas, TX Apr 2021 – Jun 2022
Role: Sr Java Full Stack Developer

Responsibilities:

Developed RESTful APIs and services using Spring Boot and Spring MVC, implementing core e-commerce functionalities such as product catalog management, order processing, and user authentication.
Designed and implemented database schemas using MongoDB, ensuring efficient data storage, retrieval, and scalability for e-commerce applications.
Implemented resource endpoints for CRUD operations on product catalog, customer profiles, and shopping carts.
Integrated Spring Data MongoDB to connect Java applications with MongoDB NoSQL database. Utilized Spring Data repositories and MongoDB templates for CRUD operations, query execution, and pagination in e-commerce data access layer.
Utilized Spring Data JPA to manage database operations, ensuring efficient data storage and retrieval for inventory data, with each microservice managing its own database for high availability.
Enhanced service discovery and load balancing by integrating Spring Cloud Netflix Eureka and Ribbon, ensuring reliable communication between microservices and efficient resource utilization.
Designed and implemented microservices architecture that decoupled core functionalities into independent services, improving system modularity and allowing for rapid development and deployment cycles.
Optimized inter-service communication using Spring Cloud OpenFeign, enabling seamless and efficient REST API calls between microservices, reducing the need for complex REST clients.
Deployed microservices in Docker containers, ensuring consistency across development, testing, and production environments, and enabling easy scaling of services across multiple instances.
Ensured data consistency across microservices by implementing distributed transactions using Spring Boot’s Transaction Management and SAGA patterns, effectively managing complex workflows and ensuring data integrity.
Automated microservices deployment and scaling using Kubernetes on AWS, allowing for dynamic scaling of services based on load and enhancing the resilience of the system against failures.
Utilized Spring Cloud Config to manage configuration settings across microservices, ensuring centralized configuration management and consistency across environments.
Integrated CI/CD pipelines using Jenkins and Spring Boot, automating the build, test, and deployment processes for microservices, significantly reducing deployment times and ensuring code quality.
Implemented circuit breakers using Spring Cloud Netflix Hystrix, ensuring system stability by gracefully handling failures and preventing cascading issues across microservices.
Enhanced observability and logging by integrating Spring Boot with ELK stack (Elasticsearch, Logstash, Kibana), providing detailed insights and monitoring capabilities for microservices, facilitating quicker issue resolution.
Secured microservices with Spring Security, implementing role-based access controls and JWT authentication to protect sensitive inventory data and ensure secure operations across the platform.
Implemented authentication and authorization mechanisms using Spring Security, ensuring secure access control and protection of sensitive customer data in e-commerce transactions.
Integrated e-commerce applications with AWS cloud services such as EC2, S3, and RDS for scalable infrastructure, storage, and database management in a cloud-native environment.
Developed responsive and interactive user interfaces for e-commerce applications using React framework, HTML5, CSS3, and JavaScript, ensuring a modern and intuitive shopping experience for customers.
Developed reusable React components using TypeScript, ensuring type safety and static type checking throughout the development process.
Utilized React hooks such as useState, useEffect, useContext, and useRef with TypeScript to manage component state, side effects, context, and references. Ensured type inference and type annotations for hook dependencies and return types.
Implemented type-safe unit tests and integration tests for React components using Jest and React Testing Library with TypeScript.
Implemented CI/CD pipelines using Jenkins for automated build, test, and deployment processes of e-commerce applications, ensuring rapid and reliable delivery of new features and updates.
Utilized RabbitMQ as a messaging platform for asynchronous communication between microservices and components in e-commerce application, enabling scalable and resilient message processing.
Leveraged RabbitMQ for asynchronous messaging between backend microservices in the e-commerce platform. Implemented message producers and consumers using Spring AMQP to decouple components and handle high message throughput.
Conducted in-depth analysis of large datasets using Snowflake data warehousing platform.
Implemented data pipelines and optimized queries to improve performance and efficiency.
Utilized Snowflake's features for data integration, transformation, and visualization.
Configured EC2 instance types, sizes, and security groups based on workload requirements and performance considerations.
Stored product images, videos, and documents securely in S3 buckets, enabling efficient content delivery and management.
Configured Amazon CloudWatch to monitor EC2 instances, ECS clusters, and S3 buckets for resource utilization, performance metrics, and operational insights.
Optimized application performance using caching strategies, asynchronous processing, and load balancing techniques, ensuring responsive and high-performance e-commerce platforms for customers.
Documented and tested backend APIs and services using tools like Swagger or Postman, ensuring API documentation completeness and accuracy and verifying backend-frontend integration in e-commerce applications.

Environment: Java 11/17, React 16, Type Script, Spring Repositories, Mongo DB, Rabbit MQ, Web Sphere, RAD, XML, JSON, DOM, XML SAX, Apache Camel, Web Services, Maven, AWS EC2, AWS S3, AWS Lambda, HTML, Web Services, WSDL, SOAP, REST API, Java Script, Jenkins, AWS Cloud Watch, Postman, ELK, Swagger, Jira, Linux.

Client: Sprint, Overland Park, KS Sep 2019 to Mar 2021
Role: Java Full Stack Developer

Responsibilities:

Designed and implemented scalable, robust applications using Java 11 technologies for various telecommunications services, enhancing system efficiency and user satisfaction. Developed dynamic, responsive user interfaces for web applications utilizing HTML, CSS, JavaScript, and Angular 8, improving client engagement and usability.
Utilized Java 11 along with Spring, Spring IOC, Spring MVC, and Spring Cloud to build robust backend services. Developed microservices for various operations to ensure high performance and scalability. Leveraged JavaScript and Angular 8 for creating responsive and intuitive frontend interfaces.
Implemented RESTful API services, facilitating seamless integration between frontend and backend systems and promoting interoperability. Utilized Spring MVC for creating REST endpoints, enabling smooth data exchange and integration.
Collaborated with cross-functional teams following Agile methodologies (Scrum and Kanban) to efficiently deliver projects and meet deadlines. Used Asana for project management and team collaboration, ensuring tasks were completed in alignment with project goals and timelines.
Utilized GitHub for version control, facilitating effective team collaboration and efficient code management. Applied security measures, including JWT, to secure web applications against unauthorized access.
Managed retail data using Oracle DB, implementing complex SQL queries for data retrieval, updates, and transaction management. Employed JTA for managing transactions across multiple resources, enhancing application reliability in distributed environments.
Employed SonarQube for continuous inspection of code quality. Configured and managed application deployment on Apache Tomcat and Azure cloud platforms, ensuring high availability and scalability.
Integrated JMS to facilitate asynchronous communication and system decoupling, improving message handling and Karma, and Cucumber, ensuring code reliability and application functionality.
Utilized Postman and Swagger for comprehensive API testing and documentation, making APIs more understandable and usable. Implemented continuous integration and deployment (CI/CD) pipelines with Jenkins, enhancing development efficiency and code quality.
Utilized Oracle DB's robust transaction management features to handle high volumes of concurrent transactions during peak data time periods. Implemented Oracle DB's strong security features, including data encryption and access controls, to secure customer payment information and transactions. Established comprehensive disaster recovery and data backup strategies using Oracle DB to ensure business continuity.
Implemented key features such as real-time data visualization and interactive dashboards in Angular 8, allowing telecom operators to monitor network performance and manage customer accounts efficiently.
Optimized application performance by leveraging Angular 8’s lazy loading and AOT (Ahead-of-Time) compilation, resulting in faster load times and improved application responsiveness.
Integrated RESTful APIs with Angular 8 to enable real-time communication between the front-end application and backend telecom services, ensuring efficient data flow and synchronization.
Deployed and managed Angular applications on Azure Cloud, utilizing Azure App Services for hosting and Azure Databricks for data analysis, which provided scalable and secure environments for the telecom client’s applications.
Leveraged Azure DevOps to set up CI/CD pipelines, automating the build, testing, and deployment of Angular applications, ensuring rapid delivery and high code quality.
Secured telecom applications by implementing OAuth2 and Azure Active Directory authentication within the Angular 8 application, ensuring compliance with industry security standards.
Enhanced collaboration and code quality by using Azure Repos for version control and conducting regular code reviews, facilitating effective teamwork and maintaining high standards of development.
Designed and deployed microservices using Java 11 and Docker in a cloud environment, which improved system scalability and reliability by 30% and supported the growing demand for telecom services. Automated network configuration and management tasks using Java-based tools, reducing manual intervention by 40% and minimizing human errors in network setups.

Environment: Java 11, JavaScript, Spring MVC, Spring IOC, Spring MVC, Spring Cloud, HTML, CSS, Oracle DB, Angular 8, RESTful API, JMS, Apache Tomcat, Scrum and Kanban, JUnit, Mockito, Jasmine, Karma, Cucumber, GitHub, Eclipse, Azure App, Azure Databricks, Azure DevOps, Jenkins CI/CD pipeline, JWT, Asana, SLF4j, SonarQube, Postman, Swagger.

Client: TransAmerica, NY June 2018 - Aug 2019
Role: Java Developer

Responsibilities:
Designed and implemented microservices architecture for an insurance application, including group insurance, using Spring Boot to create independent, scalable services handling policy management, claims processing, and customer management.
Utilized Spring Core’s Dependency Injection to manage the lifecycle of beans, ensuring loose coupling between components and enhancing the maintainability of the insurance application.
Implemented data persistence layers using Hibernate with a PostgreSQL database, ensuring efficient and reliable storage of policy and customer information with optimized query performance.
Used EJB’s entity beans to map insurance data to relational databases, ensuring efficient persistence and retrieval of policyholder information and claim records with transactional consistency.
Designed and developed the web interface for the insurance application using Struts framework, enabling a clear separation of concerns through the Model-View-Controller (MVC) architecture and improving maintainability.
Created custom Struts actions and forms to handle user input and business logic for insurance operations, ensuring a streamlined user experience and accurate data processing.
Leveraged Apache Kafka for messaging and event-driven architecture within the microservices, enabling real-time data processing and ensuring reliable communication between insurance services.
Secured microservices by implementing Spring Security for authentication and authorization, ensuring that sensitive insurance data is protected according to industry standards.
Performed unit and integration testing using JUnit, ensuring high code quality and reliability across microservices by thoroughly testing each component and interaction.
Containerized microservices using Docker, facilitating consistent deployment across development, staging, and production environments, and enabling easy scaling of insurance services.
Deployed microservices in Azure Cloud using Azure Kubernetes Service (AKS), ensuring high availability, automatic scaling, and efficient resource utilization for the insurance application.
Used Postman for API testing and documentation, ensuring that RESTful endpoints are correctly implemented and meet the functional requirements of the insurance application.
Managed transactions across microservices using Spring Boot’s Transaction Management, ensuring data consistency and reliability during complex insurance processes like claims and policy updates.
Optimized API performance by implementing Spring Cache and Spring AOP (Aspect-Oriented Programming) for cross-cutting concerns such as logging and transaction management, improving the efficiency of the insurance application.
Led the adoption of microservices architecture for breaking down the monolithic Java application into manageable services, improving deployment times by 70% and facilitating easier updates and maintenance.
Implemented Azure API Management to expose and manage the insurance application’s RESTful APIs, enabling secure and reliable access for external clients while providing features like API versioning, throttling, and detailed analytics.
Configured Azure Application Gateway to manage incoming traffic to the insurance application, providing load balancing, SSL termination, and protection against common web vulnerabilities through its built-in Web Application Firewall (WAF).
Used Azure Blob Storage for storing and managing large volumes of unstructured insurance data, such as policy documents and claim forms, ensuring scalable and cost-effective storage solutions.
Integrated Azure Active Directory (Azure AD) for centralized identity and access management, ensuring secure and compliant user authentication and authorization across the insurance application.
Implemented Log4j for customized logging formats that complied with security and data privacy regulations. By enabling the exclusion of sensitive information from logs and supporting secure log storage mechanisms, Log4j played a pivotal role in ensuring that the application met industry compliance standards, safeguarding customer data and maintaining trust.
Developed a customer feedback and review system with Java 11 and Spring MVC, enhancing product pages with user-generated content and boosting customer trust and sales by 25%. Collaborated with cross-functional teams to define and implement Java-based APIs for third-party integrations.
Designed and implemented Kafka-based messaging systems to enable real-time data processing and integration across microservices, enhancing system responsiveness and scalability.
Utilized JSP and JSTL for the efficient management of content presentation and data formatting across application, significantly reducing the development effort required for displaying dynamic data.
Collaborated closely with product managers, UX/UI designers, and business analysts to understand customer needs and market trends, translating them into functional and technical requirements.
Adopted Test-Driven Development (TDD) methodologies, utilizing JUnit and Mockito for backend testing. Integrated Sonar Lint and Swagger for code quality checks and API documentation.

Environment: JAVA 8, Azure Blob, Azure Databricks, Azure API Management, Spring MVC, Spring Batch, Spring Transaction Management, Apache Kafka, Servlets, EJB, Spring, JavaScript, Hibernate, UML, jQuery, Struts, Design Patterns, React, HTML5, CSS3, XML, Eclipse, Oracle ECM, Struts, Web service, SOAP, AWS, LDAP, Microservices, Oracle BPM, JSF, WSDL, Apache CXF, Apache Axis2, Apache Tomcat Server, SOA, Oracle10g, UML, Web logic, Junit
Client: WNS Global Services, Bengaluru, India Oct 2012-Dec 2016
Role: Java Developer

Responsibilities:

Developed a clinical application
Contact this candidate