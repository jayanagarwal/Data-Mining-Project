NAGA BHARATH REDDY CHINTAKUNTA
Full Stack Developer
Phone: 405-***-****
Email: adzmue@r.postjobfree.com

PROFESSIONAL SUMMARY
Senior Java Full Stack Developer with around 10+ years of software development experience in Java/ J2EE, Spring Boot, Spring MVC, Spring Data JPA, JSP, JavaScript, SQL, PL-SQL, Struts, Hibernate, Web Services. Involved in complete SDLC from inception, planning, design, coding and testing to project closure mainly in the intranet, Internet and standalone application design, development, maintenance and production support in n-tier architecture.
Good knowledge of data structures, algorithms, and object-oriented programming.
Strong experience working in a polyglot, multi cloud and hybrid cloud environment.
In-depth understanding of various Design Patterns like MVC, Builder, Singleton, Service Facade, Saga Pattern, Circuit Breaker.
Strong working experience in client scripting language and server-side scripting languages like JavaScript, jQuery, Node JS, Underscore.js, Express.js, React JS, AngularJS, bcrypt.js, Crypto.js, Backbone.js, Require.js, Ext JS.
Experience in using Redux to manage the application state a Redux-promise, Redux-Thunk and Redux-saga.
Experience in implementing Spring Core, AOP, JDBC, MVC and ORM modules.
Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service.
Used Kinesis for real time data analytics and event driven architecture.
Strong Application Integration Experience using Connectors, Transformations, Routing, JMS, Kafka and RabbitMQ.
Diverse experience utilizing tools in N-tier and Microservices architecture applications using Spring Boot, Spring Cloud config, PCF, AWS, Rabbit MQ, Kafka, Zookeeper, Cassandra, My SQL, Restful Web Services.
Worked in Jenkins for continuous integration (CI)of the application and System.
Development of application server part and writing Groovy scripts for Jenkins.
Experience with webservers like tomcat, NGINX and Integrated Development Environments like PyCharm, Intellij, Eclipse, MyEclipse, JDeveloper and RAD.
Delivered POC on Nodejs and NestJS, GraphQL for Integration, Unit and Client-side testing for API’s status codes.
Proficient in developing UI using jQuery and JavaScript Libraries for Web Applications and Mobile Applications.
Expertise creating user validation forms lambda and sending data to server using RESTful services.
Extensive knowledge and hands on experience in developing NodeJS and NestJS applications using MVC frameworks and installation of client-side dependencies using Bower.
Experience working with Groovy with Grails web framework for developing microservices.
Used both JWT and OAuth tokens for the authorization of users.
Used Node JS NPM module Grunt and Gulp to run tasks and build properly the project (compile, minify, concat etc.)
Experience working with SQL Database Components (Tables, Views, queries) mostly MYSQL, PostgreSQL, Oracle, DB2 and No SQL Databases like Mongo DB, Cassandra DB, DynamoDB.
Adapt in building highly scalable, pluggable and interactive web applications with open-source web frameworks like Struts, Spring MVC integrating it with Spring and Hibernate.
Used Docker for containerization and Kubernetes to orchestrate these containers.
Experience in developing persistence layer applications based on ORM between Java and Database using Hibernate.
In-depth understanding of various Design Patterns like MVC, Builder, Singleton, Service Facade, Service Locator, Data Access Object, Data Transfer Object/Value Object, Business Delegate, Decorator and Factory.
Solid proficiency with distributed version control tools such as GIT, GitHub, SVN and cloud platforms like Amazon Web Services (AWS) and their services like EC2, S3, AWS lambdas, ELB, Kinesis, SQS.
Worked on cloud platforms like Microsoft Azure and their services like Azure Virtual Machines, Azure Blob Storage, Azure Functions, Azure Load Balancer and Google Cloud Platform and their services like Google Compute Engine, Google Cloud Storage, Google Cloud Functions, Google Cloud Load Balancing.
Scala has been used for developing some microservices pairing with reactive programming for performing asynchronous tasks.
ELK stack, Splunk has been used for centralized logging at microservice level.
Experience working with RPC for microservices.
Strong working knowledge in developing Restful webservices and microservices using Golang.
Experience with Docker Images/containers and Kubernetes.
Terraform has been used to provision the infrastructure in AWS.
Jenkins and Gitlab are used for CI/CD pipelines.
Worked on (AWS) infrastructure with automation and configuration management tools such as Chef and Puppet.
Expertise in Client Scripting language and server-s ide scripting languages like HTML, CSS, JavaScript, Typescript, JSTL, jQuery, JSON, bootstrap, Angular, ReactJS and NodeJS, Twitter Bootstrap, Web Pack and Grunt/Gulp.
Solid Experience in ReactJS with Redux Frameworks.
Designed training materials utilizing UX design principles and provided training using Adobe Photoshop, Adobe Illustrator CS3 and Flash.
Good knowledge in Angular directives to create reusable elements and attributes, along with easy to test and maintain client-side interactivity in web applications.
Experience in developing react components using both functional and class-based components. Extensively used lifecycle hooks in both react and angular applications for managing the state and controlling the behavior of components.
Used Redux for state management in React and used NgRx for state management in Angular.
Material UI has been used for styling in both angular and react applications.
Jasmine and Karma have been used to test angular applications, used Jest for testing of react applications.
Used GraphQL and Rest API for client server communication.
Comfortable working with both MEAN and MERN stack.
Used Linux commands for building automation scripts.
Story Book is used for designing and documenting user interface components.
Experience in JUnit framework with Mockito, Spring Junit Runner.
Experience in Agile software development process, Behavior Driven Development, Test Driven Development and Scrum.
Strong knowledge on 12 factor app for building modern, scalable, and maintainable cloud native web applications.
EDUCATION

Bachelor of Engineering Sathyabama University, Chennai 2008-2012

TECHNICAL SKILLS
Java/J2EE Technologies
Servlets, JSP, JSTL, JDBC, JMS, JNDI, EJB, JPA
Programming Languages
Java 8 /11/17, PL/SQL, Scala, GO, Python, NodeJS
Application/Web Servers
WebSphere, Jenkins, JBoss, WildFly, Tomcat, IBM WebSphere
Frameworks
Struts, Spring, Hibernate, JSF, Spring Boot, Spring Cloud.
IDEs
Eclipse, IntelliJ 2017.1, NetBeans, Spring Tool Suite (STS)
Web technologies
JavaScript, jQuery, XML, HTML, DHTML, CSS, Angular 12, NodeJS, ReactJS
Web Services
JAX-WS, JAX-RPC, JAX-RS, SOAP, WSDL, UDDI, REST, JAXB, Apache Axis
Methodologies
Agile, Scrum, TDD(Test-Driven-Development), OOAD, SDLC, BDD
Modeling Tools
UML, Rational Rose
Testing technologies/tools
JUnit, JIRA, Jasmine, Karma, Jest
Database Servers
Cassandra, Oracle, DB2, Mongo DB, SQL Server, MySQL
Version Control
GIT, SVN, Rational ClearCase, GitHub, Bitbucket
Build Tools
ANT, Maven, Gradle
Platforms
Windows, Mac, LINUX, UNIX
CI/CD
Jenkins, GitLab

PROFESSIONAL EXPERIENCE

Cardinal Health, Columbus, OH Feb 2021 - Present
Senior Full Stack Developer
Responsibilities
Gathered and analyzed architectural design requirements and functional specifications of the client module.
Performed the detailed design of application and technology architecture components and classes.
Implemented AGILE methodology, participated in daily scrum meetings, code reviews, sprint planning and retrospectives as part of Agile methodology.
Worked on Cardinal Health’s Electronic Health Records (EHR) which comprises of various microservices like patient management, laboratory tests, billing and appointment scheduling.
Developed, maintained and enhanced Microservices using Spring Boot with integration to Mongo DB and Kafka queues.
Achieved synchronization of multiple threads through Multithreading and Exception Handling.
Used executor service for achieving multithreading and used the callable interface.
Implemented business logic using Spring service layer and Spring DAO layer using Spring Framework.
Implementation of Kafka to avoid loss of messages during handling of messages at the consumer level.
Designed best approach suited for data movement from different sources to HDFS using Apache/Confluent Kafka.
Kinesis has been used to generate real time events like application logging and make it available for other microservices to consume the logs and store them.
Currently working with JAVA17 and used HL7 standard protocol for communication between EHR systems.
I use HAPI library dependency which gives us the functionality to parse and handle HL7 messages.
Made use of functional features of JAVA8 like Functional Interfaces, Lambda Expressions, Method References, Stream API for Bulk Data Operations on Collections which would increase the performance of the Application.
Used Java8 features like streams, Lambda expressions and Method References feature.
Maintained Interface compatibility and concurrency in the project using Java 8 new features like default, static methods and Concurrency API.
Used CMM and CMMI process improvement models to help the organization improve software development and project management.
Redis has been used for caching and session management.
Worked with Scala for some microservices for reactive programming.
Used SonarQube, for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs, code smells, and security vulnerabilities and Jenkins to trigger the jobs, used open shift as a cloud to deploy changes to multiple environments.
Used Spring Batch for building batch processing applications.
Secured the API's by implementing Oauth2 token-based authentication/authorization using spring security.
Implemented robust data security measures, including HIPAA compliance, to safeguard sensitive patient information and maintain data integrity.
Depending on the use case developed microservices using Spring Cloud, used Netflix Eureka to manage service discovery and registration.
Used Spring Cloud Gateway, API service, Core Service in microservice architecture for providing scalable and resilient system.
Using GO, developed a microservice for reading large volume of data from PostgreSQL database.
Worked on numerous go frameworks like gin, revel, beego.
Implemented a Continuous Delivery pipeline with Docker, Jenkins and Bitbucket.
Used PCF, OpenShift and Kubernetes for deploying applications in Microservices Architecture.
Used kinesis for real time data driven tasks and kafka as a messaging queue for event driven architecture.
Delivered POC on Nodejs and NestJS, GraphQL for integration, Unit and Client-side testing for API’s status codes for Centene APIs for external providers and prac’s.
Managed and maintained a hybrid server environment consisting of MS Windows Servers and RedHat Linux servers in a virtualized VMWare infrastructure.
Groovy has been used to develop restful microservices.
Designed the front-end screens using HTML5, CSS3. Developed Angular controllers, services, filters and developed HTML templates with various Angular directives.
Story Book is used for designing and documenting user interface components.
Created Angular 12 services and integrated with RESTful APIs using Angular Http Client to send GET/POST request to fetch data from server.
Developed the components using Angular 12 needed for the application from scratch and customizing from various Angular related libraries to meet the application's functionality.
Implemented latest Ecmascript6 (ES6) features like arrow functions, constants, block-scope variables and class inheritance etc.
Used Angular 12 Http services for asynchronous validations for the input fields of the forms with the data existed in the database.
Implemented Angular 12 new APIs and Differential loading that allow you to create custom build and deployment commands using hooks into the familiar ng build, ng test, and ng run commands.
We are also in the testing phase of Angular 14 we developed some POC’s on it and testing is being done.
Used angular 14 features like standalone components, directives and pipes, typed angular forms.
Material UI has been used for styling the UI.
Used Jasmine and karma for unit testing the Angular Application.
SQS has been used for the asynchronous communication between microservices hosted in AWS instances.
Some of the micro frontends were developed using Angular and I was involved in resolving the production level issues for them.
Snow park is used for the data engineering tasks.
Coordinate with web developers, graphic designers, and engineers to improve website interactions, which resulted in a 30% increase in user satisfaction.
Perform testing and research on user journeys, develop storyboards and web copy, and deliver presentations to the UX team on design enhancements.
Implemented row-level security and data encryption in Power BI to safeguard sensitive information and comply with data privacy regulations.
The applications were deployed and managed in multi cloud environment comprising of AWS.
Python has been used for writing scripts automate the deployment processes using python plugins.
Designed and developed the framework to consume the web services hosted in Amazon EC2 instances.
Installed application on AWSEC2 instances and configured the storage on S3 buckets.
Perform S3 buckets creation, policies and the IAM role based polices.
Created monitors, alarms, and notifications for EC2 hosts using Cloud Watch.
Migrated applications to the AWS cloud.
Utilized Cloud Watch to monitor resources such as EC2, CPU memory, Amazon RDS DB services, Dynamo DB.
Created required data structures, triggers, sequences in Postgresql Database.
Used NOSQL database Amazon dynamo DB to store data of reporting Application.
Built a load balanced web server with Tomcat, Nginx, JBoss.
Docker is used for containerization and Kubernetes to orchestrate these containers.
Involved in writing java API for Amazon Lambda to manage some of the AWS services.
Exported SQL data into Elastic search to allow much faster and scalable user searches from the database.
Implemented a 'server less' architecture using API Gateway, Lambda, and Dynamo DB and deployed AWS Lambda code from Amazon S3 buckets.
Expertise in using monitoring tools like Splunk, Kibana, Grafana, Graphite like creating alerts and dashboard.
Worked on identifying errors on multiple servers using status codes and logs and involved in bugfix and Support in on project GO-Live deployment with release team.
Used JIRA ticketing system to keep track of issues and tasks on individuals.
Environment: Java11, Hibernate, Spring Boot, Spring MVC, HTML5, CSS3, Design patterns, JPA, Maven, RESTful Web services, JSON, Kafka, MongoDB, Junit, Mockito, Nginx, GIT, JBoss, SQL, Putty, PostgreSQL, Docker, Angular 12, OpenShift, Kibana, SonarQube, Jenkins, IntelliJ, Windows10, JIRA, Confluence, Agile, AWS, EC2, S3, AWS Lambda, CloudWatch, Jasmine, Karma, DynamoDB, Spring Batch, Kubernetes, Amazon RDS, Tomcat, Splunk, GO, Confluent, Kafka, Redis, Angular 14.

Wells Fargo, Charlotte, NC Aug 2019 – Jan 2021
Senior Full Stack Developer
Responsibilities
Work on AGILE Methodology (Scrum Framework) to meet timelines with quality deliverables.
Used JIRA for project management, Issue tracking and monitoring errors and fixed the Errors and Bamboo as the integration tool and improved scalability of applications on cross-platforms.
Implemented and managed Agile software development processes using VersionOne, enabling cross-functional teams to collaborate effectively.
Involved in Analysis, Design, Development, Integration and Testing of application modules.
Use Team Collaboration Software JIRA and Confluence.
Worked on Client transfer application (CTA) which is an intranet application, which used to facilitate various kinds of money transfer transactions that are ACH, FedWire, Cheques, Wires, Journals.
Developed applications using Frameworks such as Spring Core, Spring MVC, Spring AOP, Spring Security, Spring Cloud, Spring Data JPA, Spring Cloud.
Developed some microservices using Golang and Groovy with Grails web framework leveraging their advantages.
Worked on some microservices which are developed using NodeJS.
Design & developed the REST based Microservices using the Spring Boot, Spring Data with JPA.
Worked on some python-based web based microservices.
Store responses in appropriate file and use SOAPUI tool to test SOAP and REST web services.
Perform Test Driven Development (TDD): Selenium Testing, JUnit Testing and Load Testing.
Use Object/Relational mapping tool to achieve object to database table persistency.
Use the features of Spring Core layer (IOC), Spring AOP, Spring ORM layer and Spring DAO support layer in order to develop the application.
Develop web applications using Object Oriented Programming language JAVA and J2EE Technologies such as JSPs, Servlets, JSON, AJAX.
Used CMM and CMMI best practices for software development and management.
Proficient in customizing and personalizing the trading platform’s user interface to optimize workflow and enhance trading experience.
Utilized remote access tools and technologies to perform system configurations, updates, and troubleshooting, maintaining high availability and minimizing downtime.
Kafka has been used to subscribe to real time data streaming.
Collaborated closely with clients to understand their reporting needs and translated requirements into effective Power BI solutions, resulting in improved data-driven decision-making.
Implemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub.
Use RESTAPI with JAX-RS for consuming web services to handle two interfaces XML and JSON.
Use Nexus for managing all Maven Repositories. Use SoapUI for testing Web Service.
Built a RESTful API to save and retrieve agent information in Java using Spring MVC.
Redis is used for storing cache in application level.
Integrated COBOL programs with relational databases (such as IBM DB2, Oracle, or SQL Server) to retrieve, update, and manage business-critical data.
The application has been integrated with IBM MQ, ActiveMQ for asynchronous communication between systems.
Used Cassandra DB for storing and retrieving time series data.
Used Adobe experience manager to developing the frontend of the application.
Designed and implemented responsive user interfaces in React, ensuring a seamless user experience across various devices and screen sizes.
Integrated React applications with RESTful APIs using libraries like Axios, enabling dynamic data retrieval and real-time updates.
Leveraged React component lifecycle methods to optimize rendering, improve performance, and handle asynchronous operations.
Wrote unit tests for React components using testing libraries like Jest and Enzyme, ensuring code reliability and minimizing regressions.
Modern Driven (Reactive) forms to perform form validations both on server and client side.
Utilized jQuery UI for dialogs, date picker, tabs, model pop ups and advanced components to implement UI model.
Followed Test Driven Development (TDD) methodology for developing test cases and unit testing using Jasmine test framework with the Karma test runner.
Worked in using Redux React Js components, Forms, Events, Keys, Router, Animations and Flux concept.
Implemented Redux, ReactJS client-side form validation to validate the user inputs before passing to back-end.
Involved with front-end integration projects using various frameworks and HTML5, SASS, LESS, CSS3, React, JavaScript, Typescript, Bootstrsap, SCSS, Angular, DOM, and Ajax technologies and methodologies.
Adherence to standards while coding with a keen focus on the Web Content Accessibility Guidelines (WCAG) for accessibility purposes. Implemented tokenizer and validation framework to prevent cross-site-scripting (XSS)
Used cross-origin resource sharing (cors) to allow websites to share resources across domains safely and securely.
Used GraphQL for some clients to connect with the microservices.
Docker has been used for containerization and Kubernetes to orchestrate these containers.
Used Protractor provided by Angular for end to end (e2e) testing.
Used Typescript and its features such as static typing, classes and interfaces. Created TypeScript reusable components and services to consume REST API's using Component based architecture provided by Angular 7.
Involving in designing and developing cloud native applications using Google Cloud Platform.
Worked for full text search platform using NoSQL Elasticsearch engine, allowing for much faster, more scalable and more intuitive user searches for our database of SCA.
Developed custom applications and business rules in ServiceNow to automate manual tasks and enhance service delivery efficiency.
Used Dynamo DB to store the data for metrics and backend reports.
Optimized website and web servers to handle increased loads, including switching sites to Nginx and setting up load balancing with Apache, reducing infrastructure costs.
SQS has been used for asynchronous communication.
Used MySQL, DynamoDB and Elastic-cache to perform basic database administration.
Developed and deployed Java applications on Microsoft Azure, utilizing Azure App Service to ensure high availability and scalability.
Designed and implemented RESTful APIs using the Spring Framework, facilitating seamless integration between front-end and back-end systems hosted on Azure.
Collaborated with cross-functional teams to migrate a monolithic application to a microservices architecture on Azure, resulting in improved development agility and resource utilization.
Integrated Azure SQL Database to store and manage application data securely, optimizing data retrieval times by implementing appropriate indexes.
Collaborated with senior developers to create Azure Logic Apps for automated workflows, improving team efficiency in handling routine tasks.
Gained proficiency in Azure DevOps for managing source code, builds, and deployments, enhancing team collaboration and version control.
Creation, enhancement, and maintenance of PostgreSQL database functions, including reflection of CRUD operations for the object model PostgreSQL, pgAdmin.
As part of agile methodology, perform Continuous Integration and Continuous Deployment of projects using tools Like Bamboo, GIT and Spring Cloud.
Used Netflix Eureka for service discovery, Feign client for microservice communication.
Development with relational database management systems RDBMS including Oracle, Sybase, MySQL, SQL Server, and PostgreSQL
Database development required creation of new tables, PL/SQL Stored Procedures, Views, and Constraints, Triggers and required SQL tuning to reduce the response time in the application.
Involved in Oracle database integration and implementation. (SQL Developer and SQL Plus)
Used Dynatrace to monitor server health for application and integration servers.
Environment: Java 8, Java EE, Hibernate 4.2, Spring4, Spring Boot, Elasticsearch, Dynamo DB, Spring MVC, JPA, TypeScript, Maven, RESTful Web services, JAX RS 1.1, Jersey 1.6, Web Services1.3, Nginx, HTML5, CSS3, JavaScript, AJAX, JSON, Node.js, Angular 7, bootstrap, XML/XSL, Oracle 11g, JUnit, JAXB, WSDL, UDDI, GIT, Groovy, Tomcat, Log4j, SQL, Putty, Azure, Docker, Jenkins, IntelliJ, Firebug, Unix, Windows 7, Github, MySQL, MS SQL, Protractor, Amazon SQS, Amazon SWF, Cassandra, IBM MQ, Bamboo, Git,Kafka.

Volkswagen Group of America, Auburn Hills, MI. Feb 2018 to Jul 2019
Role: Full Stack Developer
Responsibilities:
Involved in various phases of Software Development Life Cycle (SDLC) as requirement gathering, analysis, design documentation, development, test cases, implementing and production support of the application.
Followed AGILE Methodology to promote iterations, collaboration, and process adaptability and participated in SCRUM Meetings throughout the life cycle of project.
Implemented REST web service in Scala using Akka for CBPMAN log tracking application
Worked closely with the Business Analyst and designed the rules and re-evaluated the rule flow in Rule Governance team.
Secured the REST services using Spring Security and OAUTH framework and created documented REST services using Swagger and Jersey.
Deploy and manage applications on JBOSS/Tomcat J2EE server. Managed the codebase using GIT.
Designed and developed Rest Full Web Services tier using Spring, Spring Boot, JBPM.
Used ActiveMQ to transfer .txt files between the Consumer and Producer
Developed code in Java which creates mapping in Elastic Search even before data is indexed into.
Used Hibernate 3.0 in data access layer to access, update and insert information in the database.
Used Java API for XML Web Services (JAX-WS) to convert Java Objects to XML conversions.
Responsible for the creation of Informatica services including Repository Service, Integration Service
Implemented various design patterns in the project such as DAO, Business Delegate, View Helper, Data Transfer Object (DTO), Session Façade, Singleton and Model View Controller.
Gradle is used as a build tool and continuous integration is done using GitLab.
Involving in designing and developing cloud native applications using Google Cloud Platform.
Involved in designing and developing Amazon EC2, Amazon S3, Amazon RDS, Amazon Elastic Load Balancing, Amazon SWF, Amazon SQS, and other services of the AWS infrastructure.
Proficient in using a variety of accessibility testing tools and assistive technologies to assess web content for compliance with WCAG standards.
Worked with Scala for some microservices for reactive programming with Akka.
Used Kafka for the asynchronous communication between the microservices.
IBM MQ has also been used to integrate the legacy applications.
Designed, developed, and deployed RPA solutions using UiPath to automate repetitive tasks and streamline business processes.
Used Maven build scripts to build the application and deploy on Web Sphere application server v6.5.
Developed user interface using JSP with JavaBeans, JSTL and Custom Tag Libraries, JS, CSS, Angular 6, Node.js, Redux, HTML, SASS and Ajax to speed the application.
Developed the Product Builder UI screens using Angular 6, Node JS, HTML5, CSS, JavaScript, and Bootstrap
Worked on Angular 6 controllers, views, and services for new website features.
Managed end-to-end software development lifecycle (SDLC) using ALM tools, ensuring smooth coordination between development, testing, and deployment phases.
Managing analytical tag migration program from legacy system to new tag management system using Adobe DTM.
Used Jasmine and Karma for unit testing for Angular 6 applications.
Docker has been used for containerization and Kubernetes to orchestrate these containers.
Used Perforce Visual Client for updating the view and used Serena Business Manager for bug tracking in test and production environment.
Prepared the High Level and Low Level, UI standard, Code Review, Architectural Review and Project Approval Documents. Environment: JDK 1.6, Scala, Akka, ActiveMQ, SASS, Jasmine, Karma, ReactJS, Flux, Eclipse 3.6, Agile, Spring FW 3.1.0, Cache Abstraction, REST Web Services, tomcat 6, Oracle 11g, Spring MVC, Hibernate, JPA, Maven, JUnit, Log4j, HTML5, CSS3, java Script, JSP, XML, JAXB, Unix, Jenkins, Maven, Angular 6, Design Patterns, Swagger, Hibernate, JBoss, Gitlab, Kafka
State Farm, Bloomington, IL Sep 2016 – Jan 2018
Full Stack Developer
Responsibilities:
•Developed overall new layout of the web portal and Involved in all the phases of the portal changes - analysis, design, development, testing and deployment.
•Developed User Interface using HTML, Bootstrap, CSS, JavaScript, and Vue.JS.
•Leveraged Vue.js directives and templates to efficiently bind data and manipulate the DOM.
•Used spring framework features like Spring Boot, Spring IOC, Spring AOP and Spring Batch.
•Used Web services (SOAP and RESTful) for transmission of large blocks of XML/JSON.
•Implemented Object-relation mapping in the persistence layer using hibernate (ORM) framework. Extensively used DAO patterns, including mapping DAO objects, configure file and classes to interact with databases.
•Integrated with Rabbit MQ to provide event driven architecture.
•Used Cloud formation templates (CFT) to find the resources that needed for the formation of cloud formation stacks
•Developed crypto rest services using NodeJS.
•Conducted comprehensive testing of reactive services using tools like TestContainers and specialized testing libraries to validate behavior under various scenarios.
•Generated JSON format data packets from middle-tire controller to front-end using JSON API.
•Developing Web pages by using HTML5, CSS3 with LESS, React JS and Bootstrap.
•Created custom reusable components for web applications using React JS and applied the Flux and Redux application architecture and discipline.
•Used JEST framework for testing the react components.
•Worked on using ReactJS components, Forms, Events, Keys, Router, Animation.
•React components were developed using classes and used several life cycle methods to handle component changes.
•Used various predefined components from NPM registry and redux library for building UI components.
•Built administrator page displaying profile information in ReactJS and GraphQL.
•Experience and building an isomorphic application using ReactJS with React and GraphQL at server
Contact this candidate