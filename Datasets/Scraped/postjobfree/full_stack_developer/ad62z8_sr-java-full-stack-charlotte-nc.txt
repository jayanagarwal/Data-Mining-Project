Mahesh Nalla
Email:ad62z8@r.postjobfree.com
Sr. Java Full Stack Developer
+1-417-***-****

PROFESSIONAL SUMMARY
Over 10 years of software development experience in design and development of Multi - Tier Enterprise application design using object-oriented programming with Java, J2EE technologies.
Experience in large-scale Software Development Life Cycle (SDLC) including Requirement Analysis, Project Planning, System and Database Design, UML design using Rational Unified Process, and Object - Oriented Analysis and Design, Development, Testing, Implementation, and Documentation.
Strong experience in using various web technologies like HTML5, CSS3, Java Script also have experience
in technologies like Angular JS, ReactJS, Redux, NodeJS, jQuery, AJAX, Bootstrap, JSON.
Automate report generation in MongoDB using JavaScript, shell scripting, and java.
Experience in Web Service Technologies: SOAP, WSDL, UDDI, Apache Axis, CXF, IBM JAX-WS.
Familiar with software release management tools (Pivotal Tracker, JIRA, Rally).
Experience in developing client-side, server-side/middle-tier components applying Java/J2EE design patterns and frameworks: Servlets, JSF, Struts, Spring, Web Services, EJB, MQ Services, Hibernate, JDBC, JPA, Log4j, JSP, POJO’s, JSTL, AJAX, JSON, JavaScript, XML, UML, Log4J and Junit.
Extensive experience in designing MongoDB multi-shared clusters and monitoring with MMS.
Proficient on the implementation of frameworks like Struts, spring, JSF, AJAX frameworks (Rich Faces, My Faces) and ORM frameworks like Hibernate.
Transaction implementation (CMP, BMP, Message-Driven Beans), Struts, Spring, Hibernate, Java Beans, JDBC, XML, Web Services, JNDI, Multithreading etc.
Deep knowledge of web services standards and related technologies such as HTTP, JSON, XML, SOAP, REST.
Strong software development skills (configuration management, issue tracking, estimation, Agile/Scrum).
Expertise in the implementation of Core concepts of Java, J2EE Technologies: JSP, Servlets, JSF, JSTL, EJB.
Good experience in deploying to a cloud platform (Kubernetes, Azure, AWS).
Expertise in a client scripting language and serving scripting languages like JavaScript, jQuery, Next.js, JSON, Bootstrap, Node.js, React JS.
Experienced working with Apache Kafka writing producers/consumers and also good with creating and using Kafka streams/Kafka connectors.
Object Oriented analysis and design using common design Patterns.
Hands on experience in designing and developing applications using Java EE platforms.
Analyse and implement user requirements/ business needs as new to enhanced product functionality.
Integrating with other AWS services, such as Amazon S3 and Amazon Quick Sight, to analyse customer data and generate insights. Assist in the packaging and delivery of finished software products to clients.
Communicate with technical and business leaders on business requirements, system-related capabilities, programming progress, and enhancement status.
Expertise in XML technologies - XSL, XSLT, XML schemas, XPath, Forms, XSL-FO and parsers like SAX, DOM.
Strong experience with MongoDB development (reports, schema design, map reduce functions) and migrations from SQL relational databases.
Experience in writing Queries, Stored Procedures, Triggers, Cursors, Functions, and Packages using TOAD.
Experience with major relational databases - Oracle 9i, 10g, SQL Server, DB2, and My SQL.
Experienced in implementing applications using J2EE design patterns like Singleton, DAO (Data Access Object).
Some experience and familiarity with agile methodology and pair programming (XP, Scrum).
Hands on experience with build tools like ANT, Maven, and logging tools like Log4J.
Expertise in design with Use Case, Sequence diagrams, Activity diagrams, and Class diagrams with exposure to UML, tools like Rational Rose, and the use of Rational Unified Process (RUP).

TECHNICAL SKILLS
Programming Languages
Java (1.5/1.6/1.7/1.8/8/11), SQL.
Software Methodologies
Agile, Scrum, SDLC Waterfall.
J2EE Technologies
Servlets, JSP, JDBC, EJB, JSF, Java Beans XSD, JAX-RS, JAX-WS, SOAP, WSDL.
Web Technologies
HTML, DHTML, XML, CSS, jQuery, JavaScript, AJAX, Bootstrap, JSON, Angular 6/7/8, React JS, Node JS, Express JS, Angular JS, Restful APIs.
Web service Frameworks
Spring, Hibernate, Struts, Spring MVC, Spring IOC, Spring Boot, Spring AOP, Spring Web Flow, JSF, Log 4J, JUnit, Hibernate, JPA.
Web Services
SOAP, RESTful.
Databases
Oracle, MS SQL Server, MySQL, Mongo DB.
O-R Mapping
Hibernate, JPA
Testing Tools/Others
Junit, Mockito, Log4J, Postman, SonarQube
Cloud Technologies/DevOps
Tools
AWS (S3, EKS, EC2), Docker, JIRA.
Build Tools
Maven, Ant, Gradle, Jenkins
Version Control Tools
CVS, GIT, GITHUB, SVN, Bit Bucket.
Application/Web Servers
Web Logic Server, WebSphere Application Server, Apache Tomcat, Apache HTTP Server, JBoss.
IDE Tools
Spring Tool Suite, Eclipse, IntelliJ IDEA, Net Beans
Operating Systems
Windows, Linux, Unix, Mac OS

PROFESSIONAL EXPERIENCE

e-Bay, San Jose, CA. March 2022 - till date Sr. Java Full Stack Developer
Responsibilities:
Involved in Requirements gathering, analysis and design with Agile Environment based on J2EE specifications and Micro services architecture.
Integrated with RESTful APIs to fetch and display product information and leveraging React JS lifecycle methods and hooks.
Experience in developing the User Interface Rich Web Applications and Web Service Applications using User Interface Technologies like HTML, CSS, JavaScript, jQuery, React JS, Ajax Chrome-Developer Tools, and Internet Explorer-Developer Toolbar.
Used React JS Http services for asynchronous validations for the input fields of the forms with the data that existed in the database.
Created custom, self-contained, reusable, and testable Reacts modules, controllers, and services to implement key functionalities for customer account summary.
Used Node JS for server-side encryption and React JS write callback functions for restful API and for navigate to different pages in the application.
Integrating front end elements with the Node.js server and writing testable server-side code.
Developed single page applications using React Redux architecture, ES6, web pack and grunt.
Deployed and managed the applications on Red Hat OpenShift (ROSA) to leverage its Kubernetes-based platform for container orchestration.
Developed third-party payment and REST services, integrating OAuth-based APIs for seamless user payment experiences.
Implemented CI/CD processes using Jenkins, Git, and Maven, ensuring continuous integration and delivery of high-quality software.
Utilized Apache Spark with Java to build and optimize large-scale data processing and analytics pipelines. Implemented Spark transformations and actions in Java to process and analyze big data efficiently.
Conducted unit testing using Jest and React Testing Library to ensure the functionality and behavior of React components.
Implemented Kafka and RabbitMQ to build scalable and event-driven architectures, enhancing real-time order processing and inventory management in platforms.
Used DevsecOps process for ensuring that security is a shared responsibility throughout the entire software development lifecycle.
Promoted team collaboration and communication, ensuring consistent coding standards and practices through pair programming.
Implemented CRUD operations in MongoDB, ensuring efficient data manipulation and storage.
Integrated PostgreSQL for persistent storage and for utilizing JDBC and Spring Data JPA for seamless data access and manipulation.
Integrated Delta Lake with Spark in Java applications to provide ACID transactions, ensuring data reliability and consistency. Managed scalable metadata and unified batch and streaming data processing using Delta Lake APIs in Java.
Developed Microservices using Spring MVC, Spring Boot, and Spring Cloud, adhering to Microservices architecture principles.
Integrated SASS and LESS with Gulp/Webpack for streamlined CSS compilation and improved application responsiveness.
Implemented and maintained SonarQube for continuous code quality analysis across multiple projects.
Utilized Spring Boot with Spring JMS for simplified configuration and management of JMS resources.
Managed and optimized MongoDB clusters, including architecture and capacity planning for efficient data distribution.
Integrated AWS services such as Amazon SQS, CloudWatch, and Fargate to enhance application scalability, monitoring, and management.
Utilized Docker to containerize services and APIs, optimizing deployment and scalability on AWS EC2 instances.
Designed and deployed a highly available microservices architecture using Amazon EKS, ensuring seamless integration with other AWS services such as S3 and RDS.
Integrated gRPC services with existing infrastructure, leveraging its streaming capabilities for real-time data processing, and enhancing system responsiveness and scalability
Implemented security best practices for PostgreSQL to protect sensitive data and maintain compliance.
Implemented RabbitMQ for efficient message queuing and delivery in distributed applications.
Configured IAM Roles and permissions in AWS for fine-grained access control and security.
Used JIRA with Agile plug-ins for issue tracking and project management across teams.
Environment: Java 1.8, J2EE, HTML5, CSS3, Bootstrap, jQuery, JavaScript, Node.js, React JS, JSON, Git, Hibernate, JDBC, RabbitMQ, Oracle, Mongo DB, Mockito, Spring data JPA, Spring Boot, Messaging queues, IBM MQ, Cloud Watch, Fargate, IAM, JAXRS, Gradle, SNS, SQS, Jenkins, Web Sphere, WebLogic, Restful, SOAP, Soap UI, AWS, TDD, Agile Methodology, Log4J, JIRA and STS.

CITI, Tampa, FL Dec 2020 – Feb 2022
Sr. Java Full Stack Developer
Responsibilities:
Developed SPAs using Angular 7/8, Typescript, Angular CLI, HTML5, CSS3, jQuery, JavaScript, and Bootstrap to create dynamic and responsive web applications.
Optimized application performance by implementing code-splitting, lazy loading, and memoization techniques using React js.
Utilized Postman and SoapUI for web service testing and implemented OAuth 2.0 token-based authentication with Spring Security to secure APIs against session fixation and cross-site request forgery.
Managed and tracked project issues and tasks using the JIRA ticketing system.
Built backend components with Spring Boot, including handling authentication, authorization, and access control using Spring Security.
Employed Spring MVC, Dependency Injection, annotations, and other modules to implement business logic and navigation.
Managed scalable storage solutions with AWS S3 for cloud.
Utilized Spock's powerful testing features like data-driven testing, mocks, and stubs to create comprehensive test suites and streamline the testing process
Applied Core Java Collections, multithreading, exception handling, and Java 1.8 features like lambda expressions in development.
Utilized Helm charts and OpenShift templates for consistent and repeatable deployment of applications and services on ROSA.
Conducted code reviews and provided mentorship to junior developers on best practices in OOAD, design principles, and patterns.
Utilized MongoDB and Cassandra for managing data, including transaction records and customer profiles, ensuring high availability and data consistency.
Designed and implemented reusable React components, significantly reducing redundant code and development time.
Developed SOAP web services using XML, WSDL, and UDDI for data transfer.
Created and consumed RESTful web services with Angular for efficient client-server communication.
Followed Agile Scrum methodology throughout all phases of the Software Development Life Cycle (SDLC).
Utilized IntelliJ IDEA, Log4J, and SVN for development, logging, and version control.
Developed Data Access Objects (DAOs) with JPA and Hibernate for CRUD operations on MongoDB.
Designed user interfaces with React, JSX, CSS, and JavaScript, managing state with Redux.
Created REST-based microservices using Spring Boot for scalable application development.
Developed RESTful APIs and microservices with Spring, Hibernate, and Jersey.
Scaled applications using Simple Queue Service (SQS) and employed Docker and Kubernetes for deployment.
Integrated authentication and authorization mechanisms into GraphQL APIs, ensuring secure and controlled access to sensitive data and operations.
Implementation of SonarQube led to the early detection and resolution of code smells, bugs, and security vulnerabilities, improving overall code quality by 30%.
Experienced with relational databases such as MySQL, PostgreSQL, and Oracle, using Spring Data JPA.
Worked with IBM MQ for messaging patterns and security features.
Ensured security best practices in application development and deployment
Enhanced system observability by incorporating gRPC-specific monitoring and logging tools, enabling better performance tracking and faster issue resolution.
Configured AWS CloudWatch for monitoring application metrics and used Swagger for API documentation.
Followed Test-Driven Development (TDD) methodology and used Power Mock for mocking dependencies.
Managed AWS IAM Access Keys and integrated JAX-RS APIs with security mechanisms.
Deployed applications on AWS Beanstalk and implemented Service-Oriented Architecture (SOA) with SOAP/WSDL web services.
Used AWS API Gateway in conjunction with EKS to expose APIs to clients and other services securely.
Implemented CI/CD pipelines and automated infrastructure using AWS CloudFormation and Terraform
Worked extensively with Angular controllers, filters, validations, services, and custom directives.
Environment: JDK 1.8, J2EE, Angular 7/8, Angular 7/6 CLI, Typescript, Spring Boot, Rational Rose, Hibernate, jQuery, AJAX, JSON, XML, Postman, SoapUI, Rabbit MQ, Cucumber, Spring data JPA, Messaging queues, IBM MQ, Cloud Watch, Fargate, IAM, MongoDB, Node JS, React JS, Express JS, Kubernetes, Web logic Server, SVN, JIRA, Grafana, Maven, JUnit, Mockito, Log4J, IntelliJ IDEA.

American Express, New York, NY Aug 2018 – Nov 2020
Java Full Stack Developer
Responsibilities:
Worked in an Agile based development environment and participated in Retrospective, Scrum session for better understanding and communication among team members.
Involved in various phases of Software Development Life Cycles (SDLC) like Design, Development, and testing phases, and developed Use Case diagrams, Class diagrams, and Sequence diagrams.
Designed and implemented data models and operations using Amazon DynamoDB for scalable and low-latency data storage.
Utilized AWS CloudFormation to automate the deployment and management of cloud infrastructure as code.
Interacted with the Business analysts to gather required Functional specifications documents (FSD) for the project.
Used Java8 Lambda expressions along with Streams for creating internal iteration and performing chain operations such as Map, collect on a collection Objects, Filters.
Developed serverless applications using AWS Lambda to execute code in response to triggers and events.
Developed UI using HTML5, CSS3, JavaScript, jQuery, Bootstrap, Angular and NodeJS and Developed prototype and project layout skeletons using React.Js, jQuery, HTML5, and CSS3.
Completely involved in designing and developing persistence layer using jQuery, Ajax, and third-party libraries.
Used various jQuery and Bootstrap plug-in like data picker, Bootstrap selectors.
Developed reusable UI components using Angular 6.
Involved in Java code, which generated XML document, which in turn used XSLT to translate the content into HTML to present to GUI.
Created and managed RESTful APIs with Amazon API Gateway, integrating them with AWS Lambda functions.
Automated deployment pipelines using AWS CloudFormation and AWS Code Pipeline for continuous integration and delivery.
Applied IAM roles and policies to secure AWS Lambda functions, API Gateway endpoints, and DynamoDB tables.
Implemented in setting up and managing clusters, replication, and sharding in Cassandra and MongoDB to ensure data distribution and fault tolerance.
Developed multiple enterprise applications using Hibernate framework, Spring IOC, Spring MVC, Spring Boot, Spring JDBC, Spring Annotations, Spring AOP, Spring Integration, frameworks, RESTful web services.
Implemented authentication and authorization for the application using Spring Security and Oauth2.
Implemented Spring IOC for Dependency Injection and to make the code loosely coupled and Spring AOP for logging purposes.
Integrated GraphQL with existing RESTful services, enabling a smooth transition and enhancing API capabilities while maintaining backward compatibility.
Implemented SOAP based JAX-WS Webservices interfaces for integrating multiple systems, code re-usability and consumed JMeter to test performance of SOAP protocol.
Implemented RESTful web services which produces both XML and JSON files to perform tasks, RESTful web services using Jersey for JAX-RS implementation, which leveraged both web & mobile applications.
Implemented Microservices into existing system architecture.
Led the design and implementation of complex software systems using OOAD methodologies, ensuring scalability and maintainability.
Developed Microservices business components and RESTful service endpoints using Spring Boot.
Implemented NodeJS Utility Modules, Buffers, streams, Event loops for developing the application at server side.
Increased productivity and reduced debugging time by jointly developing and testing code in real-time during pair programming sessions.
Used Spring Boot, Spring Security to build Microservices and deployed them to AWS cloud and Used Spring Cloud AWS Core, Spring cloud AWS Context, and Spring Cloud AWS Messaging.
Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda Functions Including AWS EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling.
Worked on Dockers container implementation for Enterprise build system, Dockers container management along with volumes, container-based DB and services, Docker Art Factory, and setup.
Used Spring Boot, which is radically faster in building cloud Micro Services and develop Spring MVC, based application with very less configuration.
Utilized SonarQube to analyze code maintainability, technical debt, and adherence to coding standards.
Implemented Spring boot microservices to process the messages into the Kafka cluster setup.
Utilize EBS to store persistent data and mitigate failure by using snapshots.
Used JIRA as the bug tracking system to track and maintain the history of bugs/issues on everyday basis.
Environment: JDK 1.8, Spring, Hibernate, Spring Boot, LINUX, Maven. RESTful Web Services, Jenkins, HTML5, CSS3, React JS, Bootstrap, JavaScript, jQuery, Ajax, Node.js, MongoDB, SoapUI, Postman, API Life Cycle, JUnit, JMeter, Git, JAX-RS, JIRA, Cucumber, Kafka, Putty, Agile.

Optum, Eden Prairie, MN Nov 2016 – Jul 2018
Java Full Stack Developer
Responsibilities:
Involved in different phases of SDLC such as requirements gathering, technical design and implementation.
Followed Agile Methodologies software development paired programming, Test Driven Development process, from development phase to testing phase and the postproduction phase, and Scrum meetings.
Analyzed the technical requirements and created various models required for the project. Implemented Model View Controller (MVC) architecture using Spring MVC Framework.
Implemented JAVA/J2EE design patterns such as Factory, DAO, Session, Façade, and Singleton.
Used Spring MVC architecture with Hibernate to implement DAO code and used RESTful Web Services with XML parsing to interact with other modules.
Used spring container for data source and to load the Hibernate specific classes.
Used Apache Kafka for building the real time data pipelines and storing the data in a distributed cluster.
Configured Java objects with backend database tables using ORM mapping in Hibernate.
Configured and monitored numerous MongoDB instances and replica sets.
Created and Designed XML schemas and transformed the XML to XSLT style sheet.
Implemented various design patterns in the project such as Data Access Object, Data Transfer Object and Singleton.
Designed and Developed CI/CD Pipelines in Jenkins for automating the service deployment.
Implemented AWS solutions using EC2, S3, RDS, EBS, Elastic Load Balancing, Auto scaling groups.
RBAC configuration in PCF for user roles and responsibility.
Used IBM WebSphere Application Server for deploying various components of application.
Thoroughly Unit tested the application by writing test cases for different scenarios using JUnit.
Used Docker to collaborate code, deliver, and run more securely from both Windows server, Linux.
Developed Maven script and builds Maven and continuous integration servers like Jenkins.
Used GIT for version control management between various integration and development streams.
Used Jira to track bugs, prioritize and discuss the team’s work in full context.
Apache Maven tool has been used for the build and deploy the application. Monitored the Error logs using Log4J and fixed the problems.
Environment: Java 7, C/C++, J2EE, Angular, Spring 4.3, Spring boot, Spring AOP, Spring MVC, Scala, Hibernate 4, Microservices, MongoDB, CI/CD, PCF, React, AWS, REST, log4j, Jenkins, Kafka, XML, Grunt, XSD, java Script, jQuery, AngularJS, NodeJS, Docker, Linux, Tomcat, Spring Tool Suite (STS).

Sonata Software Hyderabad, India Jul 2013- Sep 2016
Java Developer
Responsibilities:
Used WSDL and SOAP for the development of XML based applications.
Used JAXB for XML marshaling and unmarshalling. Worked with Oracle 10g database.
Used JDBC to persist Java Objects into the database.
Involved in writing complex SQL queries and developed Stored Procedures to populate the database.
Debugged Java classes used to modify web pages such as Business Objects and Data Access Objects.
Involved in the creation of dynamic web pages with the use of JSP and HTML.
Involved in daily scrum meetings and worked on the sprint tasks in Agile Scrum development.
Used Servlets as an interface between the frontend and backend to handle HTTP requests and to send the response back to the front end.
Utilized various utilities for User Interfaces like JSP, JSTL, JavaScript, HTML, CSS, jQuery, and Ajax.
Implemented logging for the whole application using Log4j.
Performed unit testing using JUnit and participated in integration testing.
Maintained SVN repositories for branching, merging, and tagging.
Environment: Java 1.5, J2EE, JDBC, Servlets, XML, JAXB, HTML, CSS, JSP, JSTL, JavaScript, jQuery, Ajax, PL/SQL, Oracle 10g, JAXB, WSDL, SOAP, Log4j, JUnit, SVN.
Contact this candidate