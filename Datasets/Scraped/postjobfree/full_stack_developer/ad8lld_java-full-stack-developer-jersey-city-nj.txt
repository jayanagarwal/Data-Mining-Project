Venkata Naga Surya Pavan Sai Puvvada
Full Stack Java Developer

Phone: 856-***-****
E-mail: ad8lld@r.postjobfree.com
Linkedin: www.linkedin.com/in/venkata-naga-surya-pavan-sai-puvvada90
PROFESSIONAL SUMMARY:
Over 10 years of experience developing robust backend systems using Java 8 and Java 11 integrated with Spring Boot, ensuring high performance and scalability for enterprise applications through efficient data management and microservices architecture.
Designed and deployed microservices architectures with Docker and Kubernetes on AWS EC2 and AWS Fargate, ensuring reliable, scalable, and fault-tolerant application deployments.
Implemented CI/CD pipelines with Jenkins and GitLab, automating build, test, and deployment processes to streamline development workflows and maintain consistent software delivery.
Utilized Apache Kafka, ActiveMQ, and RabbitMQ for asynchronous messaging, enabling real-time data processing and enhancing system reliability and scalability.
Integrated comprehensive monitoring solutions such as Splunk, New Relic, and AWS CloudWatch, providing detailed observability and proactive troubleshooting for application performance.
Engineered data pipelines using GCP's BigQuery, Dataflow, and Dataproc, performing ETL processes and executing complex queries to support data analytics and business intelligence.
Implemented secure authentication and authorization with Spring Security and OAuth2, ensuring robust protection and access control for sensitive application data.
Developed and maintained RESTful APIs with Spring MVC, React.js, and Node.js, integrating with frontend frameworks like Angular and React to facilitate seamless client-server communication.
Built backend systems with Python frameworks such as Django and Flask, enhancing performance and scalability for applications with high traffic and complex business logic.
Deployed and managed cloud-based applications on Microsoft Azure and PCF/CF (Cloud Foundry), leveraging cloud resources for efficient scaling, high availability, and cost management.
Developed integration solutions using Apache Camel, Spring Integration, IBM Integration Bus, and Azure Logic Apps, facilitating smooth data exchange and process automation between disparate systems.
Applied Helm and Terraform for infrastructure-as-code, managing deployments and configurations to automate infrastructure provisioning and optimize cloud resource utilization.
Conducted performance tuning and optimization for applications on IBM WebSphere and Oracle WebLogic, ensuring minimal latency, high throughput, and efficient resource utilization.
Automated testing processes with JUnit, Mockito, Selenium, and Cucumber, integrating continuous testing practices into the CI/CD pipeline to ensure comprehensive test coverage and code quality.
Implemented messaging and queuing systems with AWS SNS, SQS, and JMS, enhancing reliable and scalable communication between distributed system components.
Developed and integrated GraphQL services along with RESTful APIs using Node.js, React.js, JavaScript, and Typescript, providing flexible query capabilities and robust backend functionalities.
Utilized PHP frameworks such as Laravel, Symfony, and CodeIgniter for developing MVC-based web applications, streamlining development processes and improving maintainability.
Managed agile project workflows using Jira, Confluence configuring custom boards and dashboards to track sprint progress, manage backlog, and prioritize tasks effectively.
Optimized database interactions with Hibernate and Spring Data JPA in Oracle, PostgreSQL, and MySQL, improving query performance, data persistence, and overall system efficiency.
Managed NoSQL databases like DynamoDB, MongoDB, Cassandra, and Redis, addressing diverse data storage needs and providing real-time data access for applications.
Created responsive and interactive user interfaces using Angular (including Angular Material UI), ReactJS, and Bootstrap, ensuring consistent user experiences across various devices.
Designed and implemented responsive layouts using HTML5 and CSS3, employing Flexbox and Grid for adaptive and mobile-friendly web interfaces. Ensured compatibility across various browsers and devices.
EDUCATION:
Bachelor’s in Information Technology from Acharya Nagarjuna University, India.
Master’s in Computer Science from University of Missouri – Kansas City, USA.

TECHNICAL SKILLS:
Programming Languages: Java 8 and Java 11, Java Script (ECMAScript 2016), Type Script, Python, PHP, JQuery, C#, Ruby, Scala
UI Technologies: Angular 9, React.JS, Bootstrap, Angular Material UI, NodeJS, HTML, CSS, VUE.JS, GRUNT, SAAS Preprocessors.
Frameworks: Spring Boot, Spring Data, Spring AMQP, Spring AOP, Spring Cloud, Spring Security, ASP.NET, Django, Express.Js
Application Servers: Apache Tomcat, Jetty, Jboss/Wildfly, Trifork, IBM WebSphere Application Server, WebLogic Server, Apache HTTP Server, Oracle WebLogic Server, Node.js
Monitoring: New Relic, AWS Cloud Watch and ELK (Kibana, Logstash, Elastic Search), Splunk, AppDynamics.
Cloud Technologies: AWS (EC2, SQS, SNS, RDS, Cloud Watch, Route 53, IAM, AWS Fargate), PCF/CF (Cloud Foundry), Microsoft Azure, Google Cloud Platform, IBM Cloud, OpenStack
Messaging Platforms: Kafka, RabbitMQ, AWS SQS, Apache ActiveMQ, IBM MQ.
DevOps: Jenkins, Docker, Kubernetes, and Elastic Search
Relational Databases: Oracle and PostgreSQL, MySQL, Microsoft SQL Server, SQLite.
No SQL Databases: DynamoDB, MongoDB, Cassandra, Redis, Amazon DynamoDB, Neo4j
Build Tools: NPM, Maven, Gradle, Apache Ant, Yarn, Apache Ivy, Buildr.
IDEs: IntelliJ, Spring Tools Suite (STS), Eclipse, DBeaver & VS Code
Source Code Management: BitBucket, GitLab, Svn, TFVC, AWS CodeCommit.
Agile Methodologies: JIRA & SCRUM framework
Integration Systems: Apache Camel, Spring Integration, IBM Integration Bus, SnapLogic, Azure Logic Apps, Oracle Integration Cloud.
Testing Tools: JUnit, Mockito Rest Assured, TestNG, Selenium, Spock, PowerMock, Mocha, Jasmine, Cypress, PHPUnit

WORK EXPERIECNE:
Client: First Citizens Bank, New York, New York. Oct 2022 to present
Role: Sr. Full Stack Java Developer
Responsibilities:
Architected and implemented Microservices using Spring Boot and Spring Cloud, facilitating independent deployment and scaling of services, and deployed these services on AWS ECS and Docker containers for enhanced operational efficiency.
Led the code migration from Java 16 to adapt the latest features of Java 17 to refactor legacy applications, resulting in improved performance, reduced boilerplate code, and enhanced security features.
Developed and optimized CI/CD pipelines with Jenkins, integrating GitHub for source control and Python-based automation scripts for deployment across Windows and Linux.
Designed and developed RESTful APIs and SOAP services using Spring MVC and Apache CXF, ensuring secure and efficient data exchange, and integrated these services with PostgreSQL and MySQL databases for reliable data storage.
Implemented RESTful APIs using Flask and Django, ensuring secure and efficient communication between distributed microservices, and integrated these services with PostgreSQL and MongoDB databases for reliable data storage and retrieval.
Integrated Scala within the existing Java ecosystem, enhancing the performance of JVM-based applications while maintaining compatibility and leveraging functional programming paradigms.
Applied Test-Driven Development (TDD) principles using JUnit, Mockito, and Cucumber, ensuring high test coverage, code reliability, and facilitating automated regression testing for both backend and frontend components.
Employed Apache Kafka for real-time data streaming and message processing, enabling reliable communication and data flow between distributed microservices.
Developed complex SQL queries to perform data analysis and extraction in BigQuery, optimizing query performance using BigQuery's materialized views, window functions, and common table expressions.
Utilized GIT and GitHub for source code management, implementing branching strategies and code reviews to maintain a clean and organized codebase.
Employed Maven for building automation, managing project dependencies and creating reproducible builds, ensuring consistency across different environments.
Developed RESTful APIs using PHP for seamless integration with third-party services and internal applications, enhancing interoperability and data exchange.
Implemented PHP security best practices, including data sanitization, validation, and protection against common vulnerabilities like SQL injection, XSS, and CSRF.
Designed and implemented seamless integration between Java-based microservices and BigQuery, utilizing Google Cloud Pub/Sub for real-time data streaming and synchronization with BigQuery tables.
Utilized ActiveMQ for message brokering, ensuring reliable and efficient message delivery and integration between various microservices.
Implemented Spring Data JPA for ORM, facilitating seamless database interactions and entity management across MySQL and PostgreSQL environments.
Developed and optimized batch processing applications using Spring Batch, effectively handling large-scale data processing tasks and integrating them with MySQL and PostgreSQL databases.
Leveraged AWS S3 for scalable and secure storage solutions and employed AWS Lambda for serverless computing, enabling scalable and event-driven execution of code without the need for managing servers.
Implemented centralized logging and monitoring with Splunk, providing real-time insights into application performance, security, and operational issues, enhancing the ability to quickly detect and resolve issues.
Utilized Apache Spark for big data processing, enabling efficient handling of large-scale data analytics and real-time data processing tasks, improving data processing capabilities.
Developed unit and integration tests using PHPUnit to ensure code quality and application reliability, reducing bugs and enhancing stability in production environments.
Deployed and managed web applications on Apache Tomcat and JBoss, ensuring high availability and performance of enterprise-grade applications.
Conducted comprehensive end-to-end testing with Selenium, ensuring the integrity and functionality of web applications across multiple platforms and browsers.
Developed GraphQL APIs using AWS AppSync, integrating with multiple data sources to provide a flexible and efficient query interface for frontend applications.
Monitored and managed cloud-based applications using AWS CloudWatch, providing real-time insights and performance metrics, ensuring high availability and scalability of services hosted on AWS EC2 and AWS RDS.
Designed and integrated AWS SQS for message queuing and SNS for notification services, and migration initiatives using AWS Migration Hub, Server Migration Service (SMS), and Database Migration Service (DMS).
Integrated Kibana with Elasticsearch, creating dynamic and interactive visualizations and dashboards, facilitating real-time monitoring and analysis of application and infrastructure performance.
Engineered interactive and responsive web applications using Angular, JavaScript, HTML5, and CSS3, with a strong focus on performance optimization and user experience enhancement.
Managed NoSQL databases using MongoDB and MongoDB Compass, implementing efficient data storage and retrieval mechanisms for high-performance applications.
Developed and implemented backup and recovery plans using MongoDB's built-in backup tools and cloud backup solutions to ensure data durability and availability.
Conducted API testing and validation using Insomnia and Postman, ensuring the reliability and performance of RESTful services through extensive testing and debugging.

Environment: Java16, Java17, Python, REST, Microservices, SOAP, Spring, Spring Boot, Spring MVC, Spring Batch, Hibernate, JPA, JMS, Apache Kafka, Apache Tomcat, ActiveMQ, JBoss, MySQL, SQL Server, MongoDB, PostgreSQL, Log4j, AWS, CloudWatch, Docker, Kubernetes, Jenkins, Maven, Git, GitHub, Confluence, JIRA, Splunk, Angular, JavaScript, HTML, CSS, IntelliJ, POSTMAN, Swagger UI, REST UI, Node.js, JMeter, PyTest, Selenium.
Client: Albertsons, Plano, Texas . May 2021 to Sep 2022
Role: Full Stack Java Developer
Responsibilities:
Developed a microservices architecture using Spring Boot, Netflix Eureka, and Zuul for seamless service discovery and dynamic routing, enhancing scalability and fault tolerance in Docker and Kubernetes environments.
Implemented an event-driven microservices architecture using Apache Kafka or AWS Kinesis for real-time data streaming and event-driven communication between services, enabling scalable, loosely coupled interactions and supporting asynchronous processing.
Automated CI/CD pipelines with Jenkins, GitLab, and Nexus, integrating JUnit and Mockito for automated testing and Maven for streamlined build and deployment processes, ensuring continuous integration and delivery.
Implemented DevOps practices and CI/CD pipelines using GCP tools like Cloud Build, Cloud Deployment Manager, and Cloud Source Repositories to automate deployments, improve code quality, and reduce time.
Led the migration initiative from Java 11 to Java 16, upgrade from Java 16 to Java 17 conducting comprehensive codebase analysis, refactoring legacy modules to leverage new language features such as sealed classes and pattern matching, ensuring compatibility and optimizing performance across the application stack.
Designed and developed custom Content Management Systems (CMS) using PHP, enabling users to manage content effortlessly with user-friendly interfaces.
Leveraged PHP's OOP capabilities to create reusable, modular, and scalable codebases, promoting maintainability and reducing code duplication.
Developed RESTful APIs with Spring MVC and integrated SOAP services using JAX-WS and Apache Axis, ensuring compliance with XML schema validation for data integrity and interoperability.
Created and maintained RESTful APIs in Java to interact with BigQuery datasets, enabling external applications to securely query and analyze data, with role-based access control to ensure data security and compliance.
Managed Apache Kafka for real-time data streaming and event-driven architectures, ensuring low-latency message processing and fault tolerance, with Kafka Connect facilitating seamless integration with external systems.
Developed Python scripts for automating deployment tasks and system monitoring, utilizing Boto3 for AWS service interactions and Paramiko for secure remote operations, enhancing operational efficiency and reducing manual intervention.
Automated log analysis and alerting with Python scripts utilizing the ELK Stack (Elasticsearch, Logstash, Kibana) for centralized logging and monitoring, enabling proactive issue detection and resolution.
Implemented complex data retrieval and aggregation logic using Java and BigQuery SQL, optimizing query execution times and resource utilization by applying partitioning, clustering, and BigQuery best practices.
Orchestrated AWS services including EC2, ECS, S3, RDS, Lambda, and CloudWatch with Terraform and Docker, designing and implementing serverless architectures using AWS Lambda and API Gateway, and managing Kubernetes clusters with Helm charts and Operators.
Configured Eclipse IDE with Spring Tool Suite and Docker Tooling for seamless development and debugging on Windows and Linux platforms, and managed version control with GitLab CI/CD pipelines and GitFlow, ensuring code quality and collaboration.
Engineered responsive single-page applications (SPAs) with Angular, incorporating RxJS for reactive programming and NgRx for state management, optimizing performance with lazy loading and AOT compilation.
Integrated Scala into existing Java applications on the JVM, utilizing Akka for concurrent and distributed processing and Play Framework for RESTful APIs, ensuring compatibility and enhancing performance.
Implemented Test-Driven Development (TDD) with JUnit, Mockito, and TestNG, achieving maximum code coverage, and automated acceptance testing with Cucumber and Selenium, ensuring robustness and reliability across backend and frontend components.
Developed message-driven applications with JMS and Apache ActiveMQ, ensuring reliable communication and transactional messaging between distributed systems.
Managed NoSQL databases like DynamoDB for scalable storage solutions and optimized SQL queries for Oracle DB and DB2 with Hibernate ORM, ensuring efficient object-relational mapping and database interaction.
Designed DynamoDB tables with partition keys and sort keys optimized for query performance, utilizing features like secondary indexes and DynamoDB Accelerator (DAX) for caching to achieve low-latency data access.
Enhanced application performance with Hibernate ORM, optimizing database interactions and implementing caching strategies to reduce latency and improve scalability.
Automated the provisioning of AWS resources including VPCs, security groups, and DynamoDB tables using Terraform, enabling consistent and repeatable infrastructure setup.
Environment: Java 11, Java 17, Python, Spring, Spring Boot, Hibernate, REST, Microservices, SOAP, XML, AWS, DynamoDB, JavaScript, Angular, Docker, Kubernetes, Maven, Git, Jenkins, Jira, Confluence, Version One, Log4j, Kafka, JMS, JBoss, Apache Tomcat, Active MQ, Splunk, CloudWatch, Selenium, POSTMAN.

Client: LexisNexis Risk Solutions, Charlotte, North Carolina. Nov 2019 to Apr 2021
Role: Full Stack Java Developer
Responsibilities:
Designed and implemented microservices architecture using Spring Boot, Docker, and Kubernetes to enhance scalability and maintainability.
Streamlined microservices deployment pipelines with Jenkins and Kubernetes on Azure, ensuring seamless integration and continuous delivery.
Developed RESTful web services in a microservices architecture, leveraging Spring Boot and Hibernate for efficient data handling and storage.
Implemented ORM mappings with Hibernate, facilitating seamless interaction between Java objects and NoSQL databases like PostgreSQL.
Optimized SQL queries using Hibernate query optimization techniques, enhancing database performance and minimizing response times.
Optimized microservices deployment processes with Jenkins and Kubernetes, ensuring smooth integration and continuous delivery.
Implemented CI/CD pipelines using Jenkins and Git, facilitating seamless and automated deployment processes.
Migrated legacy applications to Java 8 and Java 11, enhancing performance and leveraging new language features.
Refactored existing codebases during the migration to Java 11, improving code quality and maintainability.
Led backend development efforts using Java, Spring, and Hibernate to design and implement efficient and scalable solutions.
Implemented JMS and Active MQ for asynchronous messaging and real-time data processing.
Integrated Docker with Jenkins to streamline the build and deployment process, ensuring consistency across various stages of the development lifecycle.
Utilized middleware in Express.js to manage authentication, logging, and error handling, ensuring secure and streamlined backend operations.
Developed server-side applications using Node.js, harnessing its event-driven architecture for scalable and high-performance applications.
Employed Splunk for logging and monitoring, ensuring efficient tracking and troubleshooting of application issues.
Developed dynamic web applications using Angular, JavaScript, HTML5, and CSS3 for a responsive and intuitive user interface.
Utilized Bootstrap and jQuery for frontend development, ensuring cross-browser compatibility and a modern look and feel.
Developed interactive web interfaces using jQuery, enhancing user experience with dynamic content loading and smooth DOM manipulation.
Integrated jQuery plugins to extend functionality and improve UI responsiveness, ensuring cross-browser compatibility and efficient client-side scripting.
Deployed applications on Azure Cloud, leveraging services like Azure App Service and Azure SQL Database for scalable and reliable cloud infrastructure.
Utilized Azure Cosmos DB for globally distributed multi-model database service to achieve low latency and high availability for distributed applications.
Led several successful cloud migration and application modernization projects to GCP, including lift-and-shift, refactoring, and re-platforming legacy applications, ensuring minimal downtime and smooth transitions.
Created RESTful APIs and integrated them with frontend applications, providing seamless communication between the server and client.
Implemented containerization with Docker for Python applications, ensuring consistent environments across development and production.
Created automated tests using Pytest to ensure code quality and reliability for Python applications, enhancing overall robustness.
Developed logging solutions to track and monitor application performance and errors, integrating BigQuery with Java-based logging frameworks like Log4j to store and analyze logs for better insights and troubleshooting.
Developed and maintained applications on WebSphere and Apache servers, ensuring high availability and reliability.
Automated testing and quality assurance using JUnit, Mockito, and Selenium to ensure robust and error-free code.
Leveraged Docker and Kubernetes for containerization and orchestration, improving deployment speed and environment consistency.
Utilized npm packages to extend Node.js functionality, integrating third-party libraries for efficient development and enhanced productivity.

Environment: Java11, J2EE, JDK, Spring, Hibernate/SQL, Web Services (SOAP), RESTful, Multithreading, JMS, Apache, Docker, Kubernetes, Jenkins, OAuth2, Maven, HTML, CSS, Ajax, Angular, jQuery, JavaScript, AngularJS, Angular2/4, Bootstrap, Node.js, Express.js, WebSphere, Azure SQL, Oracle, PostgreSQL, PyTest, Selenium.

Client: State of Nebraska, Lincoln, Nebraska. Mar 2018 to Oct 2019
Role: Full Stack Java Developer
Responsibilities:
Designed and implemented reactive microservices using Spring WebFlux and Project Reactor, achieving high throughput and low latency for real-time data processing applications.
Developed microservices using Flask and FastAPI to create lightweight, high-performance APIs, enhancing scalability and service isolation.
Utilized Spring Cloud Config Server for centralized configuration management of microservices, ensuring consistency and easy scalability across different environments.
Developed event-driven microservices using Spring Cloud Stream and Apache Kafka, ensuring reliable and asynchronous communication between services for real-time data processing.
Developed RESTful APIs using Spring MVC and secured endpoints with OAuth2 and JWT tokens, integrated with React.js for dynamic frontend interactions and responsive user experiences.
Orchestrated CI/CD pipelines with Jenkins, Docker, and Kubernetes, automating build, test, and deployment processes to AWS ECS ensuring rapid and reliable application updates.
Implemented Jenkins pipelines as code using Groovy DSL, enabling version control and easier maintenance of CI/CD workflows.
Leveraged Java 11 features like HttpClient and enhanced security with TLS 1.3 protocol to optimize backend services' performance and ensure secure data transmission.
Designed and optimized relational databases using Hibernate ORM with second-level caching and JPA criteria queries, improving data access efficiency and scalability.
Implemented batch processing jobs using Spring Batch, orchestrated data synchronization between Oracle and MongoDB databases, ensuring data consistency and integrity.
Implemented robust logging mechanisms using Slf4j with Logback, ensuring comprehensive monitoring and debugging capabilities across distributed microservices.
Integrated AJAX for asynchronous data retrieval and dynamic content updates in real-time dashboard applications, improving user engagement and data visualization.
Configured AWS Cloud Formation templates for infrastructure-as-code (IaC), automating deployment and updates of AWS resources in a reproducible manner.
Deployed scalable applications on AWS EC2 instances, utilizing Elastic Load Balancing (ELB) and Auto Scaling groups to handle varying traffic loads and ensure high availability.
Implemented enterprise message-driven architectures using Spring Integration, integrating with IBM WebSphere MQ for reliable and asynchronous communication between systems.
Designed and implemented SOAP-based web services using Spring WS, ensuring interoperability and data integrity in healthcare information exchange platforms.
Enhanced application security with Spring Security, implementing OAuth2 authentication and authorization mechanisms, ensuring secure access to sensitive data and resources.
Leveraged Spring Core and IoC container to design modular and loosely coupled components, promoting maintainability and extensibility in enterprise applications.
Developed interactive and responsive user interfaces using React.js, Redux for state management, and Material-UI for component styling, ensuring seamless integration with backend microservices built on Spring Boot and Kubernetes.
Integrated React.js with RESTful APIs developed in Spring MVC, utilizing Axios for asynchronous data fetching and updating, enhancing the frontend of a microservices-based platform.
Designed and Implemented scalable, reliable, and secure cloud architectures on GCP, utilizing services such as Google Compute Engine, Kubernetes Engine, and App Engine.
Experience in developing serverless applications using GCP services like Cloud Functions and Cloud Run, enabling efficient, cost-effective, and scalable solutions.
Optimized MongoDB queries and indexes using MongoDB Atlas and Mongoose.js, enhancing data retrieval performance and ensuring high availability and reliability in distributed systems.
Implemented Elasticsearch for real-time search and analytics capabilities, enabling fast and efficient data retrieval and visualization in large-scale financial trading platforms.

Environment: JavaScript, JQuery, Flask, JSON, AJAX, React Js, HTML, CSS, SASS, XML, JSP, Spring Core, Spring IOC, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Security, Spring Integration, Spring Web Flow, Hibernate, PL/SQL, Oracle, REST Web Service, Vaadin, GCP, AWS, JUnit, Maven, Jira, IBM WebSphere.

Client: CVS Health, Irving, Texas. Dec 2015 to Feb 2018
Role: Java/J2EE Developer
Responsibilities:
Developed a scalable microservices architecture using J2EE and Spring, ensuring modular and maintainable backend solutions.
Developed an event-driven microservices architecture using Apache Kafka, enabling real-time data streaming and processing for enhanced scalability and reliability.
Enhanced legacy applications by migrating from JSP to modern frontend frameworks like Angular, improving user interface responsiveness and user experience.
Integrated Struts and Spring MVC frameworks for developing RESTful APIs, facilitating seamless data exchange between frontend and backend systems.
Implemented Spring Boot for rapid application development, reducing time-to-market for new features and enhancements.
Configured and optimized Oracle WebLogic servers for deploying enterprise-grade Java applications, ensuring high availability and performance.
Leveraged JUnit for automated unit testing and Mockito for mock testing, achieving high code coverage and ensuring robust code quality.
Utilized Bootstrap for designing responsive web interfaces, ensuring cross-browser compatibility and adherence to UX design principles.
Deployed applications on Azure cloud services, utilizing Azure App Service and Azure SQL Database for scalable and cost-effective solutions.
Implemented logging and monitoring using Log4j and Visual Studio, ensuring real-time visibility into application performance and behavior.
Secured applications with Spring Security, implementing role-based access control and OAuth2 authentication for RESTful APIs.
Managed message queues with IBM MQ, ensuring reliable asynchronous communication between distributed systems.
Integrated Hibernate with JPA for object-relational mapping, optimizing database interactions and improving data access performance.
Collaborated in Agile Scrum teams using JIRA and Confluence, participating in sprint planning, daily stand-ups, and sprint reviews.
Conducted SQL performance tuning, optimizing query execution plans and database indexes for improved application responsiveness.
Developed stored procedures, triggers, and functions to automate business processes and enforce data consistency, leading to reduced manual intervention and error rates.
Integrated SQL databases with Java applications using JDBC and Hibernate, facilitating seamless data retrieval and manipulation for backend processes.
Environment: J2EE, Spring, Spring Boot, Spring MVC, Spring Data, Spring Security, JSP, Struts, REST, Gradle, JBoss, Oracle WebLogic, WebLogic Application Server, JUnit, Bootstrap, Azure, Agile Methodology, Visual Studio, IBM MQ, Log4j, STS, SQL, Windows.

Client: T-Mobile, Atlanta, Georgia. Nov 2013 to Nov 2015
Role: Java Developer
Responsibilities:
Engineered microservices architecture using J2EE, ensuring modular scalability and efficient resource utilization.
Developed RESTful APIs with Spring Boot and deployed on JBoss and WebLogic servers, optimizing backend performance and deployment efficiency.
Integrated Oracle databases using Hibernate ORM, ensuring seamless data persistence and efficient data retrieval.
Designed and implemented frontend interfaces with Apache Struts MVC, utilizing AJAX for dynamic content retrieval and improved user
Contact this candidate