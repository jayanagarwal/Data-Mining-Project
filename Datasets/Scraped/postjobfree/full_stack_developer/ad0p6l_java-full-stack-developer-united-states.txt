Professional Summary
●Around * years of enterprise level experience as a Full-Stack Java/J2EE developer, offering a strong foundation in web applications using Spring, React.
●Solid foundation in Object Oriented Programming (OOP), and extensive knowledge on Java SE including Collections, Threading and Core Java.
●In-depth experience with J2EE Technology such as Maven, JDBC, JPA and JSTL.
●Strong understanding of Spring Core concepts such as Dependency Injection and Inversion of Control. Be able to use both Annotation and XML based configuration.
●Extensive expertise in implementation of RESTful web applications design using Spring MVC, Spring Boot, Hibernate, Spring AOP and Spring Security.
●Extensive knowledge of design patterns, such as Singleton, Observer, Proxy, and architectural patterns, such as Spring MVC.
●Solid scalable architecture knowledge on Microservices with the experience of Spring Cloud, Eureka, Feign, Gateway and AMQP.
●Created React application using libraries such as Redux, Axios, and React Router.
●Developed several Backend services using NodeJS.
●Achieved 100% code coverage using Jest Scripts and Mocks while creating services in Node JS.
●Created Automation Scripts for UI in CucumberJS and Selenium.
●Implemented Event Driven Service Architecture using Kafka.
●Created Producers and Consumers as part of converting Normal Rest Service to a Event Driven Service Model using Kafka.
●Profound experience in creating real time data streaming solutions using Apache Spark/Spark Streaming, Kafka and Flume.
●Used grails quartz plugin for jobs and used many more grails plugins like spring security.
●Core development experience for Groovy & Grails restful web services.
●Worked with a Python application to do Sentiment Analysis.
●Having 1 year of academic experience in using Numpy, Pandas, Scikit Learn through Python.
●Created a Chatbot Assistant for a Stock Market application using HTML, JavaScript and python, Flask framework in the back-end with LSTM model to forecast stock prices.
●Extensive knowledge and experience in enterprise application Architecture design and development, Integration, using SOA (Service-Oriented Architecture) principles, Micro Services Architecture, API’s architecture, Docker Containers.
●Experience in Enterprise Application Integration with WebSphere Message Broker, WebSphere Transformation Extender (WTX) and IBM WebSphere MQ in Banking and Insurance domains.
●Experience in using build/deploy tools such as Jenkins, Docker and OpenShift for Continuous Integration & Deployment for Microservices.
●Worked with PySpark to traverse and process huge records of data while doing data processing in Python.
●Strong experience in React JSX, State, Props and Life Cycle Methods.
●Designed and developed Angular2+ web application using TypeScript to create Directives, Components, Services, Modules, Observables, Directives, Reactive/Template driven forms, Router, Route Guards, and Interceptor.
●Proficient experience in classic development of web applications with HTML5, CSS3, JavaScriptES5/ES6.
●Strong Database design and development experience, which includes developing Stored Procedures, functions using SQL and PL/SQL in MS-SQL, Oracle, DB2, PostgreSQL databases.
●Experience with Controllers, Views, and Stores in Ext JS.
●Experience in handling messaging services using Apache Kafka.
●Superb skill in testing using Mockito for Junit Test and Postman to test APIs.
●Expertise in relational database technologies such as OracleDB, MySQL and non-relational database technologies like MongoDB.
●Managed records in Redshift database using Apache Spark.
●Migrated data from external sources like S3 buckets in Amazon Redshift and created ETL processes for this purpose.
●Extensive experience in setting up the CI/CD pipelines using Jenkins, Maven, Nexus, GitHub, CHEF, Terraform and AWS.
●Good understanding of project documentation such as E-R diagram and UML modeling.
●Experience with tools like Experience with Docker Images/containers and kubernetes.
●Deployed Spring Boot based micro services Docker container using Amazon EC2 container services and using AWS admin console.
●Created Test Automation Framework with Cucumber and Selenium web driver.
●Strong knowledge of version control tools such as Git that ensures timely delivery and code consistency.
●Experience with Visualization tools like Tableau during academic project.
●Experienced with using Jenkins to set up CI/CD environments.
●Strong Knowledge of Software Development lifecycle (SDLC) and methodologies like Agile, Waterfall and Scrum approach.

Technical skills
Languages:
C, C++, SQL, Java & J2EE, PL/SQL, NodeJS, ReactJS
Web Frameworks
JSP, Servlets, HTML, DHTML, CSS, JavaScript, AJAX, XML, Swing/Java AWT, PHP, ASP, REST, React, Angular, Kotlin, Swift.
Version Control
Git
Cloud
AWS
Application Servers
Tomcat 5, IBM Websphere
Frameworks
React JS, Node JS
Back-end
Oracle, JDBC, PL/SQL, MySQL, MongoDb, RedShift, Apache Spark, Kafka
Business
Struts, Spring, Hibernate, SOAP, Rest Web Services.
Other Tools
Unit, Log4j, ANT, MAVEN, Eclipse, MyEclipse,TOAD, CVS, Perforce, VSS, Rational Rose, NetBeans, Quick Build, Microsoft Visual Studio 2008, AWS Glue, Maven, Jenkins
Platforms
Windows, UNIX, Mac

Professional experience:
Client: American Express, Phoenix, AZ Nov20 – present
Role: Senior Full-Stack Developer
Responsibilities:
●Used Maven as task runner and created Maven builds to build and deploy application code to internal enterprise Docker registry.
●Developed for front-end components for the app using ReactJS with cutting edge HTML5 and CSS3 techniques.
●Used Node to install browser dependencies.
●Developed several Backend services using NodeJS.
●Achieved 100% code coverage using Jest Scripts and Mocks while creating services in Node JS.
●Created Automation Scripts for UI in CucumberJS and Selenium.
●Implemented Event Driven Service Architecture using Kafka.
●Created Producers and Consumers as part of converting Normal Rest Service to a Event Driven Service Model using Kafka.
●Created RESTful APIs on the server side to perform CRUD operations using Java 8, 11.
●Configured the development environment using Spring Boot and Spring Security and Oauth 2.0.
●Involved in building the application which works on mainly Groovy, grails, Html, Css, Rest services, Java script, Spring, Maven, Hibernate.
●Provided REST endpoints to the front-end and taking in parameters from the user and returning the required values accordingly.
●Designed and developed asynchronous RESTful Microservices using Spring boot, Couchbase and RXJava that are consumed by other microservices with an average response time of 30 milliseconds.
●Implemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub and AWS AMI’s, whenever a new Github branch gets started. Jenkins, our Continuous Integration server, automatically attempts to build a new Docker container from it, The Docker container leverages Linux containers and has the AMI baked in.
●Used Test containers to run e2e tests where a Docker Container was created for each test.
●Pushed the code to the higher environment and created pull requests using the version control tool such as GIT.
●Addressed and resolved the bug issues reported in development by the QA Engineer.
●Used JIRA for tracking the progress of the tasks assigned on both story level and sub-task level.
Environment: Java 8/11, ReactJS, NodeJS, HTML, CSS, Node, CucumberJS, JEST, Selenium, Kafka, Spring Boot, Spring Security, Github, Docker, Jenkins, Ext JS, Microservices, GIT, JUnit, JSON, REST APIs, PySpark, Python, Maven, Docker Images and Containers.
Client: New York Metropolitan Transportation Authority, NY Feb 20 – Nov 20
Role: Full-Stack Developer (Microservices, React, Spring Boot, Hibernate, Oracle DB, AWS)
Responsibilities
●Built a Web module using Spring Boot, Microservices, Oracle DB, Dependency Injection, RESTfulAPI and React
●Established Microservices with Gateway, Composite Service, Service Discovery with Netflix Eureka, Spring Cloud to maximize deployment velocity and application reliability.
●Implemented Feign to make internal APIs call easier.
●Deployed and configured RabbitMQ to subscribe the financial report update from analyst team and send it to senior directors for further review
●Clustered reports data and plan data tables by referencing their relationship like OneToMany and vice versa.
●Assisted with the design and development of message flows to call the WTX maps-based routing conditions dynamically using database.
●Assisted the Integration team on WMB message flows and WTX map development.
●Designed various Java objects (POJO Beans) for ORM to manipulate the database in a better way.
●Applied Scheduler to distribute the financial reports to the subscribers on time every month.
●Created feature files through Cucumber and implemented BDD.
●Analysing ASIS System which was developed with IBM Mainframe, Cobol, DB2 and converting to Java/J2ee, RAD IBM, RSA IBM with Spring RS, Oracle, Hibernate, PostgreSQL
●Implemented REST Microservices using spring boot. Generated Metrics with method level granularity and Persistence using Spring AOP and Spring Actuator.
●Bundled software dependencies by using Apache Maven to better manage the project.
●Built a single-page application with React.
●Used spring config server for centralized configuration and Splunk for centralized logging. Used Concourse and Jenkins for Microservices deployment
●Worked on different layers of application including Controller, Service, DAO, and Domain layer.
●Defined and created backend RESTAPIs in Spring MVC controllers and used React Axios to make API calls and handle error messages.
●Build mobile application in Kotlin, Swift, Android and React Native.
●Utilized Java File/IO with Spring Multipart-File interface to upload and download documents
●Implemented latest JavaScriptES6 features including let, const, and arrow function to create many reusable complex components such navigation bar and drop-down menu.
●Used React-Bootstrap, Material Design-React to build reusable components like button and interactive table in an easier way.
●Implemented Google GSON to serialize and deserialize Java Objects to JSON.
●Bundled React Lifecycle methods to achieve desired behaviors at key moments.
●Applied Redux to establish the global state for sibling component’s communication and
configured Redux-Thunk to execute asynchronous code.
●Defined and called Reducers that received Actions to update the store state.
●Performed Spring AOP to break down project logic into distinct parts and monitor the performance of different functions in the application.
●Integrated XML Configurations to ease future changes on project configurations.
●Applied Git for version control tool for merging branches.
●Integrated the Bloomberg functions and data via calling Bloomberg Terminal Java API
●Involved in Agile Methodology in the whole Software Development Life Cycle for tracking progress.
Environment: Java 1.8, Spring Boot, Microservice, React-Redux, Node.js, HTML 5, CSS 3, AWS, WMB, WTX, Hadoop, JavaScript, PostgreSQL, Hibernate, Cucumber, Oracle, RESTful, Web Service, Maven, React, Postman, Git, IntelliJ, and Visual Studio IDE.
Client: State Farm, Normal (IL) July 19 – Feb 20
Role: Full-Stack Developer (React.js/Spring Boot/MySQL)
Responsibilities
●Developed a Single Page Web Application using React, Java, Spring Boot, and MySQL.
●Bundled software dependencies by using Apache Maven to better manage the project.
●Applied AWS Relational Database Service to set up, operate, and scale MySQL deployments in the cloud.
●Implemented AWS Code Pipeline and Created Cloud formation JSON templates in Terraform for infrastructure as code.
●Real time streaming the data using Spark with Kafka
●Involved in building major pieces of Back-End, Repositories, Services, Controllers, DAOs, Entitiesand etc.
●Configured Kafka to read and write messages from external programs.
●Configured Kafka to handle real time data.
●Design and developing API’s and SOA Integration solutions using IBM Mule Any Point Studio, API Designer, Mule API Exchange.
●Developing, testing and deploying API’s and Microservices using Mule Any point Studio.
●Automate provisioning and repetitive tasks using Terraform and Python, Docker container, Service Orchestration.
●Involved in designing the internal services communication using Queue in RabbitMQ to provide high availability.
●Utilized Spring AOP to give advice to controller for exception handling and logging.
●Developed and performed test cases using Junit and Mockito framework.
●Carried out Microservice architecture to maximize deployment velocity and application reliability.
●Performed Spring Cloud in application with Eureka, Feign client and Gateway.
●Utilized Eureka in the AWS cloud for locating services for the purpose of load balancing and failover of middle-tier servers.
●Applied Spring Boot Security to protect confidential controllers.
●For authentication stored JWT (taken from back-end) in local storage if login succeeds and attaching JWT in request headers for each call.
●Used Java File/IO with Spring Multi part File interface to upload and download documents.
●Utilized React to create reusable UI components such as Input, Button, Spinner and etc. to unify the design.
●Applied Redux to build a central store for state management, which enables different components to access different actions and states.
●Applied Redux-Thunk as middleware to handle asynchronous code.
●Used React-Router-Dom to restrict the accessibilities of certain components.
●Used Axios to send HTTP request and handle error messages.
●Used Postman to test the RESTful API for HTTP requests such as GET, POST, PUT.
●Followed Agile Software Development Methodology for developing the application.
Environment: Java 1.8, Spring Boot, Junit, Mockito, Maven 3.6.1, MySQL, React.js 16,HTML5, CSS3, JavaScript ES6, Mulesoft Anypoint Studio 3.6.x, Mule Anypoint API Manager, Mule Anypoint Excghange, Python, Terraform, Redux, Docker, Axios, Visual Studio Code, IntelliJ, Postman, Git, AWS, GitHub

Client: USAA, San Antonio Sep 18 –June 19
Role: Software Engineer
Responsibilities:
●Played a key role in System Design and Planning of the stage 3 project and led offshore team.
●Revamped UI in the Health Questionnaire Application which reduced the application completion time.
●Designed and developed many features of the Underwriting Infrastructure to individual API’s, which decreased the development time by 40%.
●Developed applications using MVC pipeline for the Automation of the Underwriting process which increased the level of convenience for the Underwriter to review an application.
●Configured Web Application Context as a Context Listener in the web.xml file to Integrating Spring with JSF.
●Implemented Spring Dependency Injection and Aspect Oriented Programming.
●Configured Hibernate, Spring and My Faces JSF to map the business objects to Database using XML configuration file.
●Integrated third party medical records vendor services like Kaiser Permanente into the existing application which led to savings up to 400$ per application and 2 weeks in time.
●Using Python created an application which does text analysis by using Natural Language Processing (NLP) on the medical pdf documents to process the Risk Assessment of the Applicant.
Environment: Java 1.7, JSP, HTML, DHTML, Ajax, JavaScript, Spring (IOC/MVC), Hibernate, Oracle 11g, XML, XSD, JSF, JAXB, SOAP, REST, IBM WebSphere 6.0, Eclipse, Unix, Git and Selenium.
Client: Tata Consultancy Services (USAA), Hyderabad May 15 – Aug 18
Role: Software Engineer
Responsibilities:
●Created a web application using JSP, Spring MVC,JDBC, and PostgreSQL.
●Involving in the design and development phase with the use of Agile Software Development Methodology
●Increasing code readability and development efficiency by following the implementation of SpringMVC features such as Controllers, Repositories, Services, DAOs, etc.
●Implemented Java Database Connectivity (JDBC) to communicate between server and database.
●Performed Spring Core Annotations for Dependency Injection to provide loose coupling between different layers.
●Developed dynamic web pages by using JSP, JavaScript ES5, jQuery, and Ajax.
●Utilized JSTL to simplify and enhance the readability of the JSP.
●Used Tomcat as the application server for deploying applications in local and development environments.
●Used Maven to manage dependencies.
●Used Git for version control and Jira for tracking issues and bugs within the application.
Environment: JDK 1.7, J2EE, Spring MVC, JDBC 3.0, Junit, Apache Tomcat 8, PostgreSQL, Eclipse IDE, Visual Studio Code, HTML5, CSS3, JavaScript ES5, jQuery, Ajax, Git, GitHub, Jira.
Education:
●Bachelors in Computer Science Engineering – GITAM University 2011 – 15
Contact this candidate