Professional Summary

Overall **+ years of diverse experience in the IT industry, involved in complete SDLC architecture of Internet/Intranet, Client/Server Applications.
Experience in leading applications in Finance, Auto, Health care, and Insurance.
Expertise in the design and development of web and Windows-based applications using .Net 6,
.Net Core 3.1, ASP.NET, MVC, WEB API, VB.NET, C#.NET, SOAP, WPF, Web Services, WCF.
Well-versed in writing backend, middle-tier, and front-end code.
Experience in developing Microservices using Asp.Net Core.
Strong experience in creating and consuming RESTful and WCF SOAP Web Services.
Expertise in application development using ASP.NET MVC Framework.
Developed distributed applications using Web Services, SOAP, WSDL, and XML in C#.Net.
Expert in designing and implementing single-page applications with Angular and React.
Experience in using Front-end languages like JavaScript, React, Angular, TypeScript, NodeJS,
HTML, CSS, Bootstrap, jQuery, SignalR, Silverlight, Themes, VBScript, and AJAX.
Collaborated with UX/UI designers to create visually appealing and user-friendly interfaces.
Experience in database systems namely MS SQL Server, Oracle, PL/SQL, PostgreSQL, and NOSQL.
Worked extensively on Writing Stored Procedures, Tuning, Triggers, Functions, and Database Design.
Experience in designing applications on Unit of Work and Repository patterns with Entity Framework.
Expert with OOPS Concepts, Multithreading, collections, State Management, and Exception Handling.
Experience in unit testing such as Jasmine and Karma for Angular, and N-Unit and X-Unit for ASP.NET.
Experience in resolving problems and bugs logged by testers and businesses in the .NET applications.
Work on Azure DevOps for continuous integration and continuous deployment (CI/CD) pipelines.
Experience in using Configuration management tools like VSS, TFS, GIT, and SVN.
Used Kubernetes to orchestrate the deployment, scaling, and management of Docker Containers.
Experience in onsite-offshore model interacting with team members for business requirements.
Experience with SOLID Principles and Lazy loading and Dependency injection Design patterns.
Implemented robust security measures such as OAuth 2.0 and OpenID Connect for secure authentication and authorization of users accessing the platform.
Experience in the detection of bugs, rectifying the bugs, and application maintenance.
Expert in developing data layers using Entity Framework, ADO.Net, and LINQ to SQL.
Proficient in developing test cases for unit testing using N Unit in TDD Environment.
Experience in working with solution protocols including HTTP, OAuth, and JWT.
Migrated classic ASP applications to Asp.Net, C#, and MS Access to SQL Server.
Excellent experience with Atlassian products line Agile, Jira, and Confluence.
Experience with Azure, AWS, GCP, Working EC2, CloudWatch, and Docker.
Ability to write and interpret complex shell scripts in Bash, and PowerShell.
Experience with XML, XSLT, XQuery, and XPath and worked with libraries.
Knowledge of MongoDB and Cosmos DB database management tasks.
Good experience with Asynchronous Programming for multithreading.
Maintained and set up new IIS applications across multiple domains.
Used Model-View -View Model for Event-Driven Programming.
Excellent experience in the implementation of Log4Net.
Reporting experience using Crystal Reports and SSRS.
Implemented Factory and Singleton design patterns.

Languages: C#, VB6.0, Ado.Net, C/C++, SQL, Core Java.
.Net Technologies: .Net Framework 4.7/4.5, MVC, .Net Core, Restful API, WEB API, WCF, WPF, SOAP, LINQ.
Web Technologies: ASP.Net, HTML, CSS, JavaScript, TypeScript, React, Angular, Bootstrap, NodeJS, VB script.
Database: SQL Server 2016/2015/2012/, MySQL, PostgreSQL, MS Access, Oracle, T-SQL.
Tools: Visual Studio 2022/2019/2017/2015, Team Foundation Server, Visual Studio Code, JIRA.
Cloud Platforms: Microsoft Azure, Azure Functions, AWS, GCP.
Reporting Tools: SSRS, Crystal Reports, Active Reports.
ORM Technologies: Entity Framework, LINQ to SQL, Dapper.
Vision controls: Visual Source Safe 6/5, Team Foundation Server, SVN, GIT
Operating systems: Windows Vista/ XP/2000/NT/98/95, Windows Server 2003/2008

Educational Qualifications
Master of Science in Information System Security at the University of Cumberland, Kentucky in 2021.
Master’s in information technology from Atlantis University, Miami, Florida in 2017.
Bachelor’s degree in computer science of information technology from JNTU in 2009.
Experience
Full Stack Developer May 2022 - Now
Midmark Corporation, United States, PA.

Telemetry Web application enables a better care experience at the point of care in medical, dental, and animal health. It focuses on harmonizing clinical space, technology, and workflows for caregivers and patients at the point of care. It designs and manages products like Compressors, Vacuums, dental and Sterilizer equipment, and so on, and other healthcare facilities. products are designed to improve patient care, enhance clinical workflows, and promote efficiency in healthcare settings. They invest in research and development to stay at the forefront of healthcare technology.

Responsibilities:

Rewriting the legacy Telemetry web- applications using technologies like C#, Microservices, TypeScript, Nodejs, JavaScript, SQL Server, Azure, LINQ, VS 2022, and Entity Framework.
Responsible for Designing and implementing applications in Azure cloud and Involved in the complete development of Agile Development Methodology/SCRUM.
Developing and maintaining web applications using the React Boilerplate framework.
Upgrading Web API application from .Net core 3.1 to .Net 6.
As a Developer Involved in designing UI Screens using React 18.2, Material-UI., HTML, and Bootstrap.
Optimizing application performance by implementing code-splitting, lazy-loading, and techniques.
Working with React Hooks to maintain the state and lifecycle of each component.
Implementing reusable UI components using Reacts.
Written the code for gauge and state charts for recording and displaying the readings.
Working in using ReactJS Components, Forms, Events, Routers, Animations, and Flux concepts.
Implementing React code to handle cross-browser compatibility issues in IE, Safari, and Google.
Maintaining states in the Stores and dispatched the actions using Redux.
Implemented stable React components and stand-alone functions to be added to future Pages.
Working with C# for backend business logic development.
New library development with Microservices architecture using .Net Core and C#.Net.
Creating Web APIs using C# to perform CRUD Operations from the database.
Using Entity Framework and Web API to get data from the database.
Implementing Authentication and Authorization features of JWT and OAuth for Restful API.
Developing several Rest API services supporting XML and JSON to perform tasks.
Written test cases for all levels using X-unit, improving code quality, and reducing defects.
Creating joins, views, functions, stored procedures, and triggers as part of the SQL database.
Generating data migration and transformation using SSIS and building reports with SSRS.
Creating Test plans and Implemented Unit Testing for API endpoints.
Working with Azure services like Azure Active Directory, App Services, Azure Functions, and Blob Storage to build scalable and reliable cloud-based applications.
Using Azure Service Bus Queues and web jobs to pass messages between different rest web APIs to decouple them to ensure scalability.
Utilizing Redis for caching and data storage, enhancing application speed, and reducing database load.
Implementing Azure DevOps Services for project management tasks and source code repositors’.
Implementing a CI/CD pipeline with Docker, Jenkins, and GitHub by virtualizing the servers using Docker.
Working on Git for Version Control, Code review, automatic builds, and Continuous Integration.
Environment:
.NET 6, Microservices, C#, vb.Net, Web API, WCF, Entity Framework Core, SSIS, X-Unit, Agile, Jira, TypeScript, NodeJS, dotnet CLI, SonarQube, HTML, CSS, Bootstrap, React.js, GIT, PowerShell, Azure, Kafka, JSON, SQL Server, VS Code, Visual Studio 2022, Redis, NuGet Packages, XML, Azure DevOps.
Full Stack Developer June 2020 -May 2022
Northwestern Mutual, USA, Austin, Texas

Northwestern Mutual is a highly regarded financial services known for its commitment to helping individuals and families achieve financial security and plan for a prosperous future focus on life insurance, wealth management, and investments, the company has earned the trust of millions of policyholders and clients across the United States.
The Rhodium Web application contains different modules like Account, Contact, Household, Sales, Emails, and Team. Each module will design and develop, maintain corresponding data or requests, and bring the data together from the third-party services and across the module level.

Responsibilities:

Participated in the Agile development processes, including Sprint planning and daily stand-ups.
Developed web applications from scratch using Asp.Net Core 3.1, Microservices, VS 2019, C#, VB.NET, Entity Framework, LINQ, and Web API.
Developed powerful single-page application with Angular 14, HTML, CSS, Bootstrap, JavaScript, TypeScript, and Angular material. and Node.js
Development of front-end POC Applications using Angular higher versions, Dependency Injection, RxJS, and HTTP modules with Node.js server for future evolutions.
Worked with Angular Forms, Validations, Modules, Components, directives, and HTTP Requests.
Designed Angular modules using Directives like ngShow, ngRepeat, ngAPP, and many more.
Optimized application performance by implementing lazy loading, and Pure Pipes in Angular.
Utilized NGRX for the state, reducing complexity and improving data flow within the application.
Implemented Angular Client-side Validation and type ahead to improve the accuracy of input data.
Utilized Angular logging API for debugging and Monitoring purposes.
Used NPM for installing required Angular Modules and other published Angular NPM Modules.
Utilized TypeScript for enhanced type safety in application codebases, reducing runtime errors.
Collaborated with team to create UI for business goals and provide optimal user experience.
Developed/maintained microservices using C# to enable modular for distributed systems.
Implemented Rest APIs for distributed systems using Asp.Net Core 3.1.
Utilized Repository pattern to create an API Layer along with C# and Dot Net Core.
Implementing Services by using the HTTP Client Module in Angular to make the API Calls.
Optimized C# code for performance, and maintainability to best practices and design patterns.
Integrated third-party APIs for enhanced functionality and data exchange.
Used back-end CRUD functions with different HTTP Methods to implement different API Calls.
Implemented okta oauth2 security for angular UI and the .Net Core application.
Created Test plans and Implemented Unit Testing for API endpoints.
Implemented LINQ operations like Grouping, Ordering, and Filtering to access the database.
Implemented API versioning using Swagger, ensuring easy adoption by internal stakeholders.
Developed complex Stored Procedures using temporary tables and loops using SQL and PL/SQL.
Created new database objects using PL/SQL in the development and Staging environment.
Created reports utilizing SSRS and deployed them on the Server as per business requirements.
Used SQL Tools such as Query Analyzer and SQL Profiler for query optimization.
Implementing Azure Storage accounts, Service Bus, and Azure key vaults to create the application.
Created Azure app services in a way to handle the load balancing and network traffic.
Worked with Azure Blob storage and Azure Functions.
Implemented an Azure data factory pipeline failure notification system using Azure Function Apps.
Used Microsoft Azure DevOps to control the version of source code and Project management.
CI/CD pipeline Integration using Azure DevOps and deployment to Azure Kubernetes services.
Environment:
Asp.Net Core 3.1, C#, Microservices, Azure, EF Core, MS Build, Restful API, Docker, TypeScript, Angular14+, JSON, JavaScript, Bootstrap, CSS, LINQ, XML, Splunk, SSRS, SQL, T-SQL, N-Unit, NodeJS.
Full Stack Developer Jan 2020 – June 2020
FM Global, Rhode Island, United States

FM is an American mutual insurance Organization, that specializes in providing risk management, loss prevention, and property insurance solutions to businesses and organizations worldwide. This business approach is centered on the belief that property losses can be prevented or mitigated. The Business Entity Web Application engineering personnel regularly Contains insured locations to evaluate hazards and recommend improvements to their property or work practices to reduce physical and financial risks if a loss occurs.
Responsibilities:
Design, develop, and test C#, Asp.Net Core, HTML5, CSS3, Bootstrap, JavaScript, and jQuery that meet accessibility and web browser standards for new websites.
Developed MVC Razor/Partial views, layout pages, Controllers, helper methods, and view models.
Developed Web pages using Bootstrap CSS and creating custom CSS files to be applied to web forms.
Used jQuery AJAX calls to trade data with a web server, without reloading the page.
Developed back-end features using the DI principle for MVC Controllers, services, and repositors.
Implemented CRUD functionalities, Sorting, filtering, and Paging Techniques by using Entity Framework.
Used MVC for making Rest calls between application and WCF service.
Worked with C#.Net in .Net Core for building the business login at the backend.
Worked on Querying data in Entity Framework using LINQ to Entity.
Writing SQL Stored Procedures that are helpful for reports and involved in Creating Reports using SSRS.
Involved in N-Unit Testing and Integration Testing of the entire application.
Moved Existing controllers to Angular 9 components for more responsiveness and less dependency.
Implemented Authorization, authentication, and extensive exception handling.
Consumed pre-defined angular directives, and filters and created custom directives as required.
DevOps services for project management tasks, repository, CI/CD, and deployment.
Proficient in creating Azure Function apps for efficient and scalable application development.
Experience with Cloud hosting in AWS or Azure
Worked on Git for Version Control, Code review, automatic builds, and Continuous Integration.
Environment:
ASP.NET MVC Core, Restful API, C#, WCF, HTML, jQuery, Angular JS, JSON, Azure, Angular 9+, Bootstrap, CSS, Ajax Toolkit, GIT, Visual Studio, NuGet, SQL Server, PL/SQL, N-Unit.

Sr.Net Developer Nov 2018 – Dec 2019
CDK Global, IL, United States

CDK Global focuses on providing end-to-end, omnichannel retail commerce solutions to our partners in the automotive, heavy truck, recreation, and heavy equipment industries. It is a leading provider of technology solutions and services tailored to the automotive retail industry. The Web Application covers various aspects of dealership operations, including dealership management systems (DMS), customer relationship management (CRM), inventory management, and sales and marketing tools. It recognizes that we can deliver upon this commitment by listening to dealers and understanding their unique challenges.

Responsibilities:

Worked in Agile Scrum methodology and delivered accepted functionality in each sprint.
Developed an Intranet web application using Asp.Net Core MVC, C#, Angular 8, and Typescript.
Developed features for Customer websites using VB.Net, PostgreSQL, Entity Framework, AngularJS, CSS, HTML Helpers, Angular Material, NodeJS, JavaScript, and jQuery.
Developing the Angular app from scratch for converting the core application from Angular JS.
Developed MVC Razor and Partial views, Layout pages, controllers, helper methods, and View models.
Design and develop using the framework Angular along with HTML, CSS, and Bootstrap.
Created Angular Services and injected them into Angular Controllers using DI to enable AJAX calls.
Extensively used View Data, View Bag, and Temp data.
Used Angular CLI to generate components, routes, Pipes, and Unit tests.
Development of a calendar tool to view daily status reports using MVC and Angular.
Implemented data binding, Error Handling, and event handling using Angular.
Created custom CSS files and Bootstrap to be applied to various web forms.
Redirection links and Lazy Loading to improve performance using Angular Routing.
HTTP requests using RxJS Observable library to handle multiple values over time.
Client-side form validations using Angular validators and created custom validations.
Worked with Restful Web Services and Implemented Restful API and SOAP Protocols.
Implemented CRUD functionalities, and Paging Techniques by using Entity Framework.
Implemented Security, Routing, and Caching in MVC Controllers for application development.
Responsible for UI maintenance and development of WCF service and exposing them using HTTP.
Used XSLT to convert one XML document to another document like PDF, and HTML for web pages.
Developed an entity framework model and made LINQ Queries to connect to the database.
Implemented database schemas in PostgreSQL, Optimizing data retrieval and storage efficiency.
Created, inserted, and extracted JSON data from columns in PostgreSQL databases.
Designed and Created Complex Reports and sub-reports using Crystal reports and SSRS.
Implemented caching strategies using C# to optimize application performance.
Implement Swagger UI to Create Versioning, Documentation, and Testing API’s.
Involved in Unit Testing and Integration Testing of the entire application.
Hosting applications with the AWS Cloud.
Azure DevOps services for project management tasks, code repository, CI/CD, and deployment
Created AWS Lambda functions using C# with event details on which the trigger has occurred.
Design, develop, and deploy web applications using AWS services such as EC2, S3, and Lambda.

Environment:
VS 2019, AWS, Asp.Net Core MVC, C#, VB.NET, Entity Framework, LINQ, Angular8, Typescript, JavaScript, AngularJS, NodeJS, CSS, SSRS, JSON, NuGet, HTML, Bootstrap, XML, XSD, PostgreSQL.
Sr.Net Developer June 2017 – Oct 2018
Eaton Corporation, Michigan, United States

Service Ranger & Link Commander are the diagnostic software used in the commercial vehicle market, to test the automated transmission and hybrid powertrain systems. Ranger is a computer-based electronic service and diagnostic program that provides access to your Eaton electronic products and by using this you can increase uptime, save money, and perform accurate repair procedures, all while increasing productivity and profits. These are Windows-based applications, designed to communicate with vehicle component controllers via the vehicle's diagnostic link connection.

Responsibilities:

Used Agile Methodology for Project which involved daily Scrums and Sprints.
Developed visual components through C#,Asp.Net, VB.NET, WPF, Oracle, HTML, and EF using XAML.
Developed middleware classes and WCF services across the enterprise and integrated with UI.
Designed WPF Forms, Custom Controls, and User Controls using XAML language for interactive UI.
Designed the UI with the Silverlight application using the PRISM class library.
Designed and Implemented the Architecture using the Model View &View Model (MVVM).
Worked on Binding, Styles, Template, Control Template, Events, Converters, and Layout Panels in XAML.
Extensively used Action, Func, and Predicate in View Model and Middleware classes.
Use Dependency Injection for data binding on XAML pages.
Developed multiple POCs to create a user interface in AngularJS.
Use AJAX controls for asynchronous page refresh.
Developed Date Time Picker using Object Oriented JavaScript extensively.
Extensively used Telerik UI Controls for advanced WPF and Silverlight.
SOAP-based web services were consumed for manual authorization.
Worked with 3rd party WPF libraries and controls such as Telerik, and DevExpress.
Extensively used WPF Telerik controls for fast-paced development.
Performance Tuning on the GUI using Virtualization concepts.
Developed Silverlight-enabled WCF services with ASP .Net authentication services.
Implemented Facets as XML attribute to define entity types in a conceptual layer of Entity Framework.
Applied Multithreading techniques for creating high-performance applications.
Created queries on multiple tables using Oracle for Inserting/updating data into the relational tables.
Created Oracle packages, procedures, functions, and triggers.
Implemented SSIS packages to update SQL data tables from Oracle Server.
Implemented LINQ queries on different data sources in the Silverlight application.
Used MOQ to perform Unit Testing.
Worked on TFS and Git for Version Control, Code review, builds, and Continuous Integration.
Wrote Unit test cases using the Visual Studio test tool and Mocking Framework.
Environment:
C#, Net Framework 4.7, Entity Framework, VB.NET, ASP.NET, WCF, WPF, MVVM, SQL Server, NuGet Packages, AJAX, Silverlight, HTML5, CSS3, DevExpress, XAML, SOAP, Visual Studio, Oracle, JSON, XML.
.Net Developer May 2011 – Sept 2015
Nalin Soft Pvt Ltd, India

Chargeback is a process, in which a cheque depositor is charged if the cheque is deposited by the depositor. bounces will send all the bounced cheque information as a form of ECL to the deposited bank. The Chargeback system will process the ECLs and create the Jobs, Blocks, Batches, and Items. After the basic MICR validation, Intelligent Chargeback Processing (ICP) will fetch the depositor details and assign them to the item. Based on the Depositor account respective decisions will be taken by ICP. Extracts, Advice, and IRDs will be sent as an output of the Chargeback system.

Responsibilities:

[
Involved in the Analysis, Design, and development of Web applications. using C#, ASP.NET that communicates to web services. Used N-Tier architecture and Object-Oriented Methodologies.
Development of Views/Razor and classes using C#.NET that incorporates MVC architecture.
Worked on different aspects of the .NET framework, like ASP.NET MVC, ADO.NET, C#, and Vb.Net.
Used Temp Data, View Data, and session variables to transfer data between controls.
Used AngularJS to perform client-side validation and AJAX calls.
Part of, the design, and development of the project by using OOPS concepts and solid principles.
Implemented AngularJS directives, controllers, and services to apply business logic and functionalities.
Designed dynamic and multi-browser-compatible pages using HTML, CSS, Angular JS, and JavaScript.
Used jQuery AJAX calls to trade data with a web server, without reloading the page.
Created and deployed Web Services using C#, SOAP, and XML for Pulling Customer Service Records.
Created user controls to display dynamic data obtained by using Microsoft ADO.NET and Data binding.
Validation controls using both Custom validation and jQuery were written for Client-side validations.
Used Grid View to display data in tabular form with paging for inline editing and viewing supports.
Developed extensive Stored Procedures and Triggers in Oracle.
Provided Role role-based authentication to the Web Application.
Implemented and consumed Web services using WCF.
Involved in incorporating controls like Grid and auto-complete textbox provided by Telerik and Kendo.
Worked in C#, XAML, and MVVM for creating robust and maintainable WPF applications.
Created an application in WPF that generates Silverlight class library by taking XML file as input.
Developed the business layer with LINQ to Objects and LINQ to SQL.
Contributed to data migration from Oracle DB to SQL Server using PL/SQL and T/SQL.
Used LINQ to SQL, LINQ to Store Procedures, and C# to save and retrieve data in the database.
Developed extensive Stored Procedures in SQL Server 2008.
Created complex reports in Crystal Reports on the web page by accessing the database.
Working in an agile Environment to deliver higher-quality software far more rapidly.
Involved in developing user manuals and help documents.
Environment:

.NET Framework 4.6, ASP.NET MVC, Restful WEB API, WPF, C#, ADO.NET, WCF, VB.NET, jQuery, Angular JS, JSON, IIS 7.0, HTML, Bootstrap, JavaScript, Kendo UI, XML, CSS, Ajax, TFS, Crystal Reports, PL/SQL, SQL.

Technical skills:
Contact this candidate