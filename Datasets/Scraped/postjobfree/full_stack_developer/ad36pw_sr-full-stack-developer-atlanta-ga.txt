Eswara Nadh K
912-***-**** ad36pw@r.postjobfree.com linkedin.com/in/eswaranadh
Professional Summary

•Transformed user interfaces with cutting-edge technologies: Leveraged HTML5, CSS3, AJAX, Bootstrap, and
JQuery to craft visually appealing and responsive web designs, ensuring an enriched user experience.
•Mastered contemporary JavaScript and TypeScript: Applied ECMA standards to streamline client-side scripting, ensuring efficient and standardized code practices.
•Engineered scalable Single Page Applications and modularized systems: Utilized React for efficient component-based development, ensuring optimal state management through Redux and Context API.
•Proficient in Java 8: Led end-to-end software development with a focus on analysis, design, and testing. Applied agile methodologies, ensuring technical solutions aligned seamlessly with business objectives.
•Specialized in Microservices architecture: Leveraged Spring Boot, Spring, and Hibernate for efficient and modular development.
•Proficient in designing and implementing fault-tolerant distributed systems using Raft consensus and Lamport
timestamps, ensuring data consistency and real-time updates.
•Skilled in integrating secure payment solutions like Razorpay into software applications, ensuring user convenience and financial security.
•Implemented secure RESTful services: Incorporated JWT and OAuth for robust authentication mechanisms.
•Proficient in messaging queues: Expertise in Kafka, RabbitMQ, and JMS, ensuring seamless communication between services.
•Experienced in designing and implementing real-time applications with Firebase Cloud Functions and Firestore, enabling instantaneous data updates and responsive user experiences.
•Expert in various databases: Including MongoDB, Redis, Oracle, Postgres, Cassandra, DB2, and MySQL.
•Conducted comprehensive API testing: Used Swagger2, Postman, JMeter, and SOAP UI to ensure the quality of implementations.
•Implemented thorough unit testing: Utilized JUnit, Mockito, and PowerMock for code quality assurance.
•Utilized industry-standard build tools: Such as Maven, Slf4J, Log4J, Gradle, and ANT for streamlined project builds.
•Demonstrated expertise in version control systems: Including Hub, Lab, and Bitbucket.
•Proficient in deploying applications on application servers: Tomcat, WebLogic, and JBoss, ensuring optimal performance.
•Hands-on experience with DevOps and Cloud technologies: Configured Jenkins for automated builds, Docker for containerization, and AWS for cloud infrastructure.
•Contributed to efficient deployment and maintenance of containerized applications: Using Docker Swarm and
Kubernetes.
•Architected and deployed scalable AWS infrastructure (EC2, RDS, S3) and containerized services (ECS) using
IaC (Terraform and CloudFormation), streamlining deployments and boosting resource efficiency.
•Utilized JSON parsing libraries in Python and Java to bridge diverse data sources with custom data pipelines and interoperable APIs, seamlessly integrating data exchange into web applications and microservices architectures.

Experience
Sr. Full Stack Developer 03/2023 – Present
Southwest Dallas, TX
•Developed responsive and visually appealing user interfaces using HTML5, CSS3, and Bootstrap.
•Implemented asynchronous server communication through AJAX, significantly improving user experience. Utilized promises for efficient data handling and caching mechanisms to minimize server requests.
•Utilized jQuery’s rich library of features to implement interactive form validation, animations, and real-time search functionality in a single-page application, enhancing user experience.
•Implemented sophisticated state management utilizing Redux, integrating middleware to handle asynchronous actions effectively, ensuring smooth data flow within the application.
•Utilized React JS Virtual DOM and React views, employing components structured with nested custom HTML tags, to enhance modularity and maintainability while rendering dynamic user interfaces.
•Engineered routing components using the react-router module to facilitate seamless navigation between various application components and views, ensuring a coherent user experience.
•Enriched front-end functionality by implementing dynamic and interactive features using JavaScript, elevating user interfaces to provide a captivating and intuitive user journey.
•Employed Spring Core Annotations for dependency injection and leveraged Spring MVC for building RESTful APIs, alongside Spring Boot for microservices, ensuring robustness and scalability in application architecture.
•Implemented business logic using Spring framework components, seamlessly integrating data persistence through
Hibernate ORM framework, ensuring efficient handling and management of data entities.
•Leveraged extensive expertise in JavaScript and TypeScript to drive robust application development, harnessing their dynamic typing, modern syntax, and powerful tooling to ensure scalable and maintainable codebases.
•Maintained up-to-date knowledge of ECMA standards to capitalize on language enhancements, ensuring adoption of the latest features and best practices to enhance code quality and developer productivity.
•Executed thorough unit testing with Jasmine and Karma, ensuring comprehensive test coverage and robust validation of application functionality, to guarantee code reliability and maintainability.
•Leveraged Java 11 features and enhancements to drive effective back-end development, harnessing its improved performance, security, and productivity enhancements to build scalable and resilient server-side applications.
•Architected and implemented a scalable microservices architecture, utilizing containerization and orchestration technologies to enable flexible and efficient deployment, management, and scaling of independently deployable services, ensuring agility and resilience in the application infrastructure.
•Successfully deployed API gateways for efficient communication between microservices.
•Implemented service discovery and load balancing strategies for enhanced scalability.
•Designed, developed, and maintained RESTful services for seamless component communication.
•Implemented versioning strategies for APIs to ensure compatibility during updates.
•Developed microservices using Spring Boot for streamlined deployment.
•Applied Spring Core Annotations for effective dependency injection.
•Seeking a seasoned Spring Data JPA Developer proficient in ORM principles, advanced SQL queries, and Spring framework to architect, develop, and optimize database access layers.
•Leveraged Spring Security to implement a robust authentication and authorization framework, ensuring secure access control and safeguarding sensitive data in alignment with industry best practices.
•Leveraged Spring Cloud principles to architect and develop scalable distributed systems, incorporating microservices architecture and advanced cloud-native techniques for seamless scalability and resilience.
•Utilized JWT and OAuth to implement robust authentication and authorization mechanisms, ensuring secure access control and user authentication in web applications with industry-standard security protocols.
•Effectively deployed Apache Kafka as a messaging queue to ensure reliable message delivery, enhancing system scalability and fault tolerance for seamless data processing and distribution.
•Facilitated scalable and real-time communication across distributed systems, enhancing system responsiveness and efficiency.
•Designed and implemented a scalable NoSQL solution using MongoDB. Leveraged aggregation pipelines and
geospatial queries for efficient data analysis and retrieval.
•Utilized Redis Lua scripting for complex caching logic and data manipulation, enhancing performance and reducing code complexity.

•Configured Swagger2 with custom data models and annotations, ensuring accurate and up-to-date API documentation.
•Leveraged JUnit’s runners and annotations to create well-structured and maintainable test suites. Efficiently mocked dependencies with Mockito, enabling focused testing without external interactions. Employed PowerMock for advanced mocking scenarios, such as testing private methods or final classes.
•Automated release management with Maven plugins, ensuring consistent and repeatable deployments.
•Implemented SLF4J with Logback for efficient and flexible logging in applications. Utilized custom log levels and parameterized logging to enhance log clarity.
•Configured S3 buckets with Intelligent-Tiering and lifecycle policies to optimize data storage costs for long-term archival. Implemented server-side encryption and IAM policies for enhanced security. Automated data backups and deletion using AWS Lambda for streamlined management.
•Leveraged Docker expertise to containerize a microservices architecture, employing overlay networks for
inter-container communication and volumes for persistent data management. Utilized multi-stage builds, Docker Compose, and CI/CD integration for efficient build and deployment processes.
•Successfully deployed and managed a highly available microservices architecture on AWS EC2, utilizing automated deployments with CI/CD pipeline. Implemented IAM roles and security groups for access control, and employed Auto Scaling to handle traffic surges.
•Architected and implemented S3 storage with Intelligent-Tiering and lifecycle policies for cost-optimized data archiving. Enforced security with server-side encryption and IAM policies. Automated data backups with Lambda functions for streamlined management.
•Utilized JSON for efficient data interchange between microservices in a highly scalable API. Implemented JSON schema validation for data integrity and consistency. Optimized serialization/deserialization for performance gains.

Sr. Full Stack Developer 02/2022 – 03/2023
Essent Guaranty Radnor, PA

•Developed responsive and visually appealing user interfaces using HTML5, CSS3, AJAX, Bootstrap and JQuery.
•Used React JS in components like JSX, creating React components. Used React JS in development of the web application to bind the data/model that is being retrieved from a database through services provided in a controller to the view using scope.
•Worked extensively on React JS showcasing proficiency in building dynamic and scalable web applications.
•Applied expertise in JavaScript and TypeScript for robust application development, staying current with ECMA standards. Handling code optimization techniques to decrease much use of JavaScript in creating dynamic functionality, with the use of CSS classes.
•Performed comprehensive testing using Karma, Jasmine, and Protractor, ensuring the reliability of applications.
•Extensively used Java 8 features such as lambda expressions, Parallel operations on collections, multithreading and for effective sorting mechanisms.
•Designed and implemented a scalable microservices architecture by breaking down the application into loosely coupled, independently deployable services. Leveraged design patterns such as service discovery, circuit breaker, and centralized configuration to ensure resilience and scalability.
•Developed microservices using Spring Boot, a popular framework for building microservices in Java. Applied Spring Core Annotations such as @Autowired and @Component for dependency injection, promoting cleaner code and easier maintenance.
•Utilized Spring Cloud concepts, including service discovery with Eureka, intelligent routing with Zuul, and distributed configuration with Spring Cloud Config, to build scalable distributed systems. Leveraged these tools to manage complex microservice architectures efficiently.
•Developed and maintained RESTful services and APIs to facilitate seamless communication between microservices and client applications. Adhered to REST principles, such as statelessness and uniform interface, ensuring interoperability and scalability.
•Implemented versioning strategies for APIs using approaches like URI versioning or media type versioning to manage changes and ensure backward compatibility. Employed tools like Swagger UI to document APIs comprehensively, aiding in their understanding and usage.

•Successfully deployed API gateways such as Netflix Zuul or Spring Cloud Gateway to centralize routing, security, and monitoring tasks across microservices. Implemented authentication and authorization mechanisms to secure API endpoints and prevent unauthorized access.
•Conducted comprehensive testing and documentation using Swagger2 for RESTful APIs, enabling developers to visualize and interact with APIs effortlessly. Generated API documentation automatically, ensuring accuracy and consistency across endpoints.
•Utilized Spring Boot for streamlined deployment of applications, leveraging its embedded server capabilities and auto-configuration features. Simplified the deployment process, reducing deployment time and complexity.
•Implemented Spring Boot features such as @SpringBootApplication and Spring Boot Starter dependencies to enhance modularity and code organization. Leveraged Spring Boot’s convention-over-configuration approach to minimize boilerplate code and improve developer productivity.
•Configured and maintained Jenkins jobs for automated build, test, and deployment processes with Spring Boot
applications.
•Involved in Spring Security to deliver the Authentication Service, where I applied Spring Security to develop the Token Repository for the remember me functionality, ensuring robust authentication and seamless user experience.
•Vast experience developing strategies for centrally managing sensitive properties and environment variables in multi-regional, cloud-native environments using Spring Cloud Config Server
•Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects (DAOs) at the compile time.
•Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernate’s second level EHCache.
•Implemented efficient data operations with Hibernate in conjunction with relational databases.
•Implemented JWT and OAuth for secure authentication and authorization in web applications.
•Utilized RabbitMQ as a messaging queue for reliable communication between different components of a distributed system.
•Implemented messaging queues with RabbitMQ to enable scalable and real-time communication across microservices.
•Engaged with Oracle and Postgres databases to ensure efficient and optimized data operations, leveraging the unique features and capabilities of each database platform.
•Conducted API testing using tools like Postman, ensuring the reliability of RESTful services and APIs.
•Implemented thorough unit testing using JUnit, Mockito, and PowerMock, ensuring the behavior and interactions between components are verified.
•Utilized Maven as a centralized project management tool, incorporating Log4J for efficient logging in applications.
•Utilized Tomcat for deploying applications, ensuring efficient and reliable server-side execution, and leveraging its robust features for seamless deployment and management.
•Managed and maintained Jenkins jobs to configure automated build, test, and deployment processes, ensuring continuous integration and delivery pipelines were efficient and reliable.
•Utilized Docker to deploy Spring Boot microservices encapsulated within containers, on AWS EC2 instances, ensuring scalability and efficient management of application resources.
•Utilized AWS S3 buckets to configure storage for efficient data management in cloud-based applications, ensuring secure, scalable, and reliable storage solutions tailored to application requirements.
•Interacted with data formats like JSON for effective data interchange and representation within applications.

Java Full Stack Developer 01/2021 – 01/2022
Citi Newyork, NY

•Developed the front-end and user interface of applications, utilizing JavaScript, ES6, React, and Redux to create dynamic and interactive experiences for users.
•Developed Single Page Applications (SPAs) using React-Router, ensured smooth and efficient navigation between different views as clients perform various tasks within the application.
•Wrote modules using React as a view engine, enabling the creation of component-based applications that are both flexible and scalable.
•Developed Reusable React components, which not only improved development efficiency but also enhanced the maintainability of the codebase. Additionally, I effectively managed application state using Redux, a popular state management library in the React ecosystem.

•Applied various Redux middleware, including redux-promise, redux-thunk, and redux-saga, to handle asynchronous actions and side effects, ensuring the robustness and reliability of the application.
•Utilized redux-form to manage form state in Redux, simplified the process of handling form data and validation within the application.
•Effectively employed closures in JavaScript to manage scope, enabling the creation of private variables/functions. This approach improved code readability and maintainability.
•Applied a variety of ES6 features, including arrow functions, template literals, destructuring, and spread/rest operators, to write modern JavaScript code. These enhancements improved the functionality and performance of web applications.
•Utilized Java 8's advanced features, including lambda expressions, streams, functional interfaces, and optional class, to write concise and efficient code.
•Developed microservices architecture using Docker for containerization, Kubernetes for orchestration, and incorporating service discovery and API gateway for scalability and resilience.
•Utilized advanced topics like event-driven architecture and reactive programming to design and implement highly responsive and scalable microservices.
•Designed and implemented RESTful services adhering to REST principles, ensuring a standardized and scalable API architecture.
•Utilized advanced HTTP concepts such as status codes, headers, and caching mechanisms to optimize REST API performance and reliability.
•Implemented authentication and authorization mechanisms using OAuth 2.0 and JWT to secure RESTful services and protect sensitive data.
•Leveraged HATEOAS (Hypermedia as the Engine of Application State) to design RESTful APIs that provide discoverability and self-descriptiveness, enhancing the client-server interaction.
•Developed microservices using Spring Boot, leveraging features such as embedded servers, auto-configuration, and metrics collection for rapid development and deployment.
•Implemented security features in Spring Boot applications, including OAuth 2.0, JWT, and SSL/TLS, to ensure robust authentication and authorization mechanisms.
•Utilized Spring Boot Actuator to monitor and manage applications in production, integrating metrics, health checks, and application-specific endpoints for efficient troubleshooting and performance optimization.
•Utilized Hibernate's advanced mapping techniques, including one-to-one, one-to-many, and many-to-many associations, to model complex database relationships in object-oriented applications.
•Implemented Hibernate's caching mechanisms, including first-level and second-level caching, to improve application performance by reducing the number of database queries and optimizing data retrieval.
•Implemented Kafka's advanced features such as partitioning, replication, and offset management to build highly scalable and fault-tolerant messaging systems.
•Utilized Kafka Streams for real-time stream processing, leveraging features like windowing, aggregation, and joins to process and analyze data streams in real-time.
•Utilized Cassandra's features such as tunable consistency, compaction strategies, and partitioning to design a highly available and scalable distributed database system.
•Utilized JMeter's features such as distributed testing, parameterization, and scripting to conduct comprehensive performance testing of web applications.
•Utilized JUnit, Mockito, and PowerMock frameworks with advanced techniques such as parameterized tests, test suites, mocking static methods, mocking private methods, and test spies to achieve comprehensive unit test coverage and ensure the reliability and maintainability of the codebase.
•Implemented Gradle build scripts with dependency management, leveraging the dependencies block and configuration rules to automate project setup and streamline the build process.
•Utilized Bitbucket for version control, leveraging advanced features such as branching strategies, pull requests, and code reviews to facilitate collaborative development and ensure code quality.
•Utilized Pivotal Cloud Foundry (PCF) for deploying and managing applications, leveraging concepts such as buildpacks, services marketplace, and scaling policies to achieve efficient and scalable cloud-native application deployments.
•Utilized JSON (JavaScript Object Notation) for lightweight data interchange, leveraging its simplicity, readability, and widespread support in web development for transmitting structured data between a server and a client.

Java Developer 01/2019 – 12/2020
Kotak Mahindra Bank Mumbai, India
•Proficiently crafted visually compelling and responsive user interfaces by leveraging HTML5, CSS3, and AJAX. Implemented a responsive design paradigm using Bootstrap framework and enhanced front-end interactivity through effective utilization of JQuery.

•Demonstrated expertise in building dynamic and scalable web applications through extensive work with React.
•Developed and maintained complex web applications, utilizing the features and capabilities of the React.
framework. Applied React best practices, ensuring responsive and interactive user interfaces.
•Applied advanced proficiency in JavaScript and TypeScript to achieve robust and feature-rich application development. Stayed abreast of the latest standards and enhancements within the ECMA script specifications.
•Implemented and maintained SOAP (Simple Object Access Protocol) web services for secure and standardized communication between distributed systems.
•Ensured adherence to industry standards and protocols in SOAP based interactions, promoting interoperability and seamless integration.
•Utilized WSDL (Web Services Description Language) for clear definition and documentation of SOAP web services interfaces.
•Implemented Spring MVC (Model-View-Controller) for building robust and scalable web applications, facilitating the separation of concerns and promoting a modular architecture.
•Leveraged Hibernate for efficient and seamless data persistence through the use of Object-Relational Mapping (ORM) techniques.
•Optimized database interactions by implementing best practices and utilizing advanced features of the Hibernate
ORM framework.
•Designed and maintained scalable and performant data operations by integrating Hibernate within the application architecture.
•Implemented Apache Kafka as a robust messaging queue system, ensuring reliable and fault-tolerant message delivery in distributed systems.
•Leveraged Kafka for scalable and real-time communication between different components of a distributed system, enhancing overall system performance.
•Interacted with and managed data operations in relational databases, including DB2 and Oracle, ensuring efficient and optimized storage and retrieval of information.
•Conducted comprehensive API testing using SoapUI, ensuring the reliability and adherence to standards in SOAP-based web services.
•Deployed and maintained applications on the WebLogic application server, ensuring robust and efficient execution in enterprise-level environments.
•Deployed and managed applications on PCF-1 (Pivotal Cloud Foundry), ensuring seamless integration and efficient utilization of cloud-based resources.

Java Software Developer 05/2017 – 12/2018
Grazitti Interactive Panchkula, India
•Developed dynamic and interactive web pages using JavaServer Pages (JSP) and implemented server-side logic with Servlets, ensuring efficient handling of user requests and responses in web applications. Dec 2022 - Present
•Implemented web applications using JavaServer Faces (JSF), facilitating the development of user interfaces with reusable components and promoting a structured approach to building Java web applications.
•Applied Object-Oriented Programming (OOPS) principles to design and develop modular, maintainable, and scalable software solutions, emphasizing encapsulation, inheritance, and polymorphism for effective code organization and reusability.
•Demonstrated proficiency in Java, utilizing its powerful features and functionalities to develop robust and scalable applications across various domains.
•Utilized Java Swing to create interactive and visually appealing graphical user interfaces (GUIs), enhancing the user experience in desktop applications.
•Utilized Struts for building robust and scalable web applications, implementing the Model-View-Controller (MVC) architecture to ensure clear separation of concerns.
•Implemented Enterprise Java Beans (EJB) for the development of scalable and distributed enterprise-level applications, leveraging component-based architecture for modular and maintainable solutions.
•Leveraged Hibernate for efficient and seamless data persistence through the use of Object-Relational Mapping (ORM) techniques.
•Utilized Apache Ant for automated build processes, ensuring efficient and standardized project compilation, testing, and deployment.
•Managed source code versioning and collaborative development using CVS (Concurrent Versions System), ensuring effective team collaboration and version control.
•Deployed and maintained applications on the JBoss application server, ensuring robust and efficient execution in enterprise-level environments.

Projects
Distributed Consistent Replica C, UDP, Pthreads, Raft Algorithm, Lamport Clock 12/2023 – 12/2023
•Engineered a robust solution ensuring consistency among servers by implementing the Raft Algorithm, a distributed consensus protocol, resulting in a 99% synchronization success rate.
•Reduced latency by 30% through meticulous optimization of UDP communication payload size, enhancing the efficiency of data transfer among distributed servers.
•Empowered servers to promptly handle READ and WRITE requests by implementing multi-threading using
Pthreads, guaranteeing real-time data updates and seamless communication.
•Implemented a fault-tolerant system, ensuring reliable performance even in the face of server failures or network disruptions.
•Employed Lamport Clocks for logical timestamping, facilitating a reliable and ordered sequence of events across distributed nodes.
•Conducted extensive testing and performance analysis, identifying bottlenecks, and implementing optimizations for enhanced system responsiveness.
•Provided comprehensive documentation for system architecture, enabling easy maintenance, and facilitating future enhancements.
Network Job Replicator C, RPC, Pthreads 11/2023 – 11/2023
•Developed and managed a replicator for distributing jobs across servers using the RPC framework.
•Implemented monitoring and control mechanisms for server performance and task execution.
•Crafted a command-line interface for dynamic server interaction and incorporated multithreading support.
•Optimized network communication protocols, enhancing data transfer efficiency and reducing latency by 25%.
•Implemented fault-tolerance mechanisms to ensure seamless job replication, even in the event of server failures.
•Conducted extensive testing, identifying and resolving scalability issues for optimal performance under high loads.
•Provided comprehensive documentation for system architecture, enabling easy maintenance, and facilitating future enhancements.
Technical Skills
Languages: Java, JavaScript, TypeScript, HTML5, CSS3, ECMAScript, Python, C, Dart
Web Services: RESTful services, SOAP web services
Frameworks: React.js, Angular, Spring (including Spring Boot, Spring MVC, Spring Security, Spring Data JPA, Spring Cloud), Hibernate, Redux, Express.js, Flutter, Prisma, Nest JS, React Native
Databases: MongoDB, Redis, Oracle, Postgres, Cassandra, DB2, MySQL
Scripting Languages: JavaScript, TypeScript, Python
Cloud Technologies: AWS (EC2, RDS, S3, ECS), Docker, Docker Swarm, Kubernetes, Pivotal Cloud Foundry, Terraform, CloudFormation
Application Server: Tomcat, WebLogic, JBoss
Build and Test Tools: Maven, Gradle, Ant, JUnit, Mockito, Power Mock, Karma, Jasmine, Protractor, Swagger2, Postman, SoapUI, JMeter
Version Control: Git (Hub, Lab, Bitbucket), CVS (Concurrent Versions System)
Automation Tools: Jenkins
Education
Cleveland State University Cleveland, OH
Master’s in computer science, 3.66 GPA 01/2022 – 12/2023
Personal Achievements
Secured 1st place in Startup Vikes Nov. 2023
Contact this candidate