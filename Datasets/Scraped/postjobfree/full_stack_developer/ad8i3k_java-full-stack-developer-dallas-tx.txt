Viswasri Sai
Java Full Stack Developer
Email Id: - ad8i3k@r.postjobfree.com Phone: +1-469-***-****
Linkedin:- linkedin.com/in/viswasri-s-360935247

Around 9+ years of extensive exposure in all phases of Software Engineering (SDLC), Project management (Waterfall & Agile Methodology) including Requirement gathering, Analysis, Design, Coding, Testing, Deployment, Implementation and Documentation.
Expertise in designing and developing server - client and web-based applications in Java/J2EE technology using Object Oriented Technology.
Proficient in Test Driven Development (TDD) for both frontend and backend using Java (JUnit, Karma, Jasmine, Jest, Enzyme and Mockito).
Proficient in highly interactive web applications utilizing JavaScript, HTML5, CSS, JSON, Bootstrap, jQuery, integrating Restful APIs, external web services ensuring performance on Mobile and Desktop.
Extensive knowledge in developing SPAs, using MERN (Mongo, Express, React, Node) stack.
Proficient knowledge on spring framework modules like Spring Batch, Spring IoC, Spring DAO support, Spring JDBC, Spring ORM, Spring Security, Spring Data, Spring Cloud, Spring JTA, Spring AOP, Spring Core.
Expertise in producing and consuming SOAP as well as REST web services using WSDL, JAX-WS, JAX-RS, Apache Axis, Apache CXF, Apache Camel, JERSEY, Rule Engines (Drools, ILOG).
Experience in database modeling, design, and development of PL/SQL stored procedures, packages in RDBMS like Oracle, SQL Server, PostgreSQL, and MySQL.
Designing and developing microservices architecture using Java and Spring Boot.
Experience with NO SQL databases like MongoDB, Cloudant DB, Cassandra, and DynamoDB development (reports, schema design, map-reduce functions) using ODM frameworks like Mongo's Connector, Cassandra Node Connector.
Proficient in Angular framework, with hands-on experience in Angular 2+.
Developed responsive web applications using Angular, adhering to best practices and design patterns.
Experience in debugging using implementation of Apache Log4j for logging and performance testing using Apache JMeter and JProfiler.
Collaborating with UX/UI designers to ensure a seamless user experience.
Proficient in leveraging Node.js and related frameworks to develop server-side logic, RESTful APIs, and real-time applications.
Proficient in creating reusable and modular Angular components, following component-based architecture principles.
Experience in working with functional testing open-source tools Selenium (IDE, RC, and Web Driver).
Expertise in messaging queues like JMS, Confidential MQ, Rabbit MQ, Apache Kafka.
Having Good experience in developing and migrating existing applications into cloud-based platforms like Amazon Web Services (AWS)
Developing RESTful APIs and GraphQL endpoints to support front-end features.
Led the integration of Java backend services with Python-based machine learning models for real-time data processing.
Knowledge in building services in Google Cloud Platform (GCP) i.e., GCE instances, Kubernetes, Shared VPC.
Expertise in a CI/CD pipeline using Azure DevOps (VSTS) in both cloud and on-premises with GIT, MS Build, Docker, and Maven along with Jenkins plugins.
Experience working with Amazon Web Services (AWS) like EC2, S3 bucket, Lambda.
Experience different CI/CD tools like Jenkins and bamboo and created continuous integration and deployment using Docker containers.

EDUCATIONAL EXPERIENCE:

Bachelors in technology from Gandhi Institute of Technology and Management
Masters in computer science from Cleveland State University, Cleveland

TECHNICAL EXPERIENCE:

Cloud Platforms
Azure, Amazon Web Services: EC2, S3 etc., OpenShift
Languages
Java 11, 8, 1.6/1.5, PL/SQL, YML, UML, XML, XSL, XSLT, C, C++, python
J2EE Technologies
JSR-286 Portlets, JDBC, JPA Servlets, JSP, JMS, JUnit, RMI, Apache Axis2, REST, Kafka.
Frameworks
ReactJS, Angular 1.x, 2.x,11 Node.js, JSF 1.x/2.x, Struts 1.x, Spring 3.x/4.x, Spring Boot 1.5x 2.x, Spring Cloud, MVC architecture, EJB 2.x/3.x, IBM HATS
Persistence layer
Hibernate 3/4, JPA.
IDEs/tools
Eclipse, IntelliJ Suite, MyEclipse, Net-Beans, JBoss, WSAD/RAD, IBM Rational Software Architect (RSA).
Design Modeling
OOA/OOD, AOP, UML
Web Tools
Typescript, AJAX, DOJO, CSS, JavaScript, Flex, XML, HTML, XHTML, SOAP, WSDL.
Version Control
Git, Gitlab, Git Bash, Harvest, SVN, CVS, Clear Case.
Database
IBM DB2, Cassandra, Oracle12g, Postgres, MS SQL Server, MySQL
Documentation Tools
MS Office 2016, Visio, O365, MS SharePoint, Confluence
Web/Application Servers
Docker, IBM Web Sphere, Web Logic, Apache Tomcat.
Methodologies
Agile, SCRUM, TDD, Waterfall
Operating Systems
Windows (Major), Linux
Others
ANT, Maven, Gradle, Rational Software, Open Make, UMLet, Log4J, Junit

PROFESSIONAL EXPERIENCE

Responsibilities:
Experience in working on various Spring modules like Spring boot, Spring MVC, Spring IOC, Spring Data, Spring ORM, Spring Actuator) using Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs.
Developed and maintained complex graph databases using Neo4j, enhancing data relationships and enabling advanced query capabilities.
Involved in using Core java concepts - Collections, Exception Handling, Multithreading, Concurrency, Serialization and Java 1.8 features. Involved in writing application-level code to interact with APIs, Web Services using JSON.
Integrated Neo4j with various data sources and ETL tools to ensure seamless data flow, improving data consistency and accuracy.
Designing and implementing GraphQL schemas and resolvers.
Creating GraphQL APIs using Java libraries like graphql-java.
Created DB tables, Functions, Joins, and wrote prepared statements using PL/SQL.
Experience in creating RESTful web services. Closely worked with the TechOps team for automating the build jobs for deploying with the help of Jenkins with GIT as version control.
Leveraged Python for scripting and automation tasks, improving development workflows and efficiency.
Collaborated with Python developers on cross-functional projects, contributing Java backend expertise.
Implemented the J2EE standard design patterns such as DAO, Factory, Singleton, Observable, Fa√ßade etc. patterns for the code reusability.
Integrating Spring Boot applications with messaging systems like Kafka.
Setting up and managing Gradle build scripts for Java projects.
Managing file permissions and user accounts in Unix/Linux environments.
Using Unix/Linux command-line tools for system administration tasks.
Creating custom Gradle tasks for automation and build processes.
Collaborated with frontend developers to integrate Java backend with Angular frontend using TypeScript.
Utilized TypeScript for building responsive and interactive user interfaces in Angular applications.
Implemented robust backend solutions utilizing MongoDB as the primary NoSQL database.
Utilized MongoDB's aggregation framework for complex querying and data analysis.
Implemented Neo4j graph database solutions to handle complex relationships and improve data retrieval performance.
Integrated Neo4j with Java backend services using Spring Data Neo4j to facilitate seamless data interactions.
Designed the front-end screens using ReactJS, HTML5, CSS3, JavaScript, jQuery, Bootstrap that meets accessibility and web browser standards for website.
Collaborated with DevOps team to deploy and manage MongoDB clusters in production environments.
Learned to Implement Java 11 with Hibernate in IntelliJ Platform.
Developed distributed tracing and monitoring solutions like Spring Cloud Sleuth and Prometheus, enabling effective observability and troubleshooting of microservices.
Containerized microservices using Docker, facilitating deployment and scalability in container orchestration platforms like Kubernetes or Docker Swarm.
Developed RESTful APIs for a large-scale e-commerce platform using Node.js and Express.js, resulting in a 30% improvement in response time.
Assisted in the development of a microservices architecture using Node.js and Docker, leading to improved modularity and scalability of the application.
Implemented React JS components, Events, Forms, Keys, Router, Animations and Flux concept.
Used Oracle as Database and Involved in the Development of PL/SQL Backend Implementation.
Used various React UI Bootstrap components such as calendars, masks, uploaders, sliders, alerts, modal dialogs etc. for developing the UI.
Developed Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth-2.0. Working experience with Mule ESB.
Installing and Configuring Nagios check PostgreSQL.pl plugins for Monitoring PostgreSQL instances Effectively.
Proactive in updating the latest security patches databases, which are provided by PostgreSQL open-source community.

Environment: JavaJDK8, Web services, J2EE, Java 11, ReactJS, Microservices, Gradle, Restful Services, Spring Boot IntelliJ, PL/SQL, Java 11, NodeJS, JavaScript, PostgreSQL, css3, JUnit, Postman, log4j, XML and JSON, Event Hub, Kafka, Open shift, Kubernetes.

Responsibilities:
Participate in systems implementation, including maintenance, user allocation, design, coding, error removal, logic optimization, systems re-evaluation, testing, user approval, final corrections, and documentation.
Collaborated with UI and UX team to make mobile application user friendly. Collaborated with external designers to coordinate delivery of software application.
Developed, enhanced, and debugged software applications that support external clients as well as internal business units or supporting functions.
Optimizing GraphQL queries for performance and efficiency.
Integrating GraphQL with Spring Boot for seamless backend development.
Optimizing Gradle builds for faster compile times and reduced overhead.
Managing project dependencies using Gradle's dependency management system.
Monitoring system performance and resource usage on Unix servers.
Setting up and configuring network interfaces and services on Unix systems.
Designed and optimized Neo4j graph schemas to efficiently model real-world entities and their relationships, improving query performance by 30%.
Testing Spring Boot applications using Spring Test and JUnit.
Hands-on experience with Java 11, leveraging its latest features and enhancements to develop modern and efficient Java applications.
Implementing Gradle plugins to extend functionality and streamline workflows.
Developed RESTful APIs in Java for seamless integration with Python-based services.
Integrated MongoDB with Java applications using MongoDB Java Driver.
Implemented data migration and transformation processes between relational databases and MongoDB.
Collaborated with front-end developers to implement interactive data visualization features using Neo4j data.
Developed custom procedures and functions in Neo4j to automate data integration processes, saving 15 hours of manual work per week.
Extensive experience in building microservices architecture using Java, leveraging frameworks such as Spring Boot and Spring Cloud to create scalable and decoupled services.
Used Spring Boot to create enhanced micro services and implemented the security for service layer methods using Spring Security to provide authentication and authorization to certain business functions.
Developed business services with, JSON, XML and Restful Web Services technologies.
Implemented J2EE applications, including the utilization of Java EE technologies like Enterprise JavaBeans (EJB), Java Message Service (JMS), and Java Transaction API (JTA) to build robust and transactional applications.
Configuring and managing application properties and profiles in Spring Boot.
Strong understanding of J2EE application servers such as Apache Tomcat or IBM WebSphere, proficient in deploying and managing applications in these environments.
Involved in DevOps to configure Maven, GitHub, Docker, and AWS to build and deploy pipeline in Jenkins.
Developed Apache camel routes, JMS endpoints and used free marker to customize service responses.
Used Web services (SOAP, Rest) for transmission of large blocks of XML data over HTTP.
Involved in deploying systems on Amazon Web Services (AWS) Infrastructure services EC2, S3, RDS, SQS, and Cloud Formation.
Integrated Node.js applications with various third-party services and APIs (e.g., payment gateways, social media platforms) using RESTful interfaces or SDKs.
Development of Service contract, Operation Contract, and data contract classes to support communication between agent using services-oriented Architecture (SOA) though WCF web services in C#.NET.
Consumed and processed JSON data from backend services in Angular components.
Conducted debugging and troubleshooting of Angular applications to ensure smooth functionality across different browsers and devices.
Integrated Angular applications into CI/CD pipelines for automated build, test, and deployment processes.
Worked on AngularJS, used its two-way data binding to achieve the feedback functionality from the user.
Used Maven for project dependency management and Log4j for logging. Involved in activities like code review, performance improvement.
Created Typescript reusable components and services to consume REST API's using Component based architecture provided by angular 2.
Standardized processes for testing Angular applications, using Karma with Mocha for unit and integration testing.

Environment: Java 1.8, Spring 3.5, J2EE, Java 11, Apache Camel, Micro Services, Tomcat server, log4j, GIT (Stash), Source Tree, Spring Web flow, C#.NET, Maven, SOAP UI, ADOBE, Eclipse Luna 4.4, Junit, putty, Angular 11, JS, FileZilla, Junit4.

Responsibilities:
Developed user interface by using the React JS, Redux for SPA development.
Used React JS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application (SPA).
Securing GraphQL endpoints and data using authentication and authorization mechanisms.
Perform configuration, testing, and change control documentation for the cloud stack environment.
Installation and development of workflows for integration and automation in the cloud-based solutions.
Experience in using ReactJS components, Forms, Events, Keys, Router, plus Redux, Animations and Flux concept.
Collaborated with software development teams to integrate Neo4j databases with front-end applications, resulting in a 25% increase in application performance.
Familiarity with Java 11 language features including but not limited to var keyword, HTTP Client API, improved lambda expressions, enhanced security, and performance optimizations.
Skilled in performance optimization of J2EE applications, employing techniques like caching, connection pooling, and query optimization to enhance application speed and efficiency.
Responsible for React UI and architecture. Building components library, including Tree, Slide-View, and Table Grid
Implementing caching solutions in Spring Boot applications.
Managing application dependencies with Spring Boot's dependency management.
Used Spring core for dependency injection/inversion of control (IOC) and integrated React JS and Hibernate.
Implemented user authentication and authorization features using Java Spring Security and Angular guards with TypeScript.
Built and maintained RESTful APIs to facilitate data access and manipulation within Neo4j, enhancing the scalability of applications.
Actively contributed to open-source Node.js projects on platforms like GitHub, participating in code reviews, issue tracking, and feature development to support the community and enhance personal skills.
Implemented RESTful APIs to facilitate communication between Java backend and Angular frontend.
Used APIGEE for API Identification and Resource Definition based on REST principles.
Used Spring MVC for REST API and Spring Boot for micro services.
Utilized Python libraries such as Pandas and NumPy for data analysis and manipulation tasks.
Developed AWS Lambda functions using Java, or other supported languages to implement various microservices and application components.
Troubleshooting network and system issues using Unix/Linux tools.
Used Docker containers to deploy and manage the microservices and implemented communication between the services using REST APIs.
Setup and build AWS infrastructure various resources VPC, ELB, EC2, S3, IAM, EBS, Security Group, Auto Scaling and RDS in Terraform
Managed host Kubernetes environment, which enables rapid deployment and management of containerized apps without prior knowledge of container orchestration.
Utilized AWS Lambda platform to upload data into AWS S3 bucket and to trigger other Lambda functions.
All the functionality is implemented using Spring IO / Spring Boot and Hibernate ORM. Implemented Java EE components using Spring MVC, Spring IOC, Spring transactions and Spring security modules.
Created Kafka producer API to send live-stream data into various Kafka topics.
Configuring and managing web servers (Apache, Nginx) on Unix systems.
Implement Spark Kafka streaming to pick up the data from Kafka and send to Spark pipeline.
Involved in CI/CD process using GIT, Jenkins job creation, Maven builds and publish, and Fabric implementation.
Operated JIRA very closely for bugs brought up by the QA team and handled it appropriately.

Environment: HTML 5, CSS 3, j2EE, Java 11, Bootstrap, JavaScript, Micro Services, JSON, Maven 3.0, Spring 4.x, Hibernate 4.x, Mule ESB, Restful Web Services, Rest API, jQuery, Amazon Elastic Beanstalk, S3, Jenkins, Git, Elastic search, jQuery

Responsibilities:
‚óèInvolved in most of the phases of Software Development Life Cycle including requirement, analysis, design, development, testing, release of the project and support.
‚óèHands-on experience with Java full stack with spring boot, Spring Cloud, Spring Security, Spring Data JPA, Spring AOP and Hibernate.
‚óèDesigned and developed the REST based Micro services using the Spring Boot, Spring Data with JPA and used Swagger to interact with API endpoints of the micro services.
‚óèWorked in Integration Systems Such as Apache Camel and Spring Integration, Developed the web socket for the continuous stream of data from the backend.
‚óèAdministering database servers (MySQL, PostgreSQL) on Unix systems.
‚óèImplemented features such as routing, form handling, and data binding in Angular applications.
‚óèAutomated the performance testing using Jmeter to measure the performance with 100+ active sessions.
‚óèHaving Hands on experience with unit testing of Javascript applications using Karma, Jasmine and having experience in deploying services on Docker and Kubernetes containers.
‚óèDeploy enterprise web applications using technologies such as Sencha ExtJS, Java, JavaScript, CSS3, HTML5 and Ajax.
‚óèUsed Reactjs for creating views to hook up models to the DOM and synchronize data with the server as a Responsive SPA.
‚óèCreate and configure the continuous delivery pipelines using DevOps such as Docker,maven, New Relic, JenkinsFile and Elastic Search.
‚óèBeing a Software Engineer, participated in deploying the services/applications in AWS ECS instances and Kubernetes as well by creating the pods for load balancing.

Environment: Java8, Spring Boot,Spring Cloud, Kafka,JPA and Microservices, AWS,Cloud Foundry,, Docker, Angular, Kubernetes, Restful, Maven and GIT.

Responsibilities:
‚óèWorked with development team to design solutions, implemented client-side JavaScript tracking code in JSP web application using s_code.js code library.
‚óèUsed React Fetch to make REST API calls and used Toaster to show info, warn and error notifications to the user.
‚óèDesigned and implemented applications using JSP, Spring MVC, Spring IOC, Spring Annotations, Spring Batch, Spring AOP, Hibernate, JMS, Oracle, and WebLogic server.
‚óèCreated and optimized graphic prototype websites and applications interfaces using HTML and CSS.
‚óèEnsured tagging implementation is correct by walking through the code, working with digital pulse debugger and Charles web debugging proxy. Finally validate data quality by validating reports in Adobe Analytics and Ad-hoc analysis (Discover) tool.
‚óèMentored UI/UX and development team for tagging using implementation guidelines and best practices.
‚óèAssisted QA teams for creation of different test cases for end-to-end validation of tracking code.
Designed and Developed UI using JSP by following MVC architecture.
Developed the application using Struts framework. The views are programmed using JSP pages with the struts tag library, Model is the combination of EJB‚Äôs, and Java classes and web implementation controllers are Servlets.
The Java Message Service (JMS) API used to allow application components to create, send, receive, and read messages.
Upgraded the swagger to new version while maintaining the look and functionality of the UI.

Environment: Core Java, J2EE 1.3, JSP 1.2, Structs, Spring IOC, EJB 2.0, Struts 1.1, JDBC 2.1, Oracle 8i, UML, JMS, XML, Web Logic 7.0, MVC Design Pattern, Eclipse 2.1, Log4j and JUnit.

Professional Summary:
Client: Toyota, Dallas, TX Oct 2022 ‚Äì Till Date
Sr. Java Full Stack Developer
Highmark, Pittsburgh, PA Jan 2022 to Sep 2022
Sr.Java Full Stack Developer
Stoneridge, Michigan, MI Feb 2020 to Dec 2021
Java Full Stack Developer
InterGlobe Technology Solutions, India Apr 2016 to Dec 2018
Java Developer
Finsights, India Oct 2014 to Mar 2016
Jr. Java Full Stack Developer
Contact this candidate