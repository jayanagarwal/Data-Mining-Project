Name: Anjana S
Phone: +1-913-***-****
Email: ad56ew@r.postjobfree.com
LinkedIn: www.linkedin.com/in/anjanasr1911

PROFESSIONAL SUMMARY:
Over 6.5 years of experience as a Full Stack Java Developer in designing and developing scalable software solutions with a focus on efficient and secure data handling and user experience enhancement.
Proficient in Java, Spring Boot, Hibernate, React.js, Angular, TypeScript, and Node.js, consistently employing these technologies to build robust, high-performance processing systems. Node.js has been instrumental in creating efficient server-side applications that can handle multiple requests simultaneously, making them ideal for high-traffic environments.
Skilled in implementing microservices architecture using Spring Cloud Config and Netflix Eureka to support significant increases in user traffic and enhance backend performance. This approach allows for the development of independently deployable, modular services that can be dynamically managed and scaled.
Expert in frontend and backend integration using Spring Data JPA and Spring Integration, improving the reliability and maintainability of systems. This integration ensures seamless data flow between the front and back ends, enhancing system coherence and reducing development overhead.
Implemented microfrontend architecture to enhance the modularity and scalability of frontend applications, allowing for the independent deployment and management of UI components.
Adept in full-stack development with a keen focus on developing intuitive user interfaces and employing state management tools like Redux. Added expertise in UI/UX design principles to create aesthetically pleasing and user-centered designs, enhancing user engagement and satisfaction.
Extensive experience with MySQL, MongoDB, PostgreSQL, and Oracle for designing relational and document-based storage solutions, optimizing data handling for high-performance needs. This diverse database proficiency enables the adaptation of data storage strategies to best fit the application requirements.
Implemented cloud solutions and managed deployments on AWS, utilizing services such as EC2, S3, RDS, Lambda, CloudFormation, and Elastic Beanstalk to improve scalability and system reliability.
Proficient in setting up CI/CD pipelines using Jenkins and orchestrating containerized applications with Kubernetes and Apache Kafka to ensure efficient deployment and real-time data processing. Additionally, utilized Express.js to streamline the development of server-side logic, enhancing the efficiency of data handling APIs.
Employed Agile-Scrum methodologies and tools like JIRA for enhanced project management and team collaboration. This agile approach fosters a dynamic and responsive development environment, adapting quickly to changes and delivering functional increments regularly.
Transitioned legacy systems to modern microservices architectures, enhancing system maintainability and minimizing downtime. Utilized dependency injection techniques within Spring to manage system complexity and dependencies more effectively.
Strengthened application security by integrating Spring Security, OAuth 2.0, and JWT for robust authentication and authorization practices. This robust security integration guards against unauthorized access and secures data transactions across the system.
Demonstrated strong team collaboration skills, facilitating better communication and efficient resolution of technical challenges through strategic planning and the use of version control systems like Git.
Proficient in unit test cases and test-driven development using JUnit, enhancing software reliability and compliance with initial design requirements. JUnit plays a critical role in the development lifecycle, allowing for the early detection of defects and ensuring that the software behaves as expected under various conditions.
Developed dynamic and reusable UI components using Angular components and JavaBeans, which promote consistency and modularity in the application development process. This component-based architecture supports a clean separation of concerns, simplifying both development and maintenance.

TECHNICAL SKILLS:
Languages
C, C++, Java 11/8, J2EE, JavaScript, Python, SQL
Web Technologies
jQuery, HTML, HTML5, CSS, CSS3, Bootstrap, TypeScript, AJAX, DOM, RWD, DHTML, XHTML, JSON, XML, SASS, SCSS, Microservices, Microfrontend
JavaScript Technologies
AngularJS, Angular 2/ 4/ 6/ 8/ 9/ 11/ 13/14, React.js, Node.js, Vue.js, Express.js
Java Technologies
Spring, Spring Boot, Spring Cloud, Spring MVC, Spring IOC, Spring Security, Hibernate, Servlets, JDBC, JSP, JSTL, Swing, EJB, Scala, JAXB, Struts, JDK1.8, Scala
Database/RDBMS and ORM
Oracle, MS SQL Server, MySQL, MongoDB, Redis, Cassandra, CouchDB, PL/ SQL, PostgreSQL, Graph DB Dynamo DB, Boto3, NumPy, Panda’s library, Postgres, BigQuery, Spark, NoSQL
Web Services
RESTful, SOAP, WSDL, UDDI, AWS (Amazon Web Services), Axis2, GraphQL, OAuth, Elasticsearch
Operating Systems
Windows, UNIX, LINUX, Mac OS.
Testing Frameworks
JUnit, Jasmine, Karma, Mockito, Jest, Log4j, Cucumber, Splunk, TDD, Postman, Selenium
Web Servers
Apache Tomcat, Glassfish, WebSphere, WebLogic, JBoss, Nginx, Jetty, RBAC
Tools and Packages
GIT, IntelliJ IDE, Eclipse IDE, GitHub, Maven, Gradle, ANT, Jenkins, JIRA, Swagger, Grafana, Bitbucket, Docker, Kubernetes, Apache Camel, Terraform, Figma, Tableau
Cloud
AWS (S3, ECS, EC2, Lambda, RDS, Cloud watch) GCP, Azure, OpenShift
Messaging
JMS MQ, IBM MQ, IBM MQ 8.0, Rabbit MQ, Apache Kafka, Amazon SQS
Version Control Systems
Git, SVN, CVS
Integration & Middleware Technologies
MuleSoft Anypoint Platform, Apache Ignite for In-Memory Computing and Data Grid
CMS
WordPress, AEM, Drupal

CERTIFICATION:
AWS Certified Cloud Practitioner

PROFESSIONAL EXPERIENCE:
Client: Bank of Texas, Dallas, TX December 2022 – till date
Role: Sr. Full Stack Java Developer
Banking/Financial Domain
Responsibilities:
Design and develop high-performance financial processing systems using Java, Spring Boot, and Hibernate, ensuring robustness and efficiency in handling large volumes of transactions.
Implement microservices architecture to enhance backend performance, capable of supporting a 50% increase in user traffic by optimizing service discovery and configuration with tools like Netflix Eureka and Spring Cloud Config.
Leverage Spring Data JPA and Spring Integration to ensure seamless data management and API integration, significantly improving the reliability and maintainability of backend services.
Utilized Spring Dependency Injection to decouple configuration and dependency management, enhancing modularity and ease of integration across various components of the financial processing systems.
Implemented constructor and setter-based Dependency Injection in Spring to facilitate better testing practices and development workflows, significantly increasing the maintainability and scalability of application services.
Develop responsive and intuitive user interfaces using React.js and Angular, focusing on improving user engagement and providing a seamless user experience.
Developed and integrated microfrontends to improve modularity and scalability in the user interface, enabling the independent deployment of frontend components.
Utilize Redux for state management and apply CSS and SASS for custom styling, ensuring that applications are both functional and aesthetically pleasing.
Implement dynamic features and real-time updates in financial dashboards using Angular and TypeScript, enhancing interactivity and user satisfaction.
Develop custom Angular components to create feature-rich, modular UI elements, streamlining the user interface development process and enhancing overall application cohesiveness.
Design wireframes, prototypes, and high-fidelity mockups for financial applications using tools like Figma, Sketch, and Adobe XD, focusing on user-centric designs to enhance digital user experiences across multiple platforms.
Utilize Angular Material to implement consistent and accessible design across the financial platform, ensuring adherence to both aesthetic standards and usability best practices.
Enhance user interface performance by optimizing Angular change detection strategies and leveraging lazy loading modules, significantly improving load times and responsiveness of the application.
Develop and implement Camel routes to integrate disparate systems and applications using Apache Camel.
Utilize Java and Camel DSL to define routing logic and message transformations.
Work with various message formats (e.g., JSON, XML) and data sources (e.g., databases, queues, APIs).
Test and debug integration routes to ensure reliable message flow.
Collaborate with other developers and operations teams to design and implement integration solutions.
Design and manage relational databases using MySQL, optimizing SQL queries and schemas for high-performance financial data handling.
Implement NoSQL solutions with MongoDB, designing document-based storage for flexible data ingestion and retrieval.
Ensure data integrity and security through effective database management practices, applying transactions and encryption as needed.
Architect and deploy applications on AWS, utilizing services like EC2, S3, and RDS to enhance scalability and reliability.
Implement AWS Lambda for serverless computing, reducing infrastructure costs and improving system responsiveness.
Configure and manage cloud environments using AWS CloudFormation and Elastic Beanstalk, automating deployment and scaling operations.
Set up and maintain CI/CD pipelines using Jenkins, enhancing development and deployment efficiency, which leads to a 40% reduction in deployment times.
Orchestrate containerized applications using Kubernetes, and manage message streams with Apache Kafka, ensuring high availability and real-time data processing.
Employ Agile-Scrum methodologies, leveraging tools like JIRA for project management, enhancing team collaboration and project tracking.
Developed dashboards in Tableau and present data to track KPIs and product performance using data from various sources such as MS Excel, AWS S3, AWS RDS, AWS Redshift, JSON and XML.
Implemented a robust Test-Driven Development (TDD) framework using JUnit, enhancing code quality and reducing bug rates across financial applications.
Implement Spring Security and OAuth 2.0 to secure application access and data transfer, integrating JWT for token-based authentication.
Migrate legacy applications from monolithic architectures to microservices, using strategic planning and phased implementation to minimize downtime and maintain service continuity.
Enhance application security and performance by implementing caching strategies using Redis and JCS (Java Cache System).
Managed source code using Git, implementing a Monorepo strategy for efficient codebase management and enhanced collaboration across the development team.
Utilize Scala to develop concurrent and fault-tolerant financial processing services, taking advantage of its functional programming capabilities to enhance code simplicity and maintainability.
Implement infrastructure as code using Terraform to provision and manage cloud resources efficiently on AWS, ensuring consistent environments across development, testing, and production stages.

Environment: Java, Spring Boot, Hibernate, MySQL, MongoDB, React.js, Angular, TypeScript, Apache Kafka, Kubernetes, AWS (EC2, S3, RDS, Lambda, CloudFormation, Elastic Beanstalk), Terraform, Scala, Jenkins, JIRA, Redux, CSS, SASS, Jenkins, OAuth 2.0, JWT, Spring Security, Redis, JCS (Java Cache System), Git, Agile/Scrum.

Client: Divi's Laboratories, Hyderabad, India September 2020 – July 2022
Role: Full Stack Java Developer
HealthCare Domain
Responsibilities:
Developed robust Java and Spring Boot applications to manage patient records and medical data, ensuring compliance with health data privacy regulations.
Implemented an advanced Spring MVC framework to handle requests and manage application flow, improving the scalability and maintainability of the health management systems.
Configured and maintained Spring Security for secure authentication and authorization of medical staff, ensuring data protection and compliance with healthcare regulations.
Employed Spring Dependency Injection to efficiently manage bean lifecycles and dependencies within the healthcare applications, significantly reducing coupling between components and enhancing the overall system architecture for easy scalability and maintenance.
Designed user-friendly patient interfaces using React.js, allowing seamless access to medical records and interaction with healthcare providers.
Built dynamic data visualization tools for medical staff using Angular and D3.js, enhancing the decision-making process with real-time data insights.
Integrated JavaScript and React libraries to improve the responsiveness and interactivity of web applications, leading to a 20% increase in user satisfaction.
Managed and optimized PostgreSQL databases for efficient storage and retrieval of extensive medical records and patient data.
Designed a NoSQL solution using MongoDB to handle unstructured data such as medical notes and lab results, improving flexibility in data handling.
Implemented database transactions and backups in PostgreSQL, ensuring data integrity and availability.
Led the migration of healthcare applications to Azure, enhancing the adaptability and operational agility of the cloud infrastructure.
Leveraged Azure Functions for serverless computing, optimizing resource utilization and streamlining system operations.
Utilized Azure Resource Manager to deploy and manage healthcare application resources automatically, facilitating efficient and consistent infrastructure provisioning.
Established and maintained CI/CD pipelines using Jenkins, significantly reducing deployment times and improving release management.
Orchestrated container deployment using Docker and Kubernetes, ensuring consistent environments across development and production stages.
Led the implementation of Agile Scrum methodologies, facilitating better team collaboration and more efficient project management.
Enhanced application security by implementing JWT and OAuth 2.0 for secure token-based user authentication.
Transitioned services from monolithic to microservices architecture using strategic planning and Kafka for message streaming, improving system responsiveness and maintainability.
Implemented Redis Cache for faster data access and reduced load times, enhancing the performance of critical healthcare applications.
Integrated GraphQL to optimize data retrieval processes, enabling more efficient and tailored API queries that enhanced client-server interactions.

Environment: Java, Spring Boot, Spring MVC, Spring Security, React.js, Angular, JavaScript, PostgreSQL, MongoDB, AWS (EC2, RDS, S3, Lambda, CloudFormation), Jenkins, Docker, Kubernetes, Kafka, Redis, OAuth 2.0, JWT, Agile Scrum, JUnit.

Client: GMR InfoTech – Bangalore, India August 2018 - September 2020
Role: Java Developer
Responsibilities:
Developed and maintained scalable web applications using Java and Spring Frameworks to handle complex business logic and backend services.
Integrated Node.js for building efficient server-side applications, enhancing throughput and application responsiveness.
Employed Spring Boot to simplify the deployment and management of microservices, facilitating easier maintenance and faster development cycles.
Built interactive and responsive web interfaces using React and JavaScript, significantly improving the user experience and interface responsiveness.
Designed and implemented dynamic web applications with Angular, focusing on creating engaging and visually appealing user interfaces.
Leveraged modern JavaScript frameworks and libraries to ensure cross-browser compatibility and optimal performance of web applications.
Designed and managed MySQL databases to support high-volume web applications, ensuring efficient data storage and quick retrieval.
Implemented complex SQL queries and database schemas to handle large datasets and transactions, optimizing data processing and access speeds.
Utilized MongoDB for storing and retrieving non-relational data, enhancing flexibility and scalability of data management systems.
Deployed applications on AWS, using AWS Elastic Beanstalk and AWS RDS to enhance scalability and reliability of web solutions.
Configured and managed AWS S3 for storing large amounts of unstructured data, ensuring high availability and disaster recovery.
Automated cloud deployments using AWS Code Pipeline and AWS Code Build, streamlining the CI/CD pipeline and reducing deployment time by 35%.
Set up Kafka for handling large streams of incoming data, ensuring efficient data processing and communication between microservices.
Orchestrated containers using Kubernetes, which improved application scalability and management, leading to a 25% reduction in resource utilization.
Implemented Servlets to manage server-side logic, enabling efficient request processing and dynamic content generation for web applications
Implemented Jenkins for continuous integration and delivery, enhancing the development workflow and collaboration within the team.
Ensured application security by integrating Spring Security, JWT, and OAuth 2.0 for robust authentication and authorization mechanisms.
Utilized JUnit for test-driven development (TDD), significantly reducing bugs and improving the quality of the software throughout the development phases.

Environment: Java, Spring Frameworks, Spring Boot, Node.js, React, Angular, JavaScript, MySQL, MongoDB, Azure (App Services, SQL Database, Blob Storage, DevOps), Kafka, Kubernetes, Jenkins, Spring Security, JWT, OAuth 2.0, JUnit.

Client: Cache Technologies, Hyderabad, INDIA January 2018 - August 2018
Role: Java Developer
Responsibilities:
Developed the presentation layer using JSP, HTML, and implemented AJAX/jQuery-based rich client features, enhancing customer experience.
Created web services for module communication using XML-based SOAP and WSDL protocols, improving system interoperability.
Worked with web services components like JAX-WS, SOAP, WSDL, and UDDI to interact with external systems. Utilized SoapUI for web service testing, reducing bugs.
Established connections to RDBMS systems and configured Hibernate to connect to database servers, which streamlined database connectivity.
Wrote unit test cases using JUnit and Jasmine to ensure functionality and integration, achieving an increase in code reliability post-deployment.
Applied various Core Java concepts, such as Exception Handling and Collection APIs, to implement features and enhancements, boosting application robustness.
Developed transaction interfaces in Hibernate to maintain abstraction from the transaction implementation, enhancing code maintainability and scalability.
Implemented JDBC to establish reliable and efficient connections between the application and the database, optimizing data retrieval and update processes, which facilitated robust data handling and enhanced overall system performance.
Developed remote integration with third-party platforms using RESTful web services, expanding system capabilities and increasing external service integration efficiency.
Created web service and web service client for both consumer and producer portions, including customer details and account details, enhancing data exchange accuracy.
Worked with Eclipse Indigo IDE and deployed applications to Oracle WebLogic Application Server. Utilized Maven for build processes and SVN for version control, improving build and deployment efficiency.

Environment: JSP, HTML, AJAX, jQuery, XML, SOAP, WSDL, UDDI, JAX-WS, SoapUI, Hibernate, JDBC, JUnit, Jasmine, Core Java, RESTful Web Services, Eclipse Indigo IDE, Oracle WebLogic, Maven, SVN.

EDUCATION:
Masters in Computer Science May 2024 University of Missouri – Kansas City, US
Bachelors in Computer Science May 2018 JNTUH, Telangana, India
Contact this candidate