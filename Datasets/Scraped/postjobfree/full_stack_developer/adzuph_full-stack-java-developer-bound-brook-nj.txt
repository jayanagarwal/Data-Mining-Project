Teja Bolem Phone: +1-732-***-****
LinkedIn: tbolem25 Email: adzuph@r.postjobfree.com
SUMMARY
Sr. Full stack developer with around 8+ years of IT experience, focusing on all phases of the Software Development Lifecycle (SDLC), including analysis, design, development, documentation, implementation, and testing.
Expertise in developing various web and enterprise applications using JAVA/JEE technologies like JSP, Servlets, JDBC, EJB, JMS, RMI, and XML.
Experience in Microservices using Spring Boot and Spring Core annotations for Dependency Injection and Spring MVC for REST API in Microservice.
Designed and developed the REST-based Microservices using Spring Boot, and Spring Data with JPA.
Competence in developing web applications using JSP, Spring Boot, Spring MVC Frameworks, Hibernate, Spring Security, JBOSS, JDBC, Java Server Pages, Servlet, Web Services, JavaScript, and JavaBeans.
Designed and developed Microservices via REST API and common frameworks like caching, DB connection pooling, Java web token (JWT) management, etc.
Mastery of Spring Security Framework for User Access Management, JWT token-based authentication, and involved OAuth 2.0 configuration for authentication and authorization.
Extensive experience in designing User Interactive (UI) Webpages and visually appealing User Interfaces with the help of front-end Technologies like HTML5, CSS3, JavaScript, XML, jQuery, AJAX, and JSON.
Built Confidential tools using Angular, RXJS, and NGRX platforms. Developed components as an independent module for reusability across the application.
Expertise in ReactJS for creating interactive UI using One-way data flow, Virtual DOM, JSX, and React Native concepts.
Experience testing REST and SOAP APIs/Web services using SOAP UI and Postman tools. Gained a good understanding of XML and JSON structures.
Utilized Apache Kafka, Rabbit MQ, and Active MQ (Message Queues) for reliable and asynchronous exchange of vital information between multiple business applications.
Experience in working with EC2, Amazon Simple DB, Amazon RDS, Amazon Elastic Load Balancing, Amazon SQS, AWS identity and access management, Dynamo DB, AWS Cloud watch, Amazon EBS, and Amazon Cloud front.
Validated Azure Traffic Manager to build routing for user traffic Infrastructure Migrations: Drive Operational efforts to migrate all legacy services to a fully virtualized Infrastructure.
Oversaw setting up the CI/CD pipeline using Jenkins, Maven, Nexus, GitHub, Chef, Terraform, and AWS.
Experience creating DevOps pipelines using OpenShift and Kubernetes for the Microservices Architecture.
Formulated Unit Testing, Integration Testing, and creating test cases for web applications using Log4J, Mockito, and Jasmine for front-end testing and automation framework.
Expertise in configuring a domain, deploying applications, configuring data sources, logging, monitoring, and web subsystems in JBOSS 5 and Tomcat.
Performed web API and services testing using Postman, Swagger, SOAP UI, and SOA Test tool.
Demonstrated proficiency in utilizing IDE Tools, including Eclipse, IntelliJ, VS Code, and STS, to facilitate efficient software development.
Experience working with version control systems such as GIT and Subversion (SVN) and using source code management platforms such as GitHub, GitLab, and Bitbucket, as well as command-line apps.

Technical Skills
Methodologies
Agile, TDD, Sprint, Waterfall, and Scrum
Java/J2EE
Java 8, Java 11, Java 17, Java Servlets, JSP, EJB, JMS, JNDI, JDBC, Java Security APIs, JSF, JAX, JPA, Hibernate, Spring, Web services, Struts
Web Technologies
Angular JS, React JS, HTML5, CSS3, AJAX, Bootstrap, jQuery
XML Related
XML, JAXP, JAXB, JDOM, SAX, XSL, XSD, XSLT
Application / Web - Servers
Apache Web Server, WebLogic, Tomcat, JBoss
Frameworks
Spring IOC, Spring MVC, Spring Boot, Spring Data, Spring AOP, Spring Security, Spring Transactions
Design Patterns
MVC, Session Facade, DAO, DTO, Factory, Singleton, Strategy
Middleware
Web Services (WSDL, SOAP, and REST)
O/R Persistence
Hibernate, JPA
Operating system
Windows, Unix/Linux/Ubuntu
RDBMS
Oracle, MySQL, PostgreSQL, DB2, MS SQL
NoSQL Database
MongoDB, Cassandra, DynamoDB
Version Control
Git, Bitbucket, SVN
Build Tools
Ant, Maven, Gradle
Testing Tools
Log4J, Mockito, Jasmine, and Karma
IDE
Eclipse, IntelliJ, and Visual Studio Code
CI/CD Tools
Jenkins, GitHub, Docker
AWS
EC2, S3, VPC, ELB, EBS, ECS, EC2, DynamoDB, RDS, Aurora DB, Autoscaling, Amazon Cloud Watch, IAM, CloudTrail, CloudFormation, Route53, SNS, SES, SQS, LAMBDA
Azure
Azure Spring apps, AKS, Azure Container Apps, Azure Container Registry, Cache for Redis, Cosmos DB, Maria DB, Table Storage, and Azure Functions

Professional Experience

Full Stack Java Developer
Prudential Financial, New York Jun 2022 - Present
Responsibilities:
Engaged in various phases of the Agile Software Development Life Cycle (SDLC) such as requirements gathering, and modeling, also Utilized analysis, design, development, and testing.
Administered the bugs and developed new enhancements using JAVA/ J2EE, Spring, Hibernate, and WebLogic.
Implemented J2EE patterns, Data Access Object (DAO), Session Facade, Business Delegate, and Value Object.
Utilized Spring Annotations to simplify the business logic for creating Spring MVC, and RESTful web services.
Developed Spring 4.0 MVC-based Rest web services to interact with UI. Utilized Spring Core annotations for Dependency injection and Spring 4.0 MVC for REST APIs and Spring Boot for Micro Services.
Orchestrated and implemented test services in a Microservice Oriented Architecture and implemented the REST-based Microservices using Spring Boot, and Spring Data with JPA.
Deployed Microservice architecture with Spring Boot-based service through REST. Exposure to Spring Framework modules such as Spring AOP, Spring MVC, Spring ORM, and Spring Batch.
Designed applications using Spring Boot, Spring MVC, Spring IOC, Spring Batch, Spring Annotations, Spring AOP, Spring Transactions, and Spring JDBC.
Leveraged a complete annotation-driven approach to developing the application using Spring Boot and was involved in setting up the Spring bean profiling.
Incorporated Hibernate for data persistence. Systemized DAO and Hibernate Transactions using the Hibernate framework.
Operationalized the JSON, and XML objects with MySQL and MongoDB (NoSQL).
Implemented various beans to fetch and Read/Load the data from MongoDB using the Spring Data REST Services.
Developed Oracle SQL stored procedures and queries for the payment release process and authorization process.
Employed OAuth 2.0 authentication protocol and provided OAuth 2.0 token implementation guidelines for enterprise web Api security model.
Utilized Bootstrap CSS front-end framework for faster and easier web development with MySQL database.
Contributed to developing front-end using React JS and Redux architecture for the internal team’s productivity use.
Leveraged the React Context API to manage application-level state and data sharing between components, simplifying state management in complex React applications.
Made use of Redux-saga middleware to access the Redux application state and dispatched Redux actions.
Migrated existing applications to Azure Cloud Platform, designed and developed robust solutions by using Azure messaging, and improved security by integrating Azure Key Vault and Azure Active Directory.
Directed infrastructure automation in AWS using AWS Code Pipeline.
Deployed the application on AWS using Elastic Cloud Computing (EC2) and Elastic Container Services (ECS) instances and migrated the project into a cloud environment using AWS, and Docker container.
Utilized Gradle's built-in security scanning tools and third-party plugins to identify and address security vulnerabilities within project dependencies, enhancing application security.
Worked extensively with AWS and Azure components, emphasizing securing cloud workloads and infrastructure.
Developed and implemented an automated CI/CD pipeline utilizing Docker. Created custom OpenShift images and configured resources for stateful applications.
Configured Kubernetes as a platform for automatic deployment of containers and created multiple clusters for load balancing and running multiple services in the production environment by mounting volume to the pods.
Carried out Mockito for unit testing and maintained cleaner and stable codes to decrease code failure.
Utilized Postman to develop REST API-based automation for backend services every sprint.
Coordinated and tracked all projects for seamless releases using Project Management System JIRA, and Version Control Git.
Integrated Log4J for project management, tracking, and monitoring errors.
Built and deployed scripts using Maven, and Shell scripts on the UNIX environment.
Worked extensively on various flavors of UNIX operating systems like Linux, and Solaris.
Environment: Java 11, J2EE, Spring, Hibernate, WebLogic, DAO, Spring MVC, Restful web services, Spring core, Spring boot, Spring Data, JPA, JMS, Microservices, Spring AOP, Spring ORM, Spring Batch, Spring Transactions, Spring JDBC, Spring Bean, Rest, JSON, XML, MySQL, NoSQL, MongoDB, Oracle SQL, OAuth 2.0, HTML 5.0, CSS, JavaScript, Bootstrap, React JS, Redux, Angular, TypeScript, NPM, Azure, AWS EC2, AWS ECS, CI/CD, Docker, Kubernetes, Mockito, STS, Postman, JIRA, Git, Log4j, Maven, IntelliJ, VS Code, Unix.

Full Stack Java Developer
Abbott Laboratories, Chicago, IL Sep 2021 – May 2022
Responsibilities:
Worked in all the phases of the Software Development Life Cycle (SDLC) including Requirements Collection, Design and Analysis of the Customer Specifications, Development, Deployment, and Customization of the Application.
Developed the application under J2EE Architecture using Spring, Struts, Hibernate, Servlets, WebLogic, and JSP. Utilized Java Persistence API (JPA) and Hibernate for performing the Database Transactions.
Worked on Multi-threading, collections, Serialization, and Deserialization while processing the upstream feed and loading valid data into the application. Implemented validation using JavaScript.
Created Services to consume REST APIs and to communicate between components using Dependency Injection using Spring Boot.
Implemented RESTful Web services to retrieve data from the client side, made REST API calls from Angular, and parsed the data to the project to the client, and handled the security and Authorization using Spring Security and OAuth 2.0.
Worked with Docker to deploy Microservices in modern containers to increase Isolation.
Utilized Spring Boot's autoconfiguration features to reduce the amount of boilerplate code that needed to be written.
Administered Spring Security solution that reduced the number of security vulnerabilities.
Developed a hybrid database system that utilized PostgreSQL for its relational data and Cassandra for its NoSQL data.
Exploited Cassandra and PostgreSQL databases for different microservices to store data based on the requirement.
Developed the application for web and mobile using HTML, CSS3, jQuery, Ajax, Angular, TypeScript, and Bootstrap.
Executed Angular framework to create a single-page application (SPA) that can bind data to specific views and synchronize data with the server.
Emphasized Angular CLI and TypeScript in Angular to create Controllers and Angular components for Web Pages.
Executed NPM for installing required node modules and other published Angular NPM modules.
Participated in implementing the complete Application in the in-build MVC Architecture with Angular.
Designed a Kafka messaging system that met the needs of the application, including scalability, reliability, and performance.
Orchestrated the deployment and management of multi-cluster Kafka environments across geographically distributed data centers.
Leveraged WebSphere's load balancing and high availability capabilities to create a resilient and fault-tolerant application architecture, ensuring consistent user experience and minimal downtime.
Worked with IAM to create new accounts, roles, and groups and maintained user accounts including RDS, Route 53, and SNS services in AWS.
Utilized AWS Beanstalk for deploying and scaling web applications and services developed with Java, and end-to-end deployment ownership for projects on AWS.
Completed converting the traditional applications to Docker and automating the build and deploy process for faster deployment and reduced the deployment time by 80%.
Utilized IBS and HORIZON core systems to facilitate end-to-end money transfer operations, including transaction initiation, processing, and reconciliation.
Utilized Kubernetes to orchestrate the deployment, scaling, and management of Docker Containers.
Written Test cases using JUnit to validate the application flows in different scenarios in the standalone application.
Configured JUnit coverage report and Integration Test cases as part of the build in GitLab Runner.
Created a JIRA workflow and applied the condition, validators, and post-function in the transition to representing the business requirement process.
Utilized Splunk and Log4J to capture the log that includes runtime exceptions, monitored error logs, and fixed the problems.
Exercised different test automation tools written in Java and Unix shell scripts.
Environment: Java 11, J2EE, Spring, Struts, Hibernate, Servlets, WebLogic, JSP, Rest, Spring DI, Spring Boot, Angular, Spring Security, OAuth 2.0, Docker, Microservices, Cassandra, PostgreSQL, HTML, CSS, jQuery, AJAX, TypeScript, Bootstrap, SPA, MVC, Kafka, IAM, RDS, Route 53, SNS, AWS, AWS Beanstalk, Maven, Kubernetes, Junit, GitLab, Git, JIRA, SplunkLog4j, STS, Postman, IntelliJ, VS Code, Unix.

Senior Java Developer
Radial Inc, Pennsylvania Jan 2019 – July 2021
Responsibilities:
Involved in Developing Web Applications with Agile Software Development Life Cycle (SDLC) from Design to Deployment using agile methodologies.
Exposed enterprise beans as web services using JAX-WS and made it accessible to other applications.
Designed and implemented a scalable and reliable web application using Dependency Injection, Inversion of Control, and Aspect-Oriented Programming (AOP) using the Spring Framework.
Implemented exception handling in Spring Boot for REST API, by making use of Exception Handler and Controller Advice annotations.
Developed scalable and modular Microservices architecture, enabling seamless integration and independently deployable components, resulting in improved system flexibility, performance, and streamlined development processes.
Composed Microservices to communicate using synchronous protocols HTTP and REST for implementing Service-Oriented Architecture (SOA).
Utilized Spring AOP module to implement logging in the application for application status and deployed Spring Security for session fixation, and cross-site request forgery.
Extensively utilized Hibernate Criteria API in the data access layer to access and update customer information in the database.
Made the most of the SQL server to access data in the database at different levels, responsible for implementing SQL queries and managing JDBC interactions with data sources.
Leveraged Amazon DynamoDB, a NoSQL database, to efficiently store and manage data for reporting applications.
Implemented Authentication using JWT to generate tokens and verify tokens in the Backend using Rest API.
Optimized and redesigned non-responsive pages to responsive pages using CSS media queries.
Participated in Sprint Planning sessions where I was involved in planning and estimations for the User stories along with QA and Product Owner.
Actively participated in enhancing XML over HTTP communication with Legacy Systems hosted on Mainframe, playing a key role in designing the XML Schema for seamless inter-system communication.
Developed a dashboard using Bootstrap and Angular to view required information during times of emergency.
Deployed and performed end-to-end performance and resiliency testing for RabbitMQ.
Worked on Cloud automation using AWS Cloud Formation templates.
Utilized AWS ECS to run microservices applications with native integration to AWS services and enabled CI/CD pipelines for automation.
Established unit tests and UI tests using JUnit, and Mockito respectively.
Executed and created the automated script using the Rest Assured framework and for manual testing Postman.
Utilized IntelliJ and Spring Tool Suite (STS) as IDE tools to develop the application.
Shaped custom controllers for handling requests using the Spring MVC controllers.
Handled Maven automated build scripts to compile and package the application and implanted Log4j.
Published shell scripts utilizing native Unix/Linux tools to monitor WebLogic servers / operating systems performance metrics.
Evaluated different browser sub-systems for rendering, HTML, JavaScript, and CSS parsing, layout, garbage collection, and memory model while fixing various cross-browser compatibilities.
Environment: Java 8, JAX-WS, Spring DI, Spring IOC, Spring AOP, Rest, Spring Boot, Spring MVC, Microservices, HTTP, Rest, SOA, Spring Security, Hibernate, SQL, SQL Server, JDBC, Amazon DynamoDB, NoSQL, JWT, XML, HTML, CSS, JavaScript, Bootstrap, Angular, RabbitMQ, AWS, AWS ECS, CI/CD, JUnit, Mockito, Postman, IntelliJ, STS, VS Code, Maven, Log4j, WebLogic, Unix.

Java/J2EE Developer
FinInfocom Pvt Ltd - India Nov 2017 – Dec 2018
Responsibilities:
Performed the role of a Scrum master after the transition from Waterfall to Agile testing methodology during the Hypercare and Maintenance period of the project.
Implemented different Design patterns like singleton, factory, and J2EE design patterns like business delegate, and DAO design patterns.
Leveraged resource-based URL design, HTTP methods, and status codes to ensure a scalable and maintainable API architecture using RESTful API.
Transformed the monolithic application into independent Microservices using Spring Boot and Node.js, driving rapid development and deployment cycles.
Conducted in-depth analysis and performance testing to identify suitable microservices boundaries, resulting in a modular and scalable system design.
Leveraged Spring Web for RESTful APIs, Spring Security for role-based access control, and Spring Data JPA for efficient database operations.
Polished complex queries and indexes, resulting in significant improvements in application responsiveness and data retrieval speed using MySQL.
Administered advanced Oracle features like partitioning and materialized views to optimize performance and support large-scale data processing.
Executed Bootstrap's built-in support for cross-browser compatibility, complemented by manual prefixing, to deliver a consistent front-end experience across a wide range of browsers and versions.
Utilized JavaScript and AJAX calls to load data asynchronously, enhancing page loading speed and reducing server load. Employed AJAX for form validation and submission, providing users with instant feedback and intuitive browsing experience.
Employed CSS Flexbox and Grid layouts to handle complex frontend designs with ease.
Enforced end-to-end Continuous Integration and Continuous Deployment (CI/CD) pipelines with AWS Code Pipeline and AWS CodeBuild.
Demonstrated proficiency in AWS disaster recovery strategies, leveraging AWS Backup and AWS Disaster Recovery services to safeguard critical data and achieve high availability.
Carried out all the components following Test-Driven Development methodology using JUnit.
Utilized Tomcat's built-in support for Java Server Pages (JSP) and Servlets to develop dynamic web applications.
Documented Spring RESTful APIs with Swagger to help customers better understand APIs.
Employed Eclipse's support for Java Enterprise Edition (EE) development to create scalable and enterprise-grade applications.
Perfected Git's merge and rebase operations, resolving conflicts, and maintaining a clean commit history. Utilized Bitbucket pipelines to automate the build, test, and deployment processes, ensuring consistent and reliable software releases.
Implemented Spring MVC's exception-handling mechanisms to provide clear and informative error messages to users, facilitating troubleshooting and support.
Ensured data security and access control by implementing Spring Security for authentication and authorization mechanisms.
Utilized Spring WebFlow to manage complex workflows and stateful interactions, delivering streamlined user experiences for intricate processes.
Integrated Log4j with various Java frameworks and libraries to capture and log relevant events, providing valuable insights into system behavior and identifying potential issues.
Developed custom Log4j appenders and log formatters to tailor log output for specific use cases, meeting unique business requirements and improving log readability.
Expertly managed and administered Unix-based systems, overseeing a diverse array of applications and services.
Explored backup and disaster recovery strategies, utilizing Unix tools like rsync and tar to safeguard data and minimize downtime in case of system failures.
Environment: Java 8, J2EE, Design Patterns, HTTP, Spring MVC, Spring Security, JSP, Servlets, Restful services, Rest, Spring Security, Spring Data, JPA, MySQL, Oracle, HTML, CSS, JavaScript, AJAX, Bootstrap, CI/CD, AWS, AWS CodePipeline, AWS CodeBuild, AWS Backup, AWS Disaster Recovery, Tomcat, Git, Bitbucket, Spring WebFlow, Log4j, Eclipse, VS Code, Unix.

Jr. Java Developer
Bhavna Software India Pvt Ltd - India Mar 2016 – Oct 2017
Responsibilities:
Supported with Waterfall methodology of Software Development Life Cycle (SDLC) for requirement gathering, modeling, analysis, architecture design, and development.
Developed dynamic web applications using JSP, JavaScript, jQuery, and HTML, enhancing user interactivity and delivering seamless user experiences.
Implemented API gateway patterns like Gateway Aggregation and Gateway Offloading to optimize and simplify the client-side interaction with Microservices.
Demonstrated proficiency in Microservices monitoring and logging using tools like Splunk, ensuring real-time visibility, and troubleshooting of issues.
Polished Oracle Enterprise Manager (OEM) to monitor and manage Oracle databases, streamlining database administration tasks and ensuring optimal performance.
Conducted Oracle database capacity planning and resource management, anticipating future growth and optimizing hardware and storage requirements.
Utilized Mockito's verification capabilities to ensure proper interaction between objects, validating method invocations and parameter values for accurate unit testing outcomes.
Successfully conducted Test-Driven Development (TDD) practices, writing unit tests before implementing actual code, resulting in code that adheres to specifications and passes all test cases.
Actively participated in code reviews and collaborated with senior developers to enhance coding standards and best practices in Spring MVC projects.
Collaborated with development teams to define test scenarios and acceptance criteria upfront, aligning requirements with business needs and enhancing development efficiency.
Collaborated with cross-functional teams to achieve seamless application deployment and support, delivering efficient and reliable Linux-based solutions.

Environment: Java 8, API Gateway, Oracle, Oracle Enterprise Manager, HTML, CSS, JavaScript, jQuery, JSP, Splunk, Spring MVC, Mockito, IntelliJ, VS Code, Unix.

Jr. Java Developer
Winfoware Technologies Ltd - India Aug 2015 – Feb 2016
Responsibilities:
Implemented data validation and error handling strategies, ensuring data integrity, and improving the user experience by providing informative error messages.
Integrated front-end designs with Java back-end using Java Server Faces (JSF) for improved user experience.
Assisted in setting up MongoDB monitoring and alerting tools to proactively identify and resolve database issues.
Created custom CSS animations and transitions to enhance visual appeal and engage users with subtle, polished effects.
Utilized CSS preprocessors SASS to modularize stylesheets, improve code maintainability, and enable easy color/theme customization.
Implemented AJAX-based pagination and infinite scrolling to manage large datasets efficiently and provide a seamless browsing experience.
Utilized Bootstrap's built-in form components and grid system to create intuitive and visually appealing forms and layouts.
Reinforced JavaScript-based data-driven dashboards and reporting tools, allowing users to visualize and analyze complex data sets.
Operated JavaScript bundling and caching techniques to optimize JavaScript delivery and reduce page load times.
Environment: Java 8, JSF, MongoDB, HTML, CSS, JavaScript, Bootstrap, IntelliJ.
Contact this candidate