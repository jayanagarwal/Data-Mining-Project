SAINATH REDDY
Full Stack Developer

ad0m18@r.postjobfree.com 469-***-****

PROFESSIONAL SUMMARY
Java/J2EE Programmer with over 10+ years of experience in developing scalable high performance web applications on Backend and Front-end aspects of Java Programming with Java 7/8/11.
Strong expertise in Java, J2EE, JSP, Java Beans, HTML, DHTML, CSS, SQL, PL/SQL, Spring, Hibernate, SOAP, RESTful Web Services, and JavaScript.
Experienced in all stages of the Software Development Life Cycle (SDLC), from business requirements analysis to system development and implementation.
Good exposure to Bootstrap for layout and Used CSS3 Media Queries and Bootstrap UI for Responsive Design.
Good understanding and experience in Functional and Reactive Programming. Successfully redesigned and re-architected applications using Java 11, Spring Boot, Spring Reactive Stack (Web Flux), PostgreSQL, and Maven.
Implemented design patterns and focusing on scalable and deployable production systems, including monitoring and instrumentation platform.
Good knowledge in using GUI graphic user interface widgets in React JS.
Created large-scale SPA (Single Page) web applications using mobile-first approach in React JS.
Expertise in building REST API’s using Java Spring Boot and used angular for UI.
Used NodeJS for server-side web applications for java script codes to build real-time web API’s.
Developed workflow applications using FileNet workflow services, and knowledge of JBPM and Drools.
Implemented messaging systems using JMS API, employing both point-to-point and publish-subscribe methodologies.
Proficient in using IDEs such as JBuilder, WSAD, and Eclipse.
Experienced in installing, developing, and deploying application servers such as WebLogic and WebSphere Application Server. Skilled in creating ANT scripts to control the software build process.
Involved in designing and developing applications for high-profile customers, delivering timely and high-quality solutions, receiving recognition and appreciation.
Implemented to reprocess the failure messages in Kafka using offset id.
Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.
Developed Web and Mobile Applications using Angular, React, Ext JS, Dojo, and JavaScript libraries.
Experience in Microservices development using Spring Boot and deployment in AWS.
Expertise in working with JAVA8 features like Functional Interfaces, Lambda functions, Stream API, Time API, Transaction Management, Exception Handling, Collection API.
Speeding up Existing Applications with a Cache services using Redis Cache.
Implemented a caching layer using Redis to enhance application performance, reducing database queries and improving response times for critical operations.
Hands-on experience in implementing and designing Enterprise applications with Java/Java EE design patterns, best practices, coding practices, and coding standards, including IOC (Inversion of Control), AOP (Aspect-Oriented Programming), MVC, Business Delegate, Service Locator, Session Façade, DTO, DAO, Front Controller, Factory, and Singleton.
Facilitated Root Cause Analysis (RCA) on incidents, identified and investigated problems on known errors.
Experienced in pre/post-production L3 support and the identification/resolution of production issues.
Proficient in troubleshooting complex customer issues and providing technical support.
Expertise in Agile development of J2EE-based solutions using Agile, Rational Unified Process, and Scrum development methodologies. Developed software, performed unit testing, created documentation and project planning using JIRA.
Designed, developed, and supported scalable and highly parallelized applications and services on a Solaris.
Excellent Client interaction skills and proven experience in working independently as well as in a team. Quick learner, great technical abilities.
Proficient in working with Amazon DynamoDB, for building fast and scalable applications.
Experienced in deploying Lambda functions and integrating them with other AWS services S3, DynamoDB, API Gateway.
Expertise in using CSS3, HTML5, React, TypeScript, ES6, JavaScript, JSON and jQuery to create UI web pages.
Changing the AWS infrastructure Elastic Beanstalk to Docker with Kubernetes.
Good knowledge on Semaphore and Deadlocks and various database implementations.
Good knowledge of Working on cloud Amazon Web Services (Amazon EC2, Amazon S3, Amazon simple DB, Amazon Elastic Load Balancing, Amazon SQS, Amazon EBS and Amazon cloud front).
Utilized AWS Beanstalk for deploying and scaling web applications and services developed with Java.
Experienced using orchestration tools like AppDynamics and Kubernetes.

EDUCATION
Bachelors in computer science from JNTUH, INDIA.

TECHNICAL SKILLS

Languages
Java (J2SE1.8/1.6/1.5, J2EE 6/5, 11,17), SQL, CoreJava, PL/SQL, Typescript, PostgreSQL
Technologies
JSP2.1/2.0/1.2, Servlets2.x, JavaBeans, JDBC, Struts2.x/1.x, RMI, EJB3.0/2.1, Hibernate3.x/2.x, Spring 3.0, Apache Camel, Spring 4, SOA, JMS1.1, SAX and DOM Parsers, AJAX, JAXB2.1/2.0, JAXP1.x, LDAP, Sybase Power Designer, RESTful and SOAP web services

Web Technologies
HTML/DHTML, XHTML1.1, JavaScript1.x, XML1.0, XSL, XSLT, CSS, Bootstrap, Angular-JS
Web/Application Servers
Tomcat 7.x/6.x/5.x, Apache Tomcat, WebLogic10.3/9.2/8.1/7.0, IBM WebSphere 8.x/7.x/6. x
Design Patterns
MVC, Front Controller, Session Façade, Singleton, Business Delegate and DAO patterns
Data Base
Oracle 11g/10g/9i/8i, MS SQL Server 2005/2000, MySQL5.1/4.1, DB2 9.1/8.1/7.2, Mongo DB, Redis
Platforms
Windows, UNIX, LINUX, Ubuntu
Methodologies
Agile Methodology, RUP, Extreme Programming
Build Tools
Rational Rose, CVS, PVCS, Git, SVN, VSS, Clear Case, JIRA, Jenkins, JUnit, TestNG, Selenium, Mockito, ANT, Maven, Gradle, EC2, VPC

WORK EXPERIENCE

Client: Fidelity Investments, NJ Role: Sr Full Stack Developer Oct 2021 – Present
Responsibilities:
Involved in Software Development Life Cycle for gathering requirements, Analyzing, Designing, Developing, and Testing applications using Agile methodology.
Experience in microservices development using spring boot and deployment in pivotal cloud foundry.
Implemented Java 17 features like Lambda expressions, Streams, filters, pipelines, Optional Interfaces, etc.
Used Spring Kafka API calls to process the messages smoothly on Kafka Cluster setup.
Worked with REST tools like Swagger, Postman, and SOAP UI for testing HTTP requests and responses.
Implemented Log4j for logging purposes in development, testing, and production environments, including configuring email notifications.
Used java 17 lambda expressions along with streams like Parallel Streams for performing chain operations such as filter, map, collect on a collection.
Used Core Java 11 concepts like Collection Framework, Multi-threading, Concurrent Object-Oriented programming, Thread pools and Externalization.
Involved in Core Java coding by using Java APIs such as Multithreading, File Handling I/O, Collection frameworks, and Exception handling.
Developed batch processing using Spring Batch in the persistence layer and improved performance of batch processing using Multithreading for control of asynchronous tasks in parallel threads.
Implemented Spring Security with OAuth 2.0 for the Authentication, Authorization and accessing Resources using Access tokens that involves Authorization server and Resource.
Utilized Spring Batch for scheduling and maintaining batch jobs, deploying applications in various environments (DEV, QA, and Production).
Implemented the Router Module of Angular 12 to transform the entire project into a Single Page Application and incorporated routers based on specific requirements.
Developed responsive web application pages using Angular Material services, controllers, and directives for the front-end UI. Consumed RESTful web service APIs.
Implemented JSON web tokens mechanism for authentication and authorization security configurations using Node.js.
Built Restful web services using Node JS and Express JS and used a full complement of Express.
Developed dynamic web pages using HTML5, CSS3, Bootstrap, Less, CSS3(SASS) and AJAX.
Possess a strong understanding of the Spring Framework and experience in developing cloud-based software.
Developed and exposed applications as RESTful web services created HTTP POST and GET methods based on requirements and handled errors using appropriate HTTP status codes.
Knowledge of RabbitMQ's distributed architecture and its components such as exchanges, queues, bindings, and virtual hosts.
Designed and implemented an AWS S3-based storage solution to store and manage application data, media files, and backups.
Designed and implemented an RDS-based database solution to store and manage application data, utilizing a relational database engine such as MySQL, PostgreSQL, or Oracle.
Designed and implemented an authentication and authorization system for a Spring Boot application using Spring Security in STS.
Designed and developed modular and maintainable CSS code using SASS, LESS preprocessor, improving code organization and readability.
Modified and integrated the stored procedures in PL/SQL to work in sync with the SOA composites.
Designed and developed JAX-RS resource classes, representing web service endpoints and operations, improving code organization and maintainability.
Scalable data design for MongoDB and Redis, Caching in MongoDB with Redis Cache Using Spring Boot.
Used Mockito to mock and stub out dependencies, such as external APIs, databases, and services.
Created a microservices-based e-commerce application using Spring Cloud in IntelliJ IDEA, which involved implementing API gateways, service discovery using Eureka, and load balancing using Ribbon.
Utilized Bitbucket branching and merging strategies to maintain code quality and avoid conflicts.
Utilized GitLab branching and merging strategies to maintain code quality and avoid conflicts.
Used AppDynamics for application performance monitoring.
Used Kubernetes as an orchestration tool to manage the Docker container to facilitate the management and deployment of the containers in distributed architecture.
Wrote Terraform scripts to deploy apps to Kubernetes engine.
Responsible for (CI/CD) Continuous Integration and Continuous Delivery process implementation using Jenkins.
Participated in planning, implementing, and expanding customer's Confidential Web Services (AWS) foundational footprint.
Collaborated closely with the Kafka Admin team to set up Kafka cluster setups in QA and Production environments.
Created, configured, and monitored Shards sets, analyzed data for sharing, chose shard keys for even data distribution, and conducted architecture and capacity planning for MongoDB clusters.
Involved in AWS SQS to interact with queue and give roles to it and involved in writing Custom policies.
Participated in troubleshooting issues on AWS, Netflix Eureka, and Cloud environments.
Configured and registered REST services with Netflix Eureka for service discovery and handled fault tolerance using Hystrix.
Deployed Spring Boot based Microservices Docker container using Amazon EC2 container services and using AWS admin console.
Developed application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema.
Worked with Microservice architecture using Spring Boot to modularize code and implemented Rest API’s using Spring Rest and integrated Swagger API for documentation.
Collaborated with agile team members, interacted with onshore Technical Lead and offshore Product Owners to assess, and refine backlog requirements and success criteria during implementation.
Performed end-to-end testing of Angular 11 using the Protractor framework and implemented integration testing methods. Behavioral-driven development was implemented using Selenium and Cucumber, respectively.

Environment: Java, J2EE, Oracle 11g, Web Services, AWS, Agile, REST, XML, Micro services, Spring Boot, Mongo DB, SOA, Spring Framework 4.0, Hibernate, Angular AJAX, WebSphere, Neo4j, JavaScript, AngularJS, NodeJS, Bootstrap, jQuery, JBOSS, JUnit, Grunt, GitHub, SQL, JMS, HTML5, JSP, CVS, CSS3, MVC, Redis, Maven and SVN.

Client: Bayer, TX Role: Java Full Stack Developer Nov 2019 – Sep 2021
Responsibilities:
Designed and developed the REST-based Microservices using the Spring Boot, Spring Data with JPA (Java Persistence API).
Collaborated closely with front-end developers to design and optimize GraphQL queries for specific application requirements.
Implemented Microservices architecture with Netflix, Spring Eureka, Spring Ribbon using Spring Boot to provide client-side load balancing in calls to other Microservices.
Implemented security best practices in web application development, including secure communication, authentication, and authorization mechanisms for microservices.
Support and Enhancement to the existing implementation of correspondence components which are developed using JPA and Web Services /JMS Technologies.
Worked extensively on developing controllers, Interfaces, and implementation classes using Spring MVC framework & used Microservice architecture with Spring Boot-based service through REST.
Responsible for consuming the REST services, getting JSON responses, and parsing them using to get the required information.
Hands-on experience working with NodeJS platform and using NPM for library management and BOWER for dependency
management.
Worked in using React native components, Forms, Event, Keys, Navigation and Redux concepts.
Used React Router for routing the redux app to connect redux and react to support routes.
Used ReactJS for templating for faster compilation and developing reusable components.
Developed a web-based application using Spring Boot and React that was deployed to a GitHub repository.
Designed and implemented an Azure-based infrastructure to deploy and run a scalable and fault-tolerant web application.
Configured Azure Virtual Networks to establish a secure and isolated network environment for the application, ensuring data privacy and network security.
Utilized Azure Devops App Service to deploy and run the application, leveraging the platform's scalability, security, and availability features.
Collaborated closely with cross-functional teams, including developers and product managers, to identify and document test cases and acceptance criteria.
Utilized Java 8 or any programming language you used to write efficient and maintainable automated test scripts, enhancing testing efficiency and accuracy.
Contributed to the continuous integration process by integrating Selenium tests into Jenkins pipelines, leading to early bug detection and faster feedback loops.
Experience with containerization technologies, including Docker, Kubernetes, or Rancher. Well-versed with OpenStack base cloud infrastructure
Utilized CloudWatch Logs to store and analyze log data generated by the application and the underlying infrastructure.
Utilized API Gateway Custom Domains to provide a custom domain name and SSL/TLS certificate for the API, ensuring secure and reliable communication.
Designed and executed real-time data streaming and pub/sub messaging using Redis, facilitating efficient communication and synchronization among microservices.
Designed and implemented an IAM-based access control policy for a web application to manage user access and permissions.
Proficient in Test-Driven Development (TDD) practices, writing unit tests before coding to ensure code quality and
functionality.
Define, document, and implement current and needed CMMI level 2 and 3 plans/processes/procedures: Project Planning, Risk Management, Requirements Management.
Core Java with Concurrent API is used extensively for parallel processing and chunk processing.
Utilized CXF Binding and Data Formats to transform between XML, JSON, and other data formats, improving web service data interchange and interoperability.
Developed and optimized services using NodeJS and ES6 as interfaces to Cassandra NoSQL database.
Developed unit tests using Mockito to ensure the quality and reliability of code.
Developed a RESTful web application using Spring Boot in IntelliJ IDEA that allowed users to manage and track their personal expenses.
Implemented a Bitbucket-based version control system for a team of developers working on a web-based application.
Managed code repositories and collaborated with team members using GitLab.
Developing, enhancing, and maintaining a Spring Boot-based Microservices application using Docker containers and Kubernetes with Azure Container Service.
Involved in the development of REST Web Services using Annotations to extract client-related data from databases. Built Restful API web services using MongoDB to store and present assessments.
Used JSON parser to extract data from the Endpoints using REST clients to display data to the front end.
Used Hibernate Query Language (HQL) for accessing data from the database and created Hibernate POJO Objects and mapped using Hibernate Annotations.
Written SQL queries & PL SQL- stored procedures, functions, triggers, cursors, sequences, and indexes that are going to be invoked by batch processes.
Integrated Spring Boot with Docker containers, creating containerized deployments for improved portability and scalability.
Interacted and worked with the development team to analyze the defects, reported them in Jira, and tracked them for closure.
Following Coding guidelines & maintain quality of code by checking with SonarQube/Sonar Lint
Used POSTMAN to test API end clients using REST Web Services.

Environment: JDK 1.8, Spring Boot, Spring MVC, ReactJS, Spring AOP, Hibernate 4.0, JAX-RS Webservices, JAX-WS Webservices, Micro services, Apache CXF, AJAX, UML, MS Visio, JSTL, Oracle 11g, Mongo DB, Docker, JBoss, Selenium, GIT, Bamboo CI, Cucumber, Chef, MongoDB, JMeter, Redis, Apache Tomcat, Karma, Azure Devops, NoSQL, Node.js, Jasmine.

Client: PNC BANK, Pennsylvania. Role: Java Full Stack Developer April 2018 – Oct 2019
Responsibilities:
Utilized Scrum Agile methodology with regular 3-week sprint cycles, working on planned and groomed user stories.
Participated in daily scrum meetings, sprint cycle reviews, retrospectives, and planning meetings with the presence of the Product Owner and Scrum Master.
Have knowledge on partition of Kafka messages and setting up the replication factors in Kafka Cluster.
Built a pure React-Redux application from scratch, focusing on stable and reusable stateless and stateful React components.
Implemented a private cloud environment, leveraging AWS and Puppet for rapid provisioning of internal computer systems for various clients.
Developed user interface by using the React JS, Flux for SPA development, also used React forms for data driven form components and React router to define module level routing.
Worked on React Virtual DOM and React views, rendering using components which contains custom HTML tags. Utilized Web Sockets with React to maintain consistent and real-time state across users.
Possessed in-depth knowledge of AWS cloud services, including compute, network, storage, and identity and access management.
Responsible for implementing modules such as Initialization, Authorization, Controller request flows, and Save Transaction to Database modules.
Developed Hibernate mapping files using different strategies such as table per class hierarchy and utilized Hibernate Persistence Strategy for database interaction.
Attended business meeting to understand the SAML requirements and created the connections.
Validated forms using Angular 7/6 and regular expressions, providing both client-side and server-side validation.
Developed cross-browser/platform HTML5, CSS, and JavaScript code to match design specifications for complex page layouts while adhering to coding standards.
Created Angular 7/6 directives, controllers, modules, and pipes using TypeScript.
Implemented the Spring MVC framework in the presentation tier for control flow, business-level validations, and communication with the business layer.
Developed code using design patterns such as DAO, Factory Pattern, Singleton and Value Objects, Decorator, State, and Strategy.
Implemented Docker container service and established CI/CD pipelines using Jenkins, Bamboo, for continuous integration and deployment in both cloud and on-premises environments.
Created views, sequences, and modified existing PL/SQL stored procedures in the Oracle database.
Sent requests and received responses to/from microservices through REST/HTTP.
Developed and directed software systems testing procedures and development strategies.
Worked with Snowflake cloud data warehouse and AWS S3 bucket to integrate data from multiple source systems, including loading nested JSON formatted data into Snowflake tables.

Environment: Java 8, Flex, EJB, spring, JSP1.2, Servlets2.1, Jasper reports, JMS, IBM MQ, XML, NodeJS, SOAP, Apache Tomcat, ClearCase, Log4J, ANT, Hive, JUnit, Eclipse, UDDI, WSDL, Angular JS, AWS, JDBC, JNDI, Rational Rose 98, Oracle 10g, XSLT, XML, UML, HTML.

Client: Highmark Health, Pennsylvania. Role: Java Full Stack Developer Jul 2016 – Mar 2018
Responsibilities:
Involved in design, development, and testing phases of the SDLC using Agile Methodology.
Developed user interface using JSP Tag libraries, third party libraries and Java Script to simplify the complexities of the application and developed the User Interface using HTML, CSS, and Ajax.
Developed the STP Interface subsystem using Message Driven Beans that pushes trades to the STP system and listens for any incoming trade confirmations, execution, and settlement reports.
Consumed RESTful web services using Angular2/4 JS/AJAX to fetch the server data and used JSON parsing to render the data in UI.
Developed application using Struts MVC Framework wrote Configuration XML file that contains declarations and another dependent object declaration.
Inserted Dependency Injection between components using spring’s (IOC) concept.
Used Multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class.
Used Singleton design pattern in Hibernate Utility class.
Developed various Java beans for the performance of business processes and effectively involved in Impact analysis.
Worked as a back-end developer and developed several REST endpoints to process the XHTML documents to import them in the Oracle Database or fetch them using Grails framework.
Configured and managed Apache Web Server on Linux for web-based applications using REST/SOAP, Apache, and WebSphere.
Creating and managing user accounts, system security, performance tuning, change management, documents, and procedures on Linux.
Worked on Cassandra Querying language to load bulk of data and execute queries.
Created Data Access Objects (DAO) to add, modify and deletion of records.
Created tables, triggers, stored procedures, SQL queries, joins, integrity constraints and views for multiple databases, Oracle using TOAD tool.
Implemented and enhanced java based multithreading ETL tool for distributed loading XML data into Oracle database using JPA/Hibernate.
Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase.
Implemented Log4J for Logging Errors, debugging and tracking.
Performed deployment of applications IBM WebSphere Application Server.

Environment: Tomcat, Groovy/Grails, Java1.5, JSP2.0, Servlets2.4, EJB2.0, Struts1.2, Spring 2.0.3, JDBC3.0, Design patterns, Html, XML, CSS, Log4j, Ant, SOAP, Web services, RAD6.0, IBM WebSphere server6.1, IBM DB29.0, VSS, Accurev, Junit, Maven.

Client: Home Depot, Atlanta, GA. Role: Java Developer Oct 2013 – June 2016
Responsibilities:
Worked in an Agile work environment for workflow management and content versioning.
Actively coded using core Java concepts such as collections, generics, and multi-threading.
Utilized SVN for version control.
Implemented REST-based web services.
Refactored existing legacy applications by identifying components that needed to be transformed into microservices.
Demonstrated expertise in using both inbuilt and custom Angular 2/4 JS directives and filters to add functionalities to web pages.
Experienced in Angular 2/4, Bootstrap, and CSS3 to create reusable components for responsive web design (RWD) applications.
Used PL/SQL programming to develop stored procedures and functions.
Employed Spring Security to provide security primitives for application access.
Developed consumer-based features and applications using Ruby on Rails, JavaScript, jQuery, HTML, and CSS.

Environment: Java, JSP, Servlets, Spring, Yarn, Hibernate, RESTful, JAXB, Java, JDBC, XML, IBM WebSphere (RAD), HTML, React Js, JavaScript, Linux Shell script, AngularJS, IBM MQ Series, PHP, Visual Studio, Micro Services, Oracle 11g, UNIX, Rational Tools (ClearCase, ClearQuest), AJAX, UML.

Client: Symmetric Solutions, Bangalore, India. Role: Java Developer Jan 2013 – Aug 2013
Responsibilities:
Developed the component using Java, J2EE/JEE, JSP, Struts, hibernate framework. Involved in complete SDLC – Requirement Analysis, Development, System, and Integration Testing.
Develop persistent objects using Hibernate.
Involved in designing frontends using JSPs, HTML, DHTML and CSS.
Extensively used Eclipse while writing code & used CVS for version control.
Debugging and resolving issue for web service binding and deployments with attachments.
Involved in requirements gathering, analysis, design and testing of the complete system.
Implemented the presentation layer using JSP, HTML and CSS.
Responsible for understanding the business process by communicating with business users.
Involved in developing the functionality as per use case documents for various modules of the application.
Responsible for writing ANT Scripts for building the entire web application.
Performed unit testing using JUnit.
Used SVN as source control.
Developed and deployed applications using Web Logic 7.x with JBuilder as IDE tool.
Used JDBC to connect and perform operations on database.
Designed and created various tables required for the project in MySQL database.

Environment: Java, JSP, JavaScript, DHTML, SQL, AJAX, Apache Struts1.2, JMS, Hibernate 3.0, Eclipse, WSDL, SOAP Web services.
Contact this candidate