Professional Summary:

Over *+ years of experience in analysis, design, development, and testing the applications as a Java full-stack developer in various dynamic and challenging environments of both backend and frontend.
Skilled in Core Java SE concepts like Streams API, Time API, Functional Interfaces, Multithreading, Transaction Management, Exception Handling, Lambda functions, Generics, and Collection API.
Experience in applying best-practice design patterns and strategies to enterprise applications to reduce tight coupling, maximize performance, and reduce maintenance/extensibility risks.
Expertise in open-source frameworks Spring, Hibernate, and Struts. applied best-practice design patterns for application development.
Implemented the Spring MVC, Spring IOC, Spring REST, Spring AOP, spring transaction Management, Spring Data, Spring DAO, Spring Batch, Spring Security, and Spring Boot in every step of the backend.
Experience on projects implementing RESTful services (JAX-RS, Spring Boot), SOAP (JAX-WS, Apache CXF, WSDL, Apache Axis2).
Showcased my Knowledge of XML technologies like XPath, XQuery, XSLT, XSD, SAX, DTD/Schemas, DOM, and JAXB and configured using Swagger and WADL.
Expertise in developing scalable and resilient applications using a microservices architecture, effectively breaking down monolithic structures into modular and independently deployable components.
Showcased designing RESTful APIs for seamless communication between microservices, ensuring loose coupling and flexibility in the overall architecture.
Extensive experience in containerization using Docker to package microservices and Kubernetes for orchestration, enabling easy deployment, scaling, and management of microservices.
Showcased my ability to implement API gateways, service discovery, load-balancing mechanisms, and fault-tolerance strategies enhancing the reliability and availability of microservices.
Knowledgeable event-driven architectures and message queues, implementing solutions like Kafka or RabbitMQ, IBM MQ, and Active MQ to enable sync and async communication between microservices.
Expertise in cloud-based messaging and event-driven architectures, using services like Amazon SNS/SQS, Azure Event Grid, or Google Cloud Pub/Sub to enable async communication between microservices.
Expertise in interacting with ORM frameworks like Hibernate, Spring Data, iBatis, and JPA.
Proficient in JDBC (Java Database Connectivity) for seamless integration and interaction with relational databases, ensuring efficient data access and manipulation in Java applications.
Integrated distributed caching solutions, such as Redis or Memcached, into the back-end architecture to store and retrieve frequently accessed data.
Proficient in leveraging Apache Spark for large-scale data processing and analytics tasks within Java applications, enhancing the efficiency and performance of data-driven applications.
Worked in AWS including EC2, VPC, S3, ELB, Cloud-Front, IAM, Cloud Watch logs.
Worked in Azure including VMs, VNet, Azure Storage for object storage, Azure Load Balancer for load distribution, Azure CDN for content delivery, Azure AD, and Azure Monitor.
Worked in GCP including Compute Engine for virtual machines, VPC for networking, Cloud Storage, Cloud Load Balancing, Cloud CDN, Identity and Access Management (IAM), and Stackdriver.
Experienced in Azure data storage solutions, utilizing services like Azure SQL Database, Azure SQL Data Warehouse, Azure Blob Storage, and Azure Data Lake Storage.
Well-versed in GCP services, employing Google Cloud SQL for databases, BigQuery for data warehousing, Cloud Storage.
Proficient in utilizing cloud-native databases like Amazon DynamoDB, Azure Cosmos DB, or Google Cloud Firestore to store and manage data efficiently within a microservices architecture.
Adept at deploying microservices in containerized environments using cloud container services like AWS ECS, Azure Container Instances, or Google Kubernetes Engine (GKE).
Strong understanding of serverless computing, utilizing services like AWS Lambda, Azure Functions, or Google Cloud Functions to build and deploy microservices without the need for managing infrastructure.
Accomplished both deploying and managing applications on various cloud platforms, utilizing services like AWS Elastic Beanstalk, Azure App Service, and Google App Engine.
Proficient in implementing the cloud infrastructure as code (IaC) principles, utilizing tools like AWS CloudFormation, Azure Resource Manager, and Google Cloud Deployment Manager.
Hands-on experience in application support for ETL jobs-related issues.
Implemented a comprehensive strategy for cloud-to-cloud migration, on-premisses to cloud addressing compatibility issues, and data transfer challenges.
Skilled in utilizing modern frameworks and libraries, including React and Angular, to create engaging and dynamic user interfaces.
Skilled in GUI design using HTML5, SASS, XML, jQuery, JavaScript, Polymers, AngularJS, Node JS, DHTML, and JSP, ensuring dynamic and intuitive user experiences.
Proficient in developing single-page applications (SPAs) using JavaScript libraries like ReactJS, enhancing data rendering and user interactions.
Implemented Redux for centralized state management, ensuring efficient data flow and scalability in React applications.
Implemented client-side routing using React Router for seamless navigation and single-page application development.
Configured Webpack and Babel for efficient bundling, transpiling, and optimization of React applications.
Implemented server-side rendering (SSR) using Next.js for improved performance and SEO.
Leveraged automatic code splitting and other Next.js features for an efficient React application.
Applied React Testing Library principles for thorough unit and integration testing of React components using Jest.
Implemented client-side routing using Angular Router, creating seamless navigation experiences for single-page applications (SPAs) with dynamic content loading.
Utilized RxJS and Angular services for effective state management, ensuring synchronized data flow.
Proficient in using Angular CLI for project scaffolding, code generation, and build optimization.
Conducted comprehensive unit testing of Angular components using Jasmine and Karma.
Familiarity with next-generation frameworks such as Aurelia, coupled with expertise in writing ECMAScript 6 and ECMAScript 7 to adopt modern web development practices.
Worked in both Unix/Linux and Windows-based development environments.
Proficient in Unix environments, with expertise in RedHat Linux administration, including system configuration, troubleshooting, and performance tuning.
Proficient in working with Version Control Systems (VCS) like Git and SVN to manage source code repositories, ensuring effective collaboration, and code versioning.
Adept at continuous integration and continuous deployment (CI/CD) practices, utilizing Jenkins, Travis CI, or GitLab CI to automate the testing and deployment pipeline.
Experience in implementing Test Driven Environment (TDD) and Behavior-Driven Development (BDD) Used JUnit, and Mockito, for testing and Sonar for code Quality.
Familiarity with monitoring and logging tools like Prometheus, Grafana, and ELK stack to ensure real-time visibility into application performance and troubleshoot issues proactively.
Proficient in implementing comprehensive logging solutions for Java applications, utilizing industry-standard tools such as Log4j and Logback.
Skilled utilizing SLF4j to provide a flexible and unified logging abstraction, facilitating seamless integration with various logging implementations.
Deployed and configured Splunk environments for log management, monitoring, and data analysis.

TECHNICAL SKILLS:

Programming
Java, J2EE(Servlets, JSP, EJB, JMS, JNDI, Web Services, JDBC, SOAP, Mule), C, C++
Scripting
JavaScript, Bash/Shell Scripting, Groovy, PowerShell
Frameworks
Spring (MVC, AOP, ORM, Web Service, DAO, Security, etc.), Hibernate, Bootstrap, Struts, Tiles, Apache camel, Log4j, SLF4j, Angular
IDE
Eclipse, IntelliJ, NetBeans, Visual Studio Code, atom
Web Technologies
HTML/HTML5, CSS, SSL, XML, AJAX, HTML, JavaScript, CSS, JSON, AJAX, XML, ESAPI, Angular 6/9/11, TypeScript, React JS, jQuery, Node JS, REST
Web Servers
Node JS, JBoss, Tomcat, Apache, WebLogic
AWS
Services: EC2, VPC, S3, ELB, CloudFront, IAM, Cloud Watch Logs, RDS, Redshift
Azure
Services: VMs, VNet, Azure Storage, Load Balancer, Azure CDN, Azure AD, Azure Monitor, SQL Database, SQL Data Warehouse, Azure Blob Storage, Azure Data Lake Storage
Google Cloud
Services: Compute Engine, VPC, Cloud Storage, Load Balancing, Cloud CDN, IAM, Stackdriver
Databases
Oracle, MySQL, MSSQL Server, IBM DB2, Cassandra, Mongo DB, Amazon RDS (Relational Database Service), Amazon DynamoDB, Amazon Aurora, Amazon Redshift, Azure SQL Database, Cosmos DB, Azure Database for MySQL and PostgreSQL, Azure Table Storage, Cloud SQL, Cloud Spanner, Firestore,
Web service
SOAP, REST, WADL, XML, JSON
Reporting Tools
Jasper Reports
Build Tools
Gradle, Maven, ANT
Other Tools
JIRA, Confluence, Sonar, Jenkins
Version Control
Git, GitHub, GitLab, Bitbucket, SVN
Operating Systems
Windows (XP, 7, 8/8.1, 10), Linux, Unix

EDUCATION:

Bachelor of Technology in Computer Science and Engineering (CGPA: 3.68)
Masterâ€™s degree in information technology (CGPA: 3.81)

PROFESSIONAL EXPERIENCE:

Client: Charles Schwab, Texas. May 2023 to Till Date
Java Full Stack Lead Developer

Responsibilities:
Actively participated in SCRUM team activities, contributing to Sprint Planning and Showcase meetings.
Developed RESTful APIs and services to handle financial transactions, account management, and user authentication and authorization ensuring compliance with industry standards and security protocols.
Integrated third-party financial APIs to retrieve real-time market data, enhancing the application's ability to provide up-to-date and accurate information to users.
Designed and implemented database schemas using Oracle for efficient storage and retrieval of financial transaction data, optimizing database performance for complex queries.
Collaborated with data architects to model and implement database structures that align with the specific needs of a financial client-dealing platform.
Utilized Hibernate as an ORM tool to establish mappings between Java objects and database entities, ensuring data consistency and integrity.
Implemented data caching strategies to optimize the retrieval of frequently accessed financial data, enhancing application performance.
Worked on backend performance tuning, utilizing tools such as Oracle AWR reports to identify and address any database-related performance bottlenecks.
Designed data models for data-intensive AWS Lambda applications. Performed CRUD operations on Dynamo DB.
Created AWS S3 buckets and managed policies for S3 buckets and Utilized S3 bucket and Glacier for storage and backup on AWS.
Created and maintained data catalog using AWS Glue Data Catalog to organize and manage metadata for various data sources.
Migrated existing applications into REST-based Microservices using 12-factor app methodology to provide all the CRUD capabilities using Spring Boot and Spring Cloud.
Implemented Rest Template and Feign client for intercommunication between Microservices.
Spearheaded the development of a Kafka producer application using the Apache Kafka Connect framework, facilitating the production of near real-time data.
Contributed to the development of a Kafka consumer pattern, enabling the reception of data from different topics based on offsets.
Developed microservices with Spring Eureka to retrieve API routes for the entire cluster. Using this strategy, each spring service in a cluster can be load-balanced and exposed through one Zuul API gateway.
Implementing GraphQL APIs for efficient data querying and manipulation, enhancing the performance and flexibility of my applications.
Designed and implemented asynchronous programming techniques in Node.js to optimize application performance and handle multiple concurrent requests efficiently.
Developed user interfaces for web applications using ReactJS. Integrated Bootstrap for enhanced UI design.
Implemented routing logic and client-side functionality using ReactJS. Utilized Redux architecture for state management.
Designed modular and reusable React and React Native components using Redux Architecture.
Utilized ReactJS for its code reusability, integrated Bootstrap, and implemented Redux architecture throughout the process for action connectivity.
Developed the front-end feature-rich web application using ReactJS, React Native, React DOM, Redux, React Router, and React Hooks with Responsive web design and Accessibility.
Involved in unit integration, bug fixing, and acceptance testing with test cases. Participated in code reviews and collaborated with QA to write test code and debug defects.
Used test-driven development frameworks while developing, including but not limited to Postman, Karate, JUnit, Mockito, Cucumber, Selenium, Mocha, Jest, and JMeter.
Worked on Java multi-threading programming, synchronization, Java Mail API, and Collections API.
Configured Docker container service and built a pipeline with Jenkins CI/CD tool for continuous integration and deploying applications on servers.
Deployed EC2 instances provisioning on AWS environment and implemented security groups, administered Amazon VPCs.
Extensively used Kubernetes and Docker to enable faster and more consistent deployments.

Environment:
Java, Spring Boot, Spring Security, Amazon Web Services (AWS), Aurora/PostgreSQL, REST APIs, Mongo DB, React, NEXT.Js, Node JS, HTML5, SASS, JavaScript, Hibernate, Bootstrap, AJAX, Micro Services, Log4j, Spring, Apache Kafka, Docker, Kubernetes, Oracle 12c, Mongo DB, Jenkins, JMeter, Jasmine, Protractor, JUnit, Mockito, Maven, Git.

Client: Citizens Property Insurance, Florida October 2022 to April 2023
Java Full Stack Developer

Responsibilities:
Implemented a Maven build file for the construction and deployment of the application onto the ePass Application Server, ensuring smooth integration and runtime execution.
Programmed backend logic using Java Collections, incorporating multithreading and serialization for efficient management of service requests in a multithreaded environment.
Transformed individual modules into Spring Boot microservices, focusing on improving maintainability, code cleanliness, and facilitating enhanced application testing.
Created Maven builds for the construction and deployment of Spring Boot microservices to the internal enterprise Docker registry, ensuring consistency and reliability in the deployment process.
Constructed a RESTful web service using Spring, emphasizing API development for seamless communication between different components.
Utilized the JBOSS application server for runtime integration of J2EE applications, ensuring a robust and scalable runtime environment.
Worked on AWS, implementing High Availability Practices, and deploying backup/restore infrastructure, contributing to a reliable and secure cloud environment.
Implemented Angular client-side form validation to enhance user input verification before transmitting data to the backend, ensuring data integrity.
Utilized Angular to formulate controllers for handling client-triggered events, managing states in stores, and dispatching actions through Redux, enhancing overall application functionality.
Utilized ECMAScript6 (ES6) for crafting complex applications and modules, incorporating modern JavaScript features for enhanced development.
Consumed Restful Web services with data transmission in JSON format, addressing and securing routing for efficient communication.
Analyzed changes in online transactional processing, business processes, and modifications to enhance application quality through MongoDB.
Developed Servlets and JSPs based on the MVC pattern using the Spring Framework, contributing to a structured and organized codebase.
Developed and implemented the business logic component in the middle tier using JDBC and EJB framework, including stateless session classes and Entity bean classes.
Used Swagger specification for documenting REST API, providing clear and comprehensive descriptions of RESTFUL web services.
Oversaw the management of AWS resources in the cloud and upheld Continuous Integration and Continuous Deployment (CI/CD) pipelines for a high-velocity, resilient application development.
Used various Angular 15 custom directives and develop reusable components and templates for efficient code organization.
Provided monitoring and application support for business intelligence (ETL) tools, ensuring smooth operation of critical data processes.
Used Apache Kafka in the cluster as a messaging system between APIs and Microservices, ensuring efficient communication and data flow.
Worked on Proof of concept for implementing Sleuth/Zipkin in Spring MVC application and implemented Sleuth/Zipkin in all microservices applications using Spring Boot, enhancing application traceability.
Managed Keys/Passwords securely using AWS Key Management Service (KMS) to utilize them in Amazon EMR and AWS Glue.
Implemented a dynamic error logging mechanism, storing logs in Amazon S3 and CloudWatch Logs through AWS CloudTrail.

Environment:
REST, Microservices, Spring, Docker, Kubernetes, Jenkins, Apache Kafka, Spring Boot, MySQL, Oracle 12c, My SQL, HTML, CSS3, Gitlab, Typescript, Angular, Redux, NPM, Ribbon, Feign, Spring Eureka, Zipkin, JIRA, AWS, Mocha, OAuth 2.0.

Accent Care, India. September 2019 to March 2022
Java Full Stack Developer

Responsibilities:
Engaged in Agile (Scrum) methodology, actively participating in the Design, development, System testing, and User Acceptance Testing phases of the project.
Developed the user interface utilizing Spring MVC, Jakarta Struts 2.0 Framework, JSP 2.0, and HTML within a Micro Service Oriented Architecture using Angular 10.0, Cassandra DB.
Worked proficiently with Angular CLI and Typescript in Angular 10.0, creating Controllers and Angular components for Web Pages.
Utilized Oracle SQL Developer for writing queries and procedures in SQL, ensuring efficient data manipulation and retrieval.
Designed and developed web applications using JSF, Spring Web Flow, AJAX technology, and front-end UI components such as JSF, Apache MyFaces, and Prime Faces UI components.
Optimized performance through Angular 10 Lazy Loading, ensuring efficient loading of resources for enhanced user experience.
Possessed good knowledge of databases, including Oracle 10g and MySQL 5.1, ensuring effective data storage and retrieval.
Designed the overall Microservices architecture, covering Gateway, API Service, Core Service, Discovery Server, and Monitor Server using Spring Cloud Netflix.
Orchestrated the deployment and administration of microservices-based applications on Azure infrastructure leveraging Azure Kubernetes Service (AKS) and Azure Container Instances.
Implemented various screens for the front end using Angular, leveraging predefined components from NPM (Node Package Manager) and the redux library.
Incorporated Elastic Search for caching to enhance application performance, ensuring quick and efficient data retrieval.
Implemented Node JS as a server-side proxy, observing various response times and integrating modules to meet design requirements.
Utilized Node Package Manager (NPM) to manage modules, install tools such as Grunt and Express, and employed Express JS for efficient server and route management.
Worked extensively with AJAX HTTP Service and observables for making quick and incremental updates to the application's UI.
Developed a system using Java, Tomcat application server, Spring, Hibernate, and database technologies, utilizing Eclipse IDE, and JBoss Application Server for development, testing, and deployment.
Integrated business modules using Spring Boot and Cassandra DB, ensuring efficient data management.
Worked with Cassandra Node Connector for database persistence, interacting seamlessly with Cassandra.
Integrated JMS with SPRING BOOT, embedding an instance with Active MQ for effective messaging.
Produced and consumed SOAP web services using Apache CXF and Axis2 frameworks.
Utilized Docker and container management, implementing environment provisioning solutions using Docker.
Implemented user authentication and security for Restful web services using OAUTH 2.0.
Implemented Dynatrace for application performance monitoring (APM), enabling real-time insights into system health, performance bottlenecks, and resource utilization.
Utilized Swagger Framework to implement Restful API, providing a rich UI for testing APIs.
Worked with the Openshift platform to manage Docker containers and Kubernetes Clusters, facilitating efficient container orchestration.
Configured and maintained Jenkins to implement the CI/CD process, automating the software development lifecycle.

Environment:
Angular 8,9,10.0, Node JS, HTML5, CSS3-SASS, Twitter Bootstrap, ES6 JavaScript, AJAX HTTP Service, TypeScript, Spring boot, JPA, jQuery, OAuth2.0, JBoss, Apache Kafka, Active MQ, Jenkins, Bamboo, Log4j, MY SQL, Cassandra DB, Junit4, Karma, Jasmine, Eclipse Java EE IDE.

Philips Innovation Camp, India June 2016 â€“ August 2019
Java/J2EE Developer

Responsibilities:
Worked with REST representational state transfer protocol for connection between end nodes in establishing a connection in networks for network hypermedia applications.
Develop a rich user interface with Ext.js, CSS3, and AJAX.
Extensively used React-Router techniques Axios service to retrieve data from server synchronously.
Worked in using React js native components, Forms, Event, Keys, Navigation and Redux concepts.
Worked on state, specs, props, and events to create interactive React js components.
Implemented deployment of the frontend application on Google Cloud Storage (GCS).
Configured Cross-Origin Resource Sharing (CORS) to enable seamless consumption of RESTful services from external domains, ensuring secure and efficient data exchange.
Involved in implementing the JMS (Java messaging service) for asynchronous communication with other applications.
Involved in the development of User Interface using XSLT, HTML, JavaScript, Ajax, Dojo, and Java Server Pages Standard Tag Library JSTL.
Designed and developed the front end using JSP, Struts (tiles), XML, JavaScript, and HTML.
Writing commands for data access and stored procedures in MongoDB.
Implemented REST-based microservices using Spring framework, Eureka (Service discovery mechanism), and Jersey API. Used REST Client and POSTMAN to test the services.
Used React Router for routing the redux app to connect redux and react js to support routes.
Produced and Consumed messages to and from Kafka Topics for Microservices Communication.
Worked on web applications implemented in JSP, HTML, and Java Script.
Involved in writing the ANT scripts to build and deploy the application.
Developed Web Services using SOAP for sending and receiving data from the external interface.
Developed Microservices using Spring Boot in STS as an IDE.
Leveraged Jenkins and pipelines to orchestrate the build process for all microservices, pushing Docker images to the container registry, and orchestrating deployments on Google Kubernetes Engine (GKE).
Orchestrated the creation of Pods and effectively managed them within the Kubernetes cluster, ensuring seamless scalability and efficient resource utilization.
Designed and developed front-end components using JSF Framework and Ajax.

Environment:
Java, Core Java, J2EE, Spring MVC, React, EMR, JDK 1.4, Servlet 2.3, JSP 1.2, JavaScript, HTML, JDBC 2.1, SQL, Microsoft SQL Server, UNIX, and WebLogic Application Server. Hibernate, GCP, JSP, React, HTML, CSS, Servlets, XML, XSD, XSLT, Web-Services, Microservices, JSON, Bootstrap, SOAP, JUnit, JavaScript, Node.js, IntelliJ IDEA, Tomcat, Oracle 11g, Oracle SQL developer, Jenkins, Log4J, UNIX

Endeavor IT Solution, India May 2015 to May 2016
Java Developer

Responsibilities:
Worked as a software developer for ECIL on developing a supply chain management system.
The application involved tracking invoices, raw materials, and finished products.
Gathered user requirements and specifications.
Developed and programmed the required classes in Java to support the User account module.
Used HTML, JSP, and JavaScript to design the front-end user interface.
Implemented error checking/validation on the Java Server Pages using JavaScript.
Developed Servlets to handle the requests, perform server-side validation, and generate results for users.
Used JavaScript for client-side validations.
Developed SQL queries to store and retrieve data from the database & used PL SQL.
Used Struts framework to maintain MVC and created action forms, action mappings, DAOs, application properties for Internationalization, etc.
Involved in developing business components using EJB Session Beans and persistence using EJB Entity Beans.
Involved in managing Business delegates to maintain decoupling between presentation & Business layers.
Used JMS for Asynchronous messaging.
Used spring framework with EJB 3.0 to create these services which can handle transactions in millions.
Used Eclipse IDE to develop the application.
Developing customized reports and Unit Testing using JUnit.
Used the JDBC interface to connect to the database.
Deployed and tested the web application on the WebLogic application server.

Environment:
Java, servlets, JSP, JEE, EJBs, MVC, JSF, structs, Java Scripting, XML, GIT, JDBC, PL/SQL, Eclipse, tomcat, stored procedures.

Jithendra Chilukuri
Email: ad53eb@r.postjobfree.com
Contact: +1-972-***-****
Contact this candidate