Shirish Muthyala
Sr. Full Stack Developer E-mail: ad1pz0@r.postjobfree.com
LinkedIn: linkedin.com/in/shirishmuthyala Phone: +1-470-***-**** PROFESSIONAL SUMMARY:
* ***** ** ********** ** a full stack developer, skilled in implementing complex applications.
Expertise in front-end technologies like HTML5, CSS3, Bootstrap, AJAX, jQuery, and Angular.
Redesigned websites using ReactJS for various pages, including contact and landing pages.
Building a custom CMS using NodeJS and ReactJS to migrate from WordPress.
Used ReactJS to develop UI components, including filters and font size modifiers.
Proficient in client-side validation through JavaScript and AJAX.
Intermediate experience with advanced JavaScript, including prototype-based inheritance and working with frameworks like jQuery and jQuery-UI.
Extensive integration testing experience with JUnit, Jasmine, and Karma.
Strong knowledge of Java 8 features, multithreading, collection API, exception handling, time API, and stream API.
Implemented microservices architecture using Spring Boot and Spring MVC, based on RESTful API.
Developed SOAP-based web services and automated documentation using Swagger and WSDL.
Designed and developed web services using SOAP and REST to interact with various sectors and access Amazon Web Services (AWS).
Experienced with Spring IO, Spring Boot, and frameworks like Struts, Spring MVC, and AJAX.
Proficient in Spring frameworks (CORE, AOP, DI, SECURITY) and ORM tools like Hibernate.
Developed PL/SQL scripts, triggers, stored procedures, and views using JDBC, ODBC, and WebLogic servers.
Experience with JMS ActiveMQ for creating, producing, and consuming request-response services.
Expertise in Spring JPA and usage of Hibernate as a reference.
Experience with messaging services like Apache Kafka and RabbitMQ.
Worked with SQL databases (MySQL, MS SQL Server, Oracle) and NoSQL databases (MongoDB, Apache Cassandra, DynamoDB, CouchDB).
Proficient in unit testing with JUnit, Mockito, and Power Mock frameworks.
Experienced in using build tools like Gradle, Maven, and ANT.
Good knowledge of software configuration management using SVN, GitHub, GitLab, and Bitbucket.
Worked with servers like Apache Tomcat, WebLogic, and JBoss for configuration and deployment.
Familiar with Spring Cloud-Netflix OSS for microservices deployment.
Well-versed in J2EE design patterns, such as DAO, Service Locator, MVC, Singleton, etc.
Developed server-side applications using NodeJS for non-blocking web-based applications.
Used Docker containers for hybrid cloud deployment and collaboration.
Deployed applications using Kubernetes for zero downtime deployment. TECHNICAL SKILLS:
Dev Language Java, Python.
Java Technologies Spring Boot, Spring MVC, Hibernate, Servlets, JDBC, JSP. JavaScript Technologies React, Redux, Angular, NodeJS, jQuery. Database Oracle, MySQL, MongoDB, Cassandra.
Web Services RESTful, SOAP.
Web Technologies HTML, XML, CSS, JavaScript, jQuery, AJAX, Bootstrap. Web Servers WebLogic, JBoss, Tomcat.
Testing JUnit, Jasmine, Karma, Mockito, Selenium.
Build Tools Jenkins, Maven, Gradle.
Version Control Git(Terminal, Hub & Lab), Bitbucket. DevOps Tools Docker, Kubernetes.
PROFESSIONAL EXPERIENCE
Client: Fiserv Sept 2021 to Present
Role: Full Stack Developer
Responsibilities:
Played a key role in the Software Development Life Cycle (SDLC) of the application, actively participating in requirement gathering, design, analysis, and code development phases.
Developed multiple front-end screens using ReactJS and Flux framework, leveraging their powerful features to create interactive and dynamic user interfaces.
Leveraged Reacts lifecycle methods, such as componentDidMount, shouldComponentUpdate, and componentWillMount, to enhance the user experience and ensure smooth component rendering.
Implemented React Hooks to manage state and lifecycle methods within functional components, resulting in reduced complexity and improved maintainability and extensibility of the system.
Designed and implemented forms in HTML5 and ReactJS, ensuring seamless data collection and validation for enhanced user interaction.
Utilized React Bootstrap to create responsive web designs, effectively building grids, layouts, and components that adapt seamlessly across different devices and screen sizes.
Worked on the development of responsive internal applications aimed at capturing and analyzing user and agent metrics using ReactJS.
Set up Jasmine and Karma frameworks for unit and functional testing of JavaScript code, incorporating mocking frameworks for efficient and reliable testing.
Upgraded existing services to leverage the new features introduced in Java 11, such as Lambdas, Streams, Observable, and Completable Futures, to enhance performance and productivity.
Built modular layers of different modules using Spring Boot in a Microservices Environment, enabling flexible and scalable application architecture.
Implemented Spring Security for seamless authentication and authorization of the application, ensuring secure access to protected resources.
Oversaw and developed Notification Service microservices, providing a robust and scalable solution for enterprise- wide notification requirements.
Created a client library that facilitated load-balanced Spring Boot Microservices, enabling efficient communication and collaboration between different services.
Developed Restful Web services using technologies such as Apache CXF, WebLogic, Web Service Tools, Spring MVC, and Jersey, ensuring seamless integration between web applications and backend APIs.
Implemented Restful Web services for retrieving data from the client side, utilizing REST API calls from Node.js, and incorporating data parsing and security measures using Spring Security or OAuth.
Produced and consumed multiple REST APIs, seamlessly fetching data from databases, executing stored procedures, and integrating with third-party APIs.
Developed a microservice that extracted data from PostgreSQL, generated a flat file, and seamlessly transmitted it to AWS S3 for efficient data storage and management.
Leveraged Spring framework, including Spring core/IoC, Spring Web, and Spring Security, to implement robust authentication, authorization, and access-control features using Spring Security.
Demonstrated expertise in implementing Microservices using Spring, Spring Boot, and Spring Cloud, enabling efficient and scalable distributed systems.
Utilized JIRA as a project management tool to track user stories, monitor progress, and follow Agile methodologies for efficient project execution.
Leveraged Spring Kafka API calls to ensure smooth message processing in a Kafka Cluster setup, enabling efficient communication and event-driven architecture.
Authored and maintained comprehensive Wiki documents for planning, installation, and deployment of Elk Stack and Kafka, ensuring smooth knowledge transfer and reference for the team.
Developed multiple JPA queries to efficiently fetch records from NoSQL DB MongoDB, optimizing data retrieval and manipulation.
Demonstrated expertise in JUnit testing using Mockito and Power Mockito, performing comprehensive unit testing, integration testing, and SOAP UI testing to ensure the quality and reliability of the software.
Utilized Jenkins for seamless environment migration, deployment scripts, and build management using ANT, ensuring efficient software delivery and continuous integration.
Effectively employed Docker containers to address application deployment challenges across hybrid cloud environments, facilitating seamless collaboration and portability.
Implemented various AWS solutions, including EC2, S3, RDS, EBS, Elastic Load Balancer, and Auto-scaling groups, leveraging the AWSSDK to connect with Amazon SQS for efficient bulk email processing. Environment: Java 11, HTML5, CSS3, AJAX, Bootstrap, jQuery, React JS, Redux, JavaScript, ECMAScript, Karma, Jasmine, Microservices, REST API, RESTful services, Spring, JWT, Kafka, MongoDB, Redi, Swagger, Junit, Maven, Gitlab, Jenkins, AWS, JSON, XML.
Client: ATT July 2019 to August 2021
Role: Full Stack Developer
Responsibilities:
Maintained existing UI Applications and upgraded them using CSS3, jQuery, AJAX, JavaScript, JSON, and HTML5.
Develop various screens for the front end using Angular 8 and Angular 11 and used various predefined components.
Implemented the single page web application-based front end for displaying user requests, user records history and security settings for various users using Java 11 and Angular 11.
Developed application is built Microservice Oriented Architecture using MEAN (Mongo DB, Express Angular 11) stack and developed Single Page Applications (SPA).
Utilized Angular 8 as a framework to develop component-based Single Page Applications (SPA), leveraging its capabilities for data binding, view synchronization, and promoting reusability and maintainability in application development.
Used webpack, babel, and gulp for transpiration (compilation) configuration for typescript to be converted to JavaScript.
Worked extensively on unit testing of JavaScript applications using Karma, Jasmine, and Mocha, ensuring the reliability and functionality of the codebase.
Leveraged Java 11 features, including streams, lambda expressions, default methods, static methods, and the Concurrency API, to enhance code efficiency, maintain interface compatibility, and ensure concurrency in the project.
Designed and developed the REST-based Microservices using the Spring boot presentation layer code.
Used Spring Boot which is radically faster in building cloud Microservices and developing Spring-based applications with very less configuration.
Implemented Angular services to connect the web application to back-end APIs and Used Microservices with Spring Boot through a combination of REST and Apache Kafka.
Developed web-based controllers using Java, J2EE, RESTful web services, MVC framework, and MySQL, ensuring seamless integration between the frontend and backend components.
Combined Java's capabilities for data processing and Power BI's real-time features, and developed Java applications that display live data updates and perform real-time analytics.
Developed RESTful web services to interact with SQL databases using Java frameworks like Spring and Spring MVC, enabling seamless data retrieval and manipulation.
Developed web components following the MVC pattern in the Spring framework, ensuring modular code structure and effective separation of concerns. Leveraged Spring framework to facilitate dependency injection, transaction management, and service integration for efficient and maintainable application development.
Leveraged Spring framework concepts such as dependency injection (DI)/Inversion of Control (IoC), Aspect-Oriented Programming (AOP), batch implementation, and Spring MVC for efficient and scalable application development.
Implemented declarative transaction management using Spring AOP, ensuring consistency and integrity in database operations.
Utilized Spring JDBC Template for performing CRUD operations with databases, simplifying database interactions and enhancing productivity.
Designed and integrated a full-scale Spring/Hibernate persistence solution with the application architecture, ensuring efficient data storage and retrieval.
Implemented object-relational persistence (Hibernate) for the domain model, effectively mapping database entities to POJOs and enabling seamless integration between the business logic and data layer.
Played a key role in the design and development of the Hibernate domain model for services, ensuring efficient and optimized data access and manipulation.
Demonstrated hands-on experience in using message brokers such as RabbitMQ, facilitating reliable and asynchronous communication between distributed components.
Tested API (validating each API endpoint) using Postman and curl and worked with developers to automate API functional testing.
Developed test cases and performed unit testing using JUnit Test cases UI for Functional Testing, Performance Testing, and Regression Testing and to test REST.
Used Shell script, Git as version control, Maven for artifact build, Log4j as logging framework, and Jenkins as CI/CD tool.
Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container Service-Docker.
Environment- Angular 11 & 8, TypeScript, JavaScript, Jasmine, Karma, Java 8 & 11, Microservices, REST API, RESTful services, Spring Boot, Spring, Hibernate, OAuth, RabbitMQ, Oracle, Postgres, Postman, JUnit, Power Mock, Mockito, Maven, Tomcat, Docker, AWS, JSON.
Client: Temenos June 2018 to June 2019
Hyderabad, India
Role: Full Stack Developer
Responsibilities:
Designed and developed a highly responsive Intranet website using React JS, implementing modern UI/UX principles and ensuring seamless user interactions. Leveraged React JS lifecycle methods to optimize component rendering and manage state updates effectively.
Proficient in ReactJS lifecycle management and adept at integrating Redux architecture to efficiently handle complex data flows, state management, and asynchronous actions within the application.
Utilized React Router extensively to develop Single Page Applications (SPAs), enabling smooth and dynamic navigation between different views and components. Implemented route configuration and navigation logic to deliver a seamless user experience.
Used Axios with React JS for making AJAX Calls. Worked on Webpack for build and webpack-dev-server server.
Experienced in deploying the SPA React JS in AWS S3 Bucket and Route 53 and through CLI configuration.
Created typescript reusable components and services to consume RESTAPIs using component-based architecture using angular 8.
Worked on some of the new features of Angular 8 like new if else syntax, ng-templates, and form validators.
Implemented client-side Interface using Angular 8 and Node.js to structure JavaScript code in an MVC.
Implemented MVC architecture using JSP, Spring, and Hibernate and used Spring Framework to initialize managed beans and services.
Used Typescript new features block scope, type restrictions, decorators, arrow functions, classes, interfaces, and modules (import and exports).
Utilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.
Used Spring Boot which is radically faster in building cloud Microservices and developed Spring-based applications with very less configuration.
Used Microservices with Spring Boot through a combination of REST and Apache Kafka.
Responsible for developing the AWS lambda Microservices for the POC application which I have developed.
Developed the monolithic application and was involved in migrating existing monolithic applications into Micro Service Architecture based RESTful Service and deployments were done on AWS.
Developed Restful Micro Services using Spring Rest and MVC, for OSS services.
Worked on developing Restful endpoints to cache application-specific data in in-memory data clusters like REDIS and exposed them with Restful endpoints.
Consumed Web Services to interact with other external interfaces to exchange data in different forms by using Restful service.
Designed, developed, and implemented Micro Services business components using Spring Boot, encompassing various layers of the application such as entity/model, DAO/repository, Controller, Service, Business, and Persistence, to build robust and scalable backend servers for multi-tier applications.
On the server side, used Spring MVC with Hibernate to connect with Microsoft SQL Server.
Used Hibernate Criteria API for query database and perform other CRUD operations as much as possible.
Developed Kafka consumer's API in Scala for consuming data from Kafka topics.
Consumed XML messages using Kafka and processed the XML file using Spark Streaming to capture UI updates.
Create, schedule, and run the scenarios using JMeter and generate necessary graphs.
Extensively worked on JMeter to create Thread Groups and test Web Applications for various loads on key business scenarios.
Developed unit test cases using Mockito framework for testing the accuracy of code and logging is done using SLF4j
+ Log4j.
Configured bamboo automating the builds into the Gradle archive repository.
Used git and Bitbucket for version control and collaboration.
Installed, and configured other essential tiles in PCF such as MQSQL, Redis, Spring Cloud Services, and PCF Metrics across all environments.
Responsible for upgrading PCF platforms including all service tiles.
Developed REST web service using Jersey which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications.
Environment- React, Redux, Angular 8, JavaScript, TypeScript, Java 8, Microservices, Spring Boot, Docker, REST API, RESTful services, Hibernate, Camel, Kafka, MongoDB, JMeter, Junit, Gradle, Maven, Bitbucket, PCF, JSON. Client: Purple Talk July 2016 to May 2018
Hyderabad, India
Role: Full Stack Developer
Responsibilities:
Developed the Component-based framework Application using Angular 4.
Familiarized with Angular CLI for building and creating a component, services, modules, and initialized routing functionalities.
Developed the various feature of the application using front-end technologies like Angular 4.
Responsible for setup Jest for Unit and Functional Testing of JavaScript wif mocking frameworks. Working wif ECMA Script 6 features. For the build of JSX and ES2015(ES6) used Babel, webpack.
Used JAX-WS SOAP for producing web services and was involved in writing programs to consume the web services using SOA with CXF framework.
Developed web services SOAP, WSDL, and web services clients using JAXB and XML, implemented SOA architecture.
Developed the RESTful web services to call the SQL DB using Java Frameworks like Spring and Spring MVC.
Designed back-end server based on Rest API, Hibernate, and Spring Data JPA.
Used JMS-MQ Bridge to send messages securely, reliably, and asynchronously to Web Sphere MQ, which connects to the legacy systems.
Delivered zero defect code for three large projects which involved changes to both the front end (Core Java, Presentation services) and back end (Oracle).
Worked on importing and exporting data from Oracle and DB2 into HDFS and HIVE using Sqoop for analysis, visualization, and generating reports.
Involved in developing Unit Test cases and testing the Application using SOAP-UI and Developed web services in Java and Experienced with SOAP.
Used version control repository GIT and JIRA for issue tracking in deploying applications in the Tomcat server.
Developed the credit check module using Servlets and JSP Core Java components in Web logic Application Server.
Strong experience in setting up monitoring tools for PCF infrastructure such as Healthwatch, PCF Metrics, Splunk (Logs from PCF to Splunk) and AppDynamics for applications. Environment- JavaScript, HTML, jQuery, Bootstrap, AJAX, Angular 4, ECMAScript, Soap, Spring, Hibernate, JMS, Apache Camel, JDBC, Oracle, DB2, Jenkins, GitHub, PCF.
Contact this candidate