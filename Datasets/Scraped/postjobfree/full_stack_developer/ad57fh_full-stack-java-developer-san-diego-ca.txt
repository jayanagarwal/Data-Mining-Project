Inzamam Ali
619-***-**** ad57fh@r.postjobfree.com
SUMMARY:
Full Stack Java Developer with 4+ years of experience in application development with focus on designing, developing, and deploying testing of responsive web applications and microservices using Spring cloud and spring boot.
Experience working with various SDLC methodologies based on Agile/SCRUM-like Test Driven Development (TTD), Incremental and Iteration methodology, Pair Programming, and Agile Development.
Experience in developing User Interfaces using Angular framework, React JS, HTML, CSS, and JavaScript.
Experience in developing Graphic User interfaces using JavaScript and JS frameworks, JSP, CSS 3, HTML 5, Node.js, Bootstrap, AJAX, React, Angular 8 and above.
Developed core modules in large cross-platform applications using JAVA, J2EE, Hibernate, JSP, Servlets, JDBC, JavaScript, Ajax, jQuery, XML, and HTML.
Excellent Programming skills and Development Experience with JDK 8, J2EE, Servlets, JSP, UI, EJB, Java Beans, GWT, JMS, JDBC, XSLT, JUnit, and Web Services.
Expertise in Microservices development dealing with Traffic Management and scope functionality, highly proficient in designing n-tier Enterprise applications with J2EE design patterns like IOC (Inversion of Control), AOP (Aspect Oriented Programming), MVC, Business Delegate, Service Locator, Session Façade, DTO, DAO, Front Controller, Factory, and Singleton.
Implemented AWS solutions using EC2, S3, DynamoDB, EBS, Elastic Load Balancer, and Auto scaling groups. Experience in CI/CD – Jenkins, Docker, and Logging tools Log4J. Good knowledge of various cloud environments like AWS, PCF, Azure, and GCP.
Java Enterprise application design and development using Java Spring modules like Spring MVC, IOC, AOP, JDBC, Spring Boot, and Spring Microservices. Also used Core Java with Multithreading, Concurrency, File Handling I/O, Generics, Data Structures Collections, Garbage Collection, and Lambda expressions.
Experience in persistence frameworks like Hibernate/JPA Entities for mapping Java classes using Hibernate Query Language.
Experience in the development and implementation of Restful Web Service as a Provider and consumer using messaging medium as JSON and implemented-based web services, WSDL, and UDDI using XML over HTTP(s), SOAP, WSDL, Restful protocols.
Developed a serverless application using AWS lambda in integration with API gateway, S3, IAM, EC2, and Code Deploy.
Expertise in software configuration management using CVS, SVN, and IBM Clear Case.
Hands-on experience with build tools like ANT, and Maven and logging tools like Log4J.
Expertise in writing unit test cases with Mockito and JUNIT and performing integration testing.
Experience in working with Relational Databases like Oracle, MySQL, DB2, and MS SQL Server using SQL, PL/SQL, and NoSQL databases such as MongoDB & Cassandra.
Experience in Splunk for logging error/debugging messages and managing them.
Experience in working building tools like Ant, Maven, Gradle, and Docker for Continuous Deployment.
Extensive knowledge of GIT to maintain the version of the files and took the responsibility to do the code merges from branch to trunk. GitHub and Bit Bucket as Source Code Repositories.
Experience with browser testing, and knowledge of cross-browser/cross-platform compatibility.
Excellent working knowledge and thorough exposure on compatibility issues with different versions of browsers like Internet Explorer, Mozilla Firefox, Safari, and Google Chrome.
Proficient in Quality Control - includes ensuring defect-free releases, maintaining correct entries in Design Docs, UI specs, Test Cases, and Traceability Matrix.
Spearheaded Application Developer conversant with developing applications using various servers including Apache Tomcat, IBM WebSphere, BEA WebLogic and JBoss Application Server.
Experienced in developing UNIX Shell Scripts for batch processing.
Expertise in using unit testing frameworks JUnit, Mockito, Power Mockito, Selenium, Cucumber, Jasmine, and Karma. Experience in testing methodologies using White box, gray box, and black box testing techniques manually.

EDUCATION:
Masters from Alliant international university, California, USA.
Bachelors from Osmania University, India.

TECHNICAL SKILLS:
Languages
Java 11/8.0, Python, C, C++, SQL, PL/SQL
Java Technologies
J2EE, EJB, Java Beans, JDBC, Servlets
J2EE Technologies
Servlets, JSP, Spring, STRUTS Framework, JSF, Hibernate, Java Beans, JDBC.
Web UI Technologies
HTML/HTML5, XML, CSS/CSS3, Bootstrap, JSP, Ajax, NodeJS, Express, ReactJS, AngularJS, Angular 8 and above
Web Services Technologies
SOAP, REST
Databases
MySQL, Postgre SQL, MongoDB, NoSQL, Elastic Search, Cassandra DB2, PL/SQL
Cloud Environments
PCF, AWS, Azure, GCP,
Application Server
Apache Tomcat, GlassFish, WebSphere
Logging Framework
Log4J, SLF4J
Application Frameworks
Spring, Hibernate, IBATIS
IDE
Eclipse, Net Beans, Visual Studio.Net, Xcode, IntelliJ 2021.3.2
Build Tools
Maven, ANT 1.10, Gradle
Testing &Bug Tracking Tools
JUnit, Mockito, Power Mockito, JIRA 7.0, Selenium, Cucumber, Jasmine, Karma

PROFESSIONAL EXPERIENCE:
Client: Edward Jones, CA, Remote Duration: September 2022 to Present
Role: Full Stack Java Developer
Responsibilities:
Involved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications, Development, and customization of the Application.
Implemented Agile (SCRUM) methodology and Test-Driven Development (TTD) for the software development process and to produce high-quality applications.
Developed User Interface using HTML5, and CSS3 for interactive cross-browser functionality and complex UI.
Worked with React JS in developing a website to make it more interactive, stateful, and reusable component.
Developed data insertion forms and validated them using React JS.
Utilized Java 11 enhanced performance and stability to develop robust backend solutions, ensuring efficient data processing and seamless integration within the full-stack application.
Successfully migrated legacy Java applications to Java 11, ensuring seamless compatibility and adherence to the latest language standards.
Leveraged core Java features such as classes, objects, inheritance, and polymorphism to create modular and maintainable code.
Maintained Cross Browser compatibility and designed dynamic client-side JavaScript, codes to build web forms and simulate processes for web applications, page navigation, and form validation.
Implemented REDUX to resolve the application’s global state management, especially for user login status.
Designed and developed the REST-based Micro Services to create, read, update, and delete information on a server with simple HTTP calls using the Spring Boot.
Implemented the application using Spring Boot Framework 2.5 and handled the security using Spring Security in Web application using OAUTH 2 with OpenID.
Worked on Java 1.8 concepts involving Streams, lambda expressions, Functional Interfaces, and Optional Features.
Used Java 11 for backend coding of the application.
Used Hibernate to retrieve the data from Database tables and map it to the Java model objects.
Used Spring Data JPA and CRUD repository features from Spring Data Repository Library.
Extensively worked on writing SQL queries and stored procedures to retrieve data from the MS SQL server 2016.
Development and implementation of an Asynchronous communication interface using Rabbit MQ.
Used MongoDB for the NoSQL database for quick filtration in list pages of the application.
Used Pivotal Cloud Foundry (PCF) as a cloud service for the application.
Orchestrated the design and deployment of cloud infrastructure on AWS, utilizing services like EC2, S3, and RDS to ensure the availability, scalability, and security of applications.
Developed spring boot application to consume micro services data and write it to Kafka.
Demonstrates active pursuit of optimizing CI/CD process and tools, testing frameworks and practices (preferably GitHub, Jenkins, Mocha/Karma, etc.)
Leveraged AWS Lambda and API Gateway to architect and develop serverless applications, optimizing resource usage and reducing operational complexities.
Successfully integrated Azure services like Azure Virtual Machines and Azure App Services into application architecture, ensuring reliable and efficient hosting.
Used Maven as a build tool in Spring Boot for the build process.
Used GIT as a Version Control System and GitHub as the source code repository.
Participated in performing extensive Unit Testing for the application using Junit, Mockito, and Power Mockito. Used POSTMAN to test the RESTful APIs.
Used Jenkins as a part of CI/CD tool and used Nexus repository to store generated artifacts and deployed in Docker containers.
Tracked software issues and project progress enterprise-wide using JIRA.
Performed peer code reviews, involved in testing the applications by continuous improvement measures with the lead/manager inputs.
Environment: Core Java, Java 11, HTML5, CSS3, XHTML, Angular, RESTful APIs, JAX-RS, Spring framework, Apache, JSON, MVC, XML, Java API, Spring boot, Spring MVC, NoSQL, MongoDB, Apache Kafka, microservices, Oracle database, Docker, Node.js, Express.js, AWS, Azure, Kubernetes, Junit, Cucumber, Jira, Git.

Client: TCS, Remote Duration: February 2021 to July 2022
Role: Full Stack Java Developer
Responsibilities:
Responsible for gathering business requirements and writing functional specifications.
Designed and developed the application in sprints using Agile Scrum methodology and participated in weekly status meetings and daily scrums.
Involved in software development life cycle (SDLC), which includes requirement-gathering, design, coding, and testing.
Developed rich Single Page Applications, AngularJS, jQuery, AJAX, HTML/XHTML, JavaScript, CSS, and XML.
Worked with Bootstrap to compile CSS, and JavaScript and build the System with the convenient methods with AngularJS.
Developing scripts for build, deployment, maintenance, and related tasks using Jenkins, Docker, Maven, Python, and Bash.
Used Hibernate for object-relational mapping (ORM) and persistence.
Experience with tools like Experience with Docker Images/containers and Kubernetes.
Developed Custom Tags to simplify the JSP code. Designed UI screens using JSP, CSS, XML, and HTML. Used JavaScript for client-side validation.
Developed Kafka connect configurations to write data from Kafka topics to Elastic Search.
Developed User Interface using business driven reusable custom tag libraries for multipage web applications and HTML5, CSS3, Bootstrap, and TypeScript for single-page web applications.
Created Multiple Re-usable UI Directives by defining Angular 11 Directives, Attaching Event Listeners, Controllers and updating DOM elements.
Enhanced application performance by Angular 11 Component-based development given future Angular framework transitions.
Used various Angular 11 custom directives and developed reusable components and templates that can be re-used at various places in the application.
Proficient in working with RESTful APIs and integrating them into Angular applications using the Angular HTTP Client module for fetching and manipulating data.
Created and injected Spring services, Spring controllers, and DAOs to achieve dependency injection and to wire objects of business classes.
Integrated Spring MVC with Angular. Implemented Service, Controllers, Repository and Model classes.
Used Hibernate as an ORM layer to retrieve data from the database.
Used Java concepts like Collections, Generics, Exception handling, and OOP concepts to develop business logic.
Worked on NoSQL database like DynamoDB as data storage and utilized aspects like replica sets, sharing, and clever document design to make the service extensible scale and feature-wise.
Developed test cases using Junit, Jasmine, and Karma.
Used Kafka to consume messages from the Legacy System and publish them to the Kafka topic.
Once the messages are available in the Kafka topic, use the downstream systems to process the messages.
Designed, configured, and deployed containers and Microservices using EC2 Container in Amazon Web Services (AWS)
Used Serverless application for back end used AWS lambda, and to host the Serverless web application.
Used Node.js and Java as programming languages in AWS Lambda.
Used AWS Dynamo DB as a database and used AWS Cloud Watch to view the logs.
Used AWS S3 to host the front end of the application.
Used AWS API gateway to configure Rest APIs for the back end of the application.
Used JWT token for Authentication and Authorization purposes.
Used GIT to maintain the version of the files and took the responsibility to do the code merges by creating a new branch when new feature implementation started. Used Bitbucket as source code repository.
Used Gradle as a build tool for building the application and Jenkins for automating the builds.
Used JFROG as an Artifact Storage.
Tracking the changes in JIRA and making sure the required defect fixes are being pushed to the upper environments.
Environment: JDK 1.7, Core Java 8, J2EE, JSP, AJAX, Log4j, JQuery, Docker, RESTful Web Services, ReactJS, JSON, XML, JAX-WS, Apache CXF, AngularJS 4, Spring, Hibernate, JavaScript, Angular2/4, HTML/XHTML, Bootstrap, EJB, ANT, Python, JUnit, GIT, TIBCO, Tomcat, CSS, Oracle.

Client: BEL, India Duration: February 2020 to January 2021
Role: Intern/Jr. Java Developer
Responsibilities:
Implemented Agile Methodology for the software development process.
Experienced in creating reusable components, directives, services, and modules in Angular 8 to promote code modularity and reusability.
Strong understanding of HTML, CSS, and JavaScript, and their integration with Angular for building robust and responsive web applications.
Proficient in JavaScript for building interactive and dynamic web applications.
Designed the application by using Spring Framework.
Extensively used Spring MVC framework to develop the web layer for the application.
Used J2EE design patterns like Value Object Pattern, MVC, Session Facade, Business Delegate, Service Locator, and DAO.
Used Hibernate ORM framework as persistence engine, configured O/R mapping, and wrote Hibernate queries using HQL.
Developed all JSPs, action classes, and helper classes involved in the project.
Integrated the application with Spring Framework for implementing Dependency Injection and provided abstraction between the presentation layer and the persistence layer.
Implemented Controller and mapped it to a URL the.servlet.xml file.
Implemented JSP corresponding to the controller where in the data was propagated into it from the model and view object from the controller.
Developed JSP as the view, and Servlets as Controller in the Struts Framework.
Parsed the data retrieved from the database using JAXB.
Exposed various capabilities such as Web Services using SOAP and WSDL.
Configured and created application log files using slf4j 1.6 required to trace messages.
Used SOAPUI for local testing.
Worked in Requirements gathering Designed Application flows and developed UML diagrams.
Environment: Java, Spring, Spring JSP, Hibernate 3.0, Angular 8, JavaScript, Oracle 10g, HTML, XML, JSON, SOAP, WSDL, JUnit, ANT, slf4J, SVN, Tomcat, Eclipse, Servlets.
Contact this candidate