SHARATH YAMMANUR
ad5237@r.postjobfree.com
469-***-****

PROFESSIONAL SUMMARY

A skilled Node MERN full stack developer on H1B visa with 7+ years of experience specializing in developing, testing, and deploying robust, scalable, and secure web applications. Implemented responsive user interfaces using React Fronted framework and built APIs using Node Express middleware. Proficient in AWS and holds AWS Solutions Architect Professional Certification and well versed in containerization technologies Docker and Kubernetes. Adept in Agile methodologies, working collaboratively in a team environment to consistently achieve project objectives within deadlines. Ready to drive impactful solutions.
Summary:
Full Stack Web Developer with over 7+ years of expertise in building scalable and efficient web applications using the MERN stack (MongoDB, Express.js, React.js, Node.js) in a Microservices Architecture.
Utilized JavaScript-based technologies like Node.js, Express.js, React.js, and Next.js to build robust and scalable web applications.
Developed RESTful APIs using Express.js and integrated them with React.js frontend using technologies such as Axios, Redux, and react-router.
Implemented Microservices architecture using Express.js, Mongoose, RabbitMQ, Kafka, and MySQL, with deployment and scalability leveraging AWS services.
Performed MongoDB database modeling and administration, utilizing Mongoose for object modeling and efficient querying.
Built load-balanced applications within a Microservices architecture using Express.js and Eureka Service Discovery for service discovery and communication.
Created responsive web designs within React.js applications using HTML5, CSS3, JavaScript, jQuery, AJAX, Bootstrap, and Media queries.
Developed Single Page Applications (SPAs) using React.js, Next.js, Redux, and incorporated advanced features such as form validation, Higher-Order Components (HOC), and JSX.
Designed and implemented RESTful APIs using Express.js, employing middleware, routing, and error handling for seamless integration with React applications.
Performed comprehensive testing of React applications using Jest and React Testing Library, including unit tests, integration tests, and end-to-end testing using tools like Cypress or Puppeteer.
Demonstrated strong programming skills in building MERN stack applications using Node.js, Express.js, and MongoDB for efficient backend development.
Utilized modern build tools like Webpack and Parcel for bundling frontend assets and managing dependencies in MERN stack applications.
Deployed and managed MERN stack applications on cloud infrastructure services like AWS EC2, S3, CloudFront, and Route53.
Implemented serverless architectures with AWS Lambda, API Gateway, and DynamoDB, leveraging event-driven computing for enhanced scalability and cost-effectiveness.
Containerized MERN stack applications using Docker and deployed them on container orchestration platforms like Kubernetes for efficient management and scaling.
Established and managed CI/CD pipelines for Node applications using GitHub Actions, Jenkins, or AWS CodePipeline to ensure seamless deployment and continuous integration.
Utilized MongoDB for data modeling, querying, and performance optimization in MERN stack applications.
Utilized frontend frameworks like React.js and Next.js, along with popular libraries like Redux or React Router, to develop interactive and responsive user interfaces in MERN stack applications.
Implemented caching mechanisms using Redis and Memcached to optimize performance and reduce response times in Node-React-MongoDB applications.
Expertise in Java concepts like OOPs, multi-threading, JUnit, and advanced Java concepts like JSP, Servlets, HTML, XML, Hibernate, Java Beans, and Spring.
Strong experience in developing applications with Restful Web Services and gRPC protocol.
Diverse experience utilizing tools in Microservices architecture applications using Spring Boot, Spring Cloud config, Netflix OSS components (Eureka, Zuul, Hystrix), AWS, RabbitMQ, Kafka, Zookeeper, MySQL, and Restful Web Services.
Implemented authentication and authorization mechanisms such as OAuth or JWT to secure MERN stack applications and protect sensitive data.
Worked within Agile software development methodologies Scrum and Kanban, collaborating with cross-functional teams to deliver high-quality MERN stack applications.
Applied Computer Science fundamentals, Data Structures, Algorithms, and Object-Oriented Programming concepts to develop and optimize MERN stack applications.
Produced comprehensive technical documentation, including API documentation and system architecture diagrams, using tools like Swagger and Markdown.
Applied strong troubleshooting and debugging skills to diagnose and resolve complex issues in MERN stack applications through effective logging, monitoring, and analysis.

Technical Skills:

Languages
JavaScript, TypeScript, Python, Java, Solidity
Web Development Frameworks
Express, Nodejs, ReactJs, Redux, NextJs, Redux, Axios, Mongoose, Webpack, Parcel, Angular JS, EJS, Pug, RESTful APIs, OAuth, JWT
Cloud
GCP, AWS EC2, S3, AWS Lambda, Dynamo DB, Docker, Kubernetes Heroku, Netfliy
Application webservers
Apache tomcat, Microsoft IISv10
Databases
MongoDB, Firebase, PostgreSQL, Oracle, MySQL, Redis, Cassandra
Messaging Systems
Apache Kafka, RabbitMQ
Markup Languages
HTML, JSON, XML, YAML
Development tools
Pycharm, Jupyter Notebook, VS Code, Git
Configuration Management
Jenkins, Terraform
Operating systems
Windows, Linux
Testing Tools:
Jest, puppeteer, Postman, Insomnia
Software Methodologies:
Agile Scrum

PROJECTS

US Bank (End Client) May 2023 – Present
Node MERN Software Developer

Responsibilities:
Implemented message queuing systems like Apache Kafka or RabbitMQ for building scalable and event-driven architectures in MERN stack applications.
Utilized ELK stack (Elasticsearch, Logstash, Kibana) for log analysis and troubleshooting, ensuring effective monitoring and issue resolution in production environments.
Developed web applications with dynamic user interfaces using Node.js and JavaScript.
Utilized Sequelize, an ORM library for Node.js, for full control over SQL databases and implemented database migrations for seamless schema management.
Created front-end functionality using HTML, CSS, and JavaScript, leveraging libraries like jQuery and Reactjs for enhanced interactivity.
Integrated automated documentation generation using tools like JSDoc and developed continuous integration workflows with Node.js, Express.js, and GitHub.
Developed single-page applications using Node.js and its frameworks like Express.js and Next.js for efficient server-side rendering and client-side rendering.
Managed and processed large datasets using Node.js and libraries like CSV or Exceljs and interacted with SQL or NoSQL databases like MySQL or MongoDB for data storage and retrieval.
Designed and implemented data models, collections, and schemas for MongoDB databases, ensuring efficient storage and retrieval of data.
Utilized AJAX and Fetch API in Node.js applications to transmit JSON data objects between the frontend and backend controllers.
Wrote Node.js scripts to parse XML and JSON documents, extracting relevant data and storing it in databases.
Demonstrated end-to-end project lifecycle involvement in Node.js development, including design, development, testing, deployment, and support.
Utilized Node.js and AWS SDKs to interface with relational databases like Amazon RDS (MySQL, PostgreSQL), optimizing queries and indexing for efficient data retrieval.
Worked with NoSQL databases MongoDB and Amazon DynamoDB, utilizing data modeling and indexing for efficient and scalable data storage in a serverless environment.
Developed unit and integration tests using Jest and Mocha for Node.js, ensuring the quality and reliability of the codebase.

Amazon Web Services, Seattle, Washington June 2022 – April 2023
Software Development Engineer

Responsibilities:
Knowledge of software engineering best practices for the full software development lifecycle including Agile development, coding standards, code reviews, source control management, build processes, testing, and operations.
Proficiency with Computer Science fundamentals in object-oriented design, data structures, algorithm design, problem solving and complexity analysis.
Developed the functionalities under Agile Methodology, and JIRA processes and used JIRA for task assignment, bug tracking, and fixture.
Implemented Node.js modules for handling events and ensuring seamless communication between Microservices in the event-driven architecture.
Worked on designing and optimizing the data flow and event processing mechanisms in the Node.js application, ensuring efficient and real-time credit data updates.
Developed RESTful APIs using Node.js and Express.js middleware, implementing routes, request handling, and middleware for data retrieval and manipulation.
Designed and implemented MongoDB database schemas and models for efficient data storage and retrieval in Node.js applications.
Utilized Mongoose ODM (Object Data Modeling) library to interface with MongoDB, defining schemas, performing CRUD operations, and managing database connections.
Implemented user authentication and authorization functionalities using Passport.js library and JSON Web Tokens (JWT) in Node.js and Express.js applications.
Worked with asynchronous programming techniques such as callbacks, Promises, async/await in Node.js and Express.js applications for efficient handling of concurrent operations.
Deployed Node.js and Express.js applications on AWS cloud platforms using technologies like Docker and container orchestration tools.
Designed and implemented a microservices architecture using Node.js and AWS Lambda, reducing the monolithic architecture's complexity and enabling better scalability and fault-tolerance.
Implemented logging and monitoring solutions using Winston and Elastic Stack to ensure efficient application performance monitoring, log analysis, and troubleshooting in production environments.
Collaborated with front-end developers and designers to integrate Node.js and Express.js backends with client-side applications, ensuring seamless functionality.
Developed RESTful APIs using Node.js and Express, utilizing AWS API Gateway for API management and integration with various AWS services like Lambda, DynamoDB, and S3.
Worked with AWS AppSync for inter-service communication, enabling faster and more efficient data transfer between microservices in a serverless environment.
Applied responsive web design principles using React.js and CSS frameworks Bootstrap, Material UI and Tailwind CSS, ensuring optimal user experiences across devices.
Technologies: Java, Spring, Validator and Tiles Framework, JSP, JDBC, Spring Boot, Hystrix, Netflix ZUUL, Microservices architecture, Docker, Jenkins, Spring MVC, Spring Batch, Spring Security, Spring REST, Spring IOC, Hibernate, Cassandra DB, OAUTH, Apache Kafka, Splunk, PCF, Swagger, Webpack, Agile Methodology, Oracle, ETL, ZUUL Gateway, Maven, AWS EC2, AWS S3, Angular JS, Redux, Hapi JS, Node JS, Web pack, ECMA6, Mocha and Chai.

Snowstak Technologies, Charlotte, NC Jan 2021 – May 2022
Full Stack Java Developer

Responsibilities:

Worked in all phases of SDLC like Design, Development, Test, Validation, and Integration of the software.
Participate in scrum meetings and coordinate with business analysts to understand the business needs and implement the same into a functional design.
Worked with Microservices architecture using Spring Boot to modularize code and implemented Rest APIs using Spring Rest.
Extensively used various spring framework modules like MVC, Dependency Injection (IOC), Auto Wiring, Spring Security, and AOP. Created and injected spring services, spring controllers, and DAOs to achieve dependency injection and wire objects of business classes.
Responsible for analysis, design, development, and integration of backend components using J2EE technologies such as Spring 3 and Spring JDBC.
Worked with Spring Boot for implementing the application and used Spring Security for security authentication and authorization purpose and also worked on ZUUL gateway.
Designed & developed persistence service using Hibernate framework.
Hibernate was used as the ORM mapping tool and worked with Hibernate Query Language (HQL)
Implemented the automatic documentation for the API using Swagger, an OpenAPI specification.
Utilized job scheduler Appworx to schedule calls to third-party API and oracle database function, and stored procedure calls.
Used JDBC and also developed CMPs for database connectivity with Oracle.
Utilized Oracledb module in spring to connect, make database CRUD operations, execute oracle database package functions, and stored procedures.
Followed TDD with the help of the cucumber testing framework to test the APIs developed in nodeJS using Mocha.
Service discovery is implemented using Netflix Eureka.
Used multithreaded environment to run processes asynchronously using different future calls to access the data.

Technologies: Spring MVC, Spring Batch, Spring Security, Spring REST, Spring IOC, Hibernate, Java, Servlets, JSP, Struts, JSP tags, Custom Tags, JSTL, Tiles, Validation Framework, XML (DOM/SAX), SQL Server, SQL/PLSQL Stored Procedures, JUNIT, UML, and ANT, HTML5, CSS3, Angular 6, JWT, OAuth 2.0, JIRA, GitLab, Jenkins, Jasmine, Mocha, Cucumber, Splunk, Swagger API, Agile Methodology, Oracle, ETL, ZUUL Gateway, Azure, Azure functions, Azure apps.

Amazon, Hyderabad, India Jan 2020 – Dec 2020
Front End Engineer

Responsibilities:

Involved in requirement gathering, design, development, system testing, and user acceptance testing phases of the application.
Developed and maintained high-performance and scalable user interfaces using React, Angular, and Vue, as well as HTML, CSS, and JavaScript.
Collaborated with cross-functional teams, including UX designers and back-end developers, to deliver user-focused features and products that utilized front end frameworks such as Bootstrap and Material UI.
Implemented logging using log4j and Spring AOP and used Junit for testing.
Used Spring JTA transaction manager to remove the dependencies on the container.
Implemented the business layer of the application using Spring AOP, and Spring IOC.
Develop, enhance and maintain a spring boot-based microservices application.
Leveraged the latest front end technologies and frameworks, such as Webpack, Babel, and TypeScript, to improve the efficiency and maintainability of the codebase.
Contributed to the development of reusable components and libraries, utilizing front end tools such as Storybook and Lerna, to improve the scalability of the engineering team.
Implemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously, and send JMS messages on the edge device.
Developed Microservice to provide RESTful API utilizing spring boot with various data persistence frameworks such as Hibernate and JPA and messaging engines.
Demonstrated a deep understanding of web performance optimization techniques, accessibility standards, and responsive design principles to deliver fast and accessible user interfaces that utilized front end tools such as Lighthouse and Axe.
Developed test-driven development code using JUnit and Mockito framework.
Involved in developing JUnit test cases for testing the code fragments during the development phase.
Building the AWS Infrastructure using VPC, EC2, S3, Route S3, EBS, security group, Auto Scaling, and RDS in cloud formation.
Used Spring MVC, Tiles, JSP, HTML, CSS, JavaScript, and Jquery for implementing the presentation layer.
Multilayer applications construction using open JPA, dojo(Dijit), HTML5, and Spring MVC. Used HTML, XHTML, JavaScript, XML, XSLT, XPATH, JSP, and Tag Libraries to develop view pages.
Used JavaScript for client-side validation and validation framework for server-side validation.

Technologies: Spring MVC, Spring Batch, Spring Security, Spring REST, Spring IOC, Hibernate, Angular JS, AJAX, HTML, CSS, JSON, Junit, Mockito, Selenium, Cucumber, MySQL, PCF, RabbitMQ, SOA architecture, JSP, JDBC, JavaScript, Angular JS.

Inovus IT Solutions, Hyderabad, India October 2018 – Dec 2020
Sr Software (Full Stack Java) Developer

Responsibilities:
Participated in Agile (Scrum) methodology and was involved in the design, development, implementation, and testing of the enterprise applications.
Implemented various cross-project functionalities using Spring AOP and implemented transaction management using Spring AOP and used Spring Aspects for implementing logging functionalities.
Used Spring IOC to inject services and their dependencies and leveraged spring-hibernate and Spring MVC and Spring Boot modules.
Developed Spring Boot applications using spring data. Used Spring Boot-enabled discovery using Netflix Eureka Server.
Extensively involved in writing code by using Java Collections like LinkedList, Queues, HashSet, etc., Worked on the Java Collections API for handling the data objects between the business layers and the front end.
Developed the REST-based microservices using spring data and spring boot with JPA.
Implemented message router, composed message processor, and dead letter EIP for error handling using Apache Camel ESB.
Developed test cases for unit testing using Junit and performed builds and deployments using Maven and Jenkins.
Use Eclipse as an IDE tool to develop the application and JIRA for issue tracking. Use Log4J for logging and tracing the messages.
Developed back-end PL/SQL packages, and UNIX shell scripts for data migration and batch processing.
Created and customized UNIX shell scripts for automating regular maintenance and batch jobs.
Used ANT for automated build and deployment on IBM WebSphere.
Provided events notifications and messaging capabilities using AWS SNS and SQS.

Inovus IT Solutions, Hyderabad, India Oct 2016 – Sept 2018
Jr Software (Java) Developer

Responsibilities:
Developed an application based on Monolithic Architecture using Model View Controller (MVC) concepts.
Developed Project Specific Java APIs for the new requirements with Effective usage of Data Structures, Algorithms, and Core Java, OOPS concepts.
Implemented forms and action classes for the application using Struts Framework and EJB.
Developed EJB deployment descriptor using XML and used Jakarta XML Binding (JAXB) components for transferring the objects between the application and the database.
Developed web service for web store components using Restful API.
Used XML, XSD, and JSON messages for Data transfer. Used JAXB API and DOM for XML parsing messages.
Used the Multithreading concept to post data from files to tables involving the transformation of files from one format to another.
Developed dynamic web pages using JSP and used the Struts Validation framework to perform input validation.
Configured Struts-config.xml, Tiles-def.xml, and various properties files provided by struts Framework for the implementation module.
Implemented interceptor which is invoked during preprocessing and post-processing of a request in STRUTS 2.x.
Implemented OGNL (Object Graph Navigation Language) of STRUTS 2.x to simplify the accessibility of data stored in the ActionContext.
Build PL\SQL functions, stored procedures, views, and configured Oracle Database 10g with JDBC data source with connection pooling enabled.

Technologies: Java/J2EE, Struts, MVC, SVN, Log4j, OGNL, JSP, EJB, Servlets, JSP, HTML, CSS, JavaScript, JBoss, Subversion (SVN), Oracle, SQL Developer, JDBC, Struts framework, GIT.

Education:

Master of Science in Computer Science, SUNY Binghamton
Bachelor of Technology in Computer Science Engineering, Andhra University College of Engineering
Contact this candidate